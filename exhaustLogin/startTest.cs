using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Diagnostics;
using System.Threading;
using System.IO;
using SYS_DAL;
using SYS_MODEL;
using SYS.Model;
using VIDEOapi;
using Microsoft.Reporting.WinForms;
using System.Drawing.Printing;
using System.Drawing.Imaging;
using JxWebClient;
using static carinfor.DictionaryExtensionMethodClass;
using System.Data.OleDb;
using System.Collections;

namespace exhaustDetect
{
    public partial class startTest : Form
    {
        cVideo video = null;
        public delegate void wtlsb(Label Msgowner, string Msgstr);                //委托
        public delegate void wtlp(Label Msgowner, Panel Msgfather);                              //委托
        public delegate void wtlm(Label Msgowner, string Msgstr);
        public delegate void wtbe(Button button, bool buttonEnable);
        private delegate void exitwt();
        ASM_XZDB asm_xzdb = new ASM_XZDB();
        VMAS_XZBZ vmas_xzdb = new SYS.Model.VMAS_XZBZ();                                 //VMAS限值地标
        JZJS_XZBZ jzjs_xzdb = new SYS.Model.JZJS_XZBZ();
        ZYJS_XZGB zyjs_xzgb = new SYS.Model.ZYJS_XZGB();//被检测车辆的限值国标Model层
        SDS_XZGB sds_xzgb = new SDS_XZGB();
        compensationModel compendata = new compensationModel();
        GBDal gbdal = new GBDal();
        CSVcontrol.csvReader csvreader = new CSVcontrol.csvReader();
        carinfor.jzjsdata jzjs_data = new carinfor.jzjsdata();
        carinfor.jzjsdataControl jzjsdatacontrol = new carinfor.jzjsdataControl();
        carinfor.sdsdata sds_data = new carinfor.sdsdata();
        carinfor.sdsdataControl sdsdatacontrol = new carinfor.sdsdataControl();
        carinfor.zyjsBtgdata zyjs_data = new carinfor.zyjsBtgdata();
        carinfor.zyjsBtgdataControl zyjsdatacontrol = new carinfor.zyjsBtgdataControl();
        carinfor.vmasdata vmas_data = new carinfor.vmasdata();
        carinfor.vmasdataControl vmasdatacontrol = new carinfor.vmasdataControl();
        carinfor.asmdata asm_data = new carinfor.asmdata();
        carinfor.asmdataControl asmdatacontrol = new carinfor.asmdataControl();

        carinfor.selfCheckIni selfcheckini = new carinfor.selfCheckIni();

        private carinfor.carInidata carinidata = new carinfor.carInidata();
        private carinfor.carIni carini = new carinfor.carIni();
        private carinfor.statusconfigIni statusini = new carinfor.statusconfigIni();

        private List<Stream> m_streams;
        //用来记录当前打印到第几页了 
        private int m_currentPageIndex;

        VMASdal vmasdal = new VMASdal();
        VMAS vmasdata = new VMAS();
        ASMdal asmdal = new ASMdal();
        ASM asmdata = new ASM();
        JZJSdal jzjsdal = new JZJSdal();
        JZJS jzjsdata = new JZJS();
        SDSdal sdsdal = new SDSdal();
        SDS sdsdata = new SDS();
        Zyjsdal zyjsdal = new Zyjsdal();
        Zyjs_Btg zyjsdata = new Zyjs_Btg();

        DateTime jcsj;
        DateTime jssj;
        private string zxbz = "";
        bool beforedate = false;
        string Cllx = "";
        string CLSYQK = "";
        string jcsxh = "";//诚创联网时需要，站编号+线编号+累积号
        //asm标准
        public static double hc5025 = 0;
        public static double co5025 = 0;
        public static double no5025 = 0;
        public static double hc2540 = 0;
        public static double co2540 = 0;
        public static double no2540 = 0;
        string jsgk = "2540";
        string ksgkjs = "0";
        //老车标准
        public static double Limit_HC_BEBORE = 1;
        public static double Limit_CO_BEBORE = 1;
        public static double Limit_NO_BEBORE = 1;
        //新车标准
        public static double Limit_HCNOX_AFTER = 1;
        public static double Limit_CO_AFTER = 1;

        public double GXXZ = 0;                                                                      //光吸收系数限值
        public double GLXZ = 0;                                                                      //功率限值                                                               //功率限值
        public double ZSXZ_LOW = 0;
        public double ZSXZ_HIGH = 0;
        //功率限值

        public double btgxz = 0.0;
        public double btgzsxz = 0;

        public double lzxz = 0.0;//滤纸烟度法限值
        public string lzbz = "";

        public double H_HC_XZ = 0;                                                               //高怠速HC限值
        public double H_CO_XZ = 0;                                                               //高怠速CO限值
        public string λ_XZ = "1.00±0.03";                                                     //λ限值
        public double L_HC_XZ = 0;                                                               //怠速HC限值
        public double L_CO_XZ = 0;                                                               //怠速CO限值

        public int sdsm_xz_lx = 1;
        public double H_HC_SDSM_XZ = 0;                                                               //高怠速HC限值
        public double H_CO_SDSM_XZ = 0;                                                               //高怠速CO限值
        public double L_HC_SDSM_XZ = 0;                                                               //怠速HC限值
        public double L_CO_SDSM_XZ = 0;                                                               //怠速CO限值

        Thread th_wait = null;
        DateTime starttime = DateTime.Now.AddSeconds(-2);

        private string jcbgbh = "xxxx";
        private string thisjcff = "";
        private string thisjcffmc = "";
        private bool isautostart = false;
        private string exeName = "";


        private bool ahisStartRecord = false;
        private bool ahisStartInspect = false;
        private bool ahisStopRecord = false;
        private bool ahisStopInspect = false;
        private AhWebClient.Ahlimit ahlimitmodel = new AhWebClient.Ahlimit();

        private string jhtestingid = "";

        private string dalijcbgbh = "";
        private string frontpic1 = @".\capPic\frontpic1.jpg";
        private string frontpic2 = @".\capPic\frontpic2.jpg";
        private string frontpic3 = @".\capPic\frontpic3.jpg";
        private string frontpic4= @".\capPic\frontpic4.jpg";
        private string frontpic5 = @".\capPic\frontpic5.jpg";
        private string backpic1 = @".\capPic\backpic1.jpg";
        private string backpic2 = @".\capPic\backpic2.jpg";
        private string backpic3 = @".\capPic\backpic3.jpg";
        private string backpic4 = @".\capPic\backpic4.jpg";
        private string backpic5 = @".\capPic\backpic5.jpg";

        private bool uploadStartSuccess = false;
        private bool uploadHCSuccess = false;
        private bool uploadStopSuccess = false;
        private bool uploadResultSuccess = false;
        private bool uploadProcessSuccess = false;
        public startTest()
        {
            InitializeComponent();

        }

        public startTest(string startstyle)
        {
            InitializeComponent();
            if (startstyle == "auto")
            {
                isautostart = true;
            }

        }
        private void startTest_Load(object sender, EventArgs e)
        {
            isautostart = mainPanel.equipconfig.WorkAutomaticMode;

            if (mainPanel.iscameraused)
            {
                //panelVideo.Visible = true;
                mainPanel.capturecontrol.stopLiveView(1);
                mainPanel.capturecontrol.stopLiveView(2);
                mainPanel.capturecontrol.openLiveView(1, pictureBoxFrontCamera.Handle);
                mainPanel.capturecontrol.openLiveView(2, pictureBoxBackCamera.Handle);
            }
            ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "将进行"+ carLogin.carbj.JCFF + "检测");
            if (!isautostart)
            {
                if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.AHNETMODE)
                {
                    labelRecord.Visible = true;
                    buttonOK.Text = "开始录像";
                    
                }
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                {
                    buttonOK.Location = new Point(438, 3);
                    buttonOK.Visible = true;
                }
                else
                {
                    if (carLogin.carbj.JCFF == "JZJS")
                    {
                        buttonYj.Location = new Point(438, 3);
                        //panelPrepare.Location = new Point(6, 20);
                        //panelPrepare.Visible = true;
                        panelJZJSYj.Location = new Point(16, 9);
                        panelJZJSYj.Visible = true;
                        groupBoxJzjsYj.Visible = true;
                        buttonYj.Visible = true;
                    }
                    else if (carLogin.carbj.JCFF == "VMAS")
                    {
                        panelVMASPREPARE.Location = new Point(16, 9);
                        panelVMASPREPARE.Visible = true;
                        groupBoxJzjsYj.Text = "检测系统检查";
                        groupBoxJzjsYj.Visible = true;
                        buttonOK.Location = new Point(438, 3);
                        buttonOK.Visible = true;
                    }
                    else
                    {
                        buttonOK.Location = new Point(438, 3);
                        buttonOK.Visible = true;
                    }
                }
            }
            else
            {
                buttonOK.Location = new Point(438, 3);
                buttonOK.Visible = true;
            }

            switch (carLogin.carbj.JCFF)
            {
                case "ASM":
                    Msg(label1, panel4, carLogin.carbj.CLHP + "将进行稳态工况检测");
                    Init_AsmLimit();
                    break;
                case "VMAS":
                    Msg(label1, panel4, carLogin.carbj.CLHP + "将进行简易瞬态工况检测");
                    Init_VmasLimit();
                    break;
                case "JZJS":
                    Msg(label1, panel4, carLogin.carbj.CLHP + "将进行加载减速工况检测");
                    Init_JzjsLimit();
                    break;
                case "ZYJS":
                    Msg(label1, panel4, carLogin.carbj.CLHP + "将进行自由加速不透光法检测");
                    Init_ZyjsLimit();
                    break;
                case "SDS":
                    Msg(label1, panel4, carLogin.carbj.CLHP + "将进行双怠速法检测");
                    Init_SdsLimit();
                    break;
                case "SDSM":
                    Msg(label1, panel4, carLogin.carbj.CLHP + "将进行双怠速法(摩托车)检测");
                    Init_SdsMLimit();
                    break;
                case "LZ":
                    Msg(label1, panel4, carLogin.carbj.CLHP + "将进行滤纸烟度法检测");
                    Init_LzLimit();
                    break;
                default: break;
            }
            init_CarConfig();
            clearTempPic();
            labelAutoPrint.Text = mainPanel.linemodel.AUTOPRINT == "Y" ? "自动打印功能已开户" : "自动打印功能已关闭";
            labelAutoPrint.ForeColor = mainPanel.linemodel.AUTOPRINT == "Y" ? Color.Blue : Color.Red;
            if (isautostart)
                buttonOK_Click(sender, e);
        }
        private void clearTempPic()
        {
            ini.INIIO.createDir(@".\capPic");
            ini.INIIO.deleteDir(@".\capPic");//删除诚创联网文件交互文件夹内的所有文件
        }
        private void init_CarConfig()
        {
            double a = 0;
            int b = 0;
            compendata = mainPanel.logininfcontrol.getLineCompensationData(mainPanel.lineid);
            if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.ZKYTNETMODE && mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)&&carLogin.carbj.JCCS!="1")
            {
                ini.INIIO.saveLogInf("[中科宇图][复检车辆][检测次数="+carLogin.carbj.JCCS);
                carinidata.ASM_CO = compendata.ASM_CO;
                carinidata.ASM_HC = compendata.ASM_HC;
                carinidata.ASM_NO = compendata.ASM_NO;
                carinidata.VMAS_CO = compendata.VMAS_CO;
                carinidata.VMAS_HC = compendata.VMAS_HC;
                carinidata.VMAS_NO = compendata.VMAS_NO;
                carinidata.SDS_CO = compendata.SDS_CO;
                carinidata.SDS_HC = compendata.SDS_HC;
                carinidata.ZYJS_K = compendata.ZYJS_K;
                carinidata.JZJS_K = compendata.JZJS_K;
                carinidata.JZJS_GL = compendata.JZJS_GL;
                carinidata.ISUSE = true;
            }
            else if (mainPanel.logininfcontrol.checkCLHPIsInSpecialList(carLogin.carbj.CLHP, DateTime.Now))
            {
                ini.INIIO.saveLogInf("该车在SpecialVehicleList中");
                carinidata.ASM_CO = 1.0;
                carinidata.ASM_HC = 1.0;
                carinidata.ASM_NO = 1.0;
                carinidata.VMAS_CO = 1.0;
                carinidata.VMAS_HC = 1.0;
                carinidata.VMAS_NO = 1.0;
                carinidata.SDS_CO = 1.0;
                carinidata.SDS_HC = 1.0;
                carinidata.ZYJS_K = 1.0;
                carinidata.JZJS_K = 1.0;
                carinidata.JZJS_GL = 1.0;
                carinidata.ISUSE = true;
            }
            else if (compendata.ISUSE)
            {
                ini.INIIO.saveLogInf("该线为设置为SpecialLine");
                carinidata.ASM_CO = compendata.ASM_CO;
                carinidata.ASM_HC = compendata.ASM_HC;
                carinidata.ASM_NO = compendata.ASM_NO;
                carinidata.VMAS_CO = compendata.VMAS_CO;
                carinidata.VMAS_HC = compendata.VMAS_HC;
                carinidata.VMAS_NO = compendata.VMAS_NO;
                carinidata.SDS_CO = compendata.SDS_CO;
                carinidata.SDS_HC = compendata.SDS_HC;
                carinidata.ZYJS_K = compendata.ZYJS_K;
                carinidata.JZJS_K = compendata.JZJS_K;
                carinidata.JZJS_GL = compendata.JZJS_GL;
                carinidata.ISUSE = true;
            }
            else
            {
                ini.INIIO.saveLogInf("该线正常");
                carinidata.ASM_CO = 1;
                carinidata.ASM_HC = 1;
                carinidata.ASM_NO = 1;
                carinidata.VMAS_CO = 1;
                carinidata.VMAS_HC =1;
                carinidata.VMAS_NO =1;
                carinidata.SDS_CO = 1;
                carinidata.SDS_HC = 1;
                carinidata.ZYJS_K =1;
                carinidata.JZJS_K = 1;
                carinidata.JZJS_GL =1;
                carinidata.ISUSE = false;
            }
            carinidata.CarID = carLogin.carbj.CLID;
            carinidata.CarPH = carLogin.carbj.CLHP;
            if (carLogin.modelbj.JQFS.Contains("涡轮") || (mainPanel.logininfcontrol.getComBoBoxItemsNAME("进气方式", carLogin.modelbj.JQFS)).Contains("涡轮"))
            {
                carinidata.jqfs = "1";
            }
            else
            {
                carinidata.jqfs = "0";
            }
            if (double.TryParse(carLogin.modelbj.JZZL, out a))
                carinidata.CarJzzl = a;
            else
                carinidata.CarJzzl = 0;
            if (int.TryParse(carLogin.modelbj.ZZL, out b))
                carinidata.CarZzl = b;
            else
                carinidata.CarZzl = 0;
            if (carLogin.modelbj.RLZL.Contains("汽油"))
                carinidata.CarRlzl = "1";
            else if (carLogin.modelbj.RLZL.Contains("柴油"))
                carinidata.CarRlzl = "2";
            else if (carLogin.modelbj.RLZL.Contains("液化石油气"))
                carinidata.CarRlzl = "3";
            else if (carLogin.modelbj.RLZL.Contains("天然气"))
                carinidata.CarRlzl = "4";
            else
                carinidata.CarRlzl = "1";
            if (double.TryParse(carLogin.modelbj.EDGL, out a))
                carinidata.CarEdgl = a;
            else
                carinidata.CarEdgl = 0;
            if (double.TryParse(carLogin.modelbj.EDZS, out a))
                carinidata.CarEdzs = a;
            else
                carinidata.CarEdzs = 0;
            carinidata.CarBsxlx = "1";
            carinidata.CarLxcc = 3;
            carinidata.CarLjcc = 15;
            carinidata.scrq = carLogin.modelbj.SCRQ;
            carinidata.CarNdz = 6;
            carinidata.CarCc = carLogin.modelbj.CCS;
            carinidata.ISMOTO = (carLogin.carbj.JCFF == "SDSM");
            if (carLogin.carbj.JCFF == "ASM")
            {
                carinidata.Xz1 = hc5025;
                carinidata.Xz2 = co5025;
                carinidata.Xz3 = no5025;
                carinidata.Xz4 = hc2540;
                carinidata.Xz5 = co2540;
                carinidata.Xz6 = no2540;
            }
            else if (carLogin.carbj.JCFF == "VMAS")
            {
                if (beforedate)
                {
                    carinidata.Xz1 = 1;
                    carinidata.Xz2 = Limit_CO_BEBORE;
                    carinidata.Xz3 = Limit_HC_BEBORE;
                    carinidata.Xz4 = Limit_NO_BEBORE;
                    carinidata.Xz5 = 0;
                    carinidata.Xz6 = 0;
                }
                else
                {
                    carinidata.Xz1 = 0;
                    carinidata.Xz2 = Limit_CO_AFTER;
                    carinidata.Xz3 = Limit_HCNOX_AFTER;
                    carinidata.Xz4 = 0;
                    carinidata.Xz5 = 0;
                    carinidata.Xz6 = 0;
                }
            }
            else if(carLogin.carbj.JCFF=="JZJS")
            {
                carinidata.Xz1 = GLXZ;
                carinidata.Xz2 = GXXZ;
                carinidata.Xz3 = 0;
                carinidata.Xz4 = 0;
                carinidata.Xz5 = 0;
                carinidata.Xz6 = 0;
            }
            else if (carLogin.carbj.JCFF == "SDS")
            {
                carinidata.Xz1 = H_CO_XZ;
                carinidata.Xz2 = H_HC_XZ;
                carinidata.Xz3 = L_CO_XZ;
                carinidata.Xz4 = L_HC_XZ;
                carinidata.Xz5 = 0;
                carinidata.Xz6 = 0;
            }
            else if (carLogin.carbj.JCFF == "SDSM")
            {
                carinidata.Xz1 = H_CO_XZ;
                carinidata.Xz2 = H_HC_XZ;
                carinidata.Xz3 = L_CO_XZ;
                carinidata.Xz4 = L_HC_XZ;
                carinidata.Xz5 = 0;
                carinidata.Xz6 = 0;
            }
            else if (carLogin.carbj.JCFF == "ZYJS")
            {
                carinidata.Xz1 = (double)btgxz;
                carinidata.Xz2 = 0;
                carinidata.Xz3 = 0;
                carinidata.Xz4 = 0;
                carinidata.Xz5 = 0;
                carinidata.Xz6 = 0;
            }
            else
            {
                carinidata.Xz1 = 0;
                carinidata.Xz2 = 0;
                carinidata.Xz3 = 0;
                carinidata.Xz4 = 0;
                carinidata.Xz5 = 0;
                carinidata.Xz6 = 0;
            }
            if (carLogin.carbj.JCFF == "ASM" || carLogin.carbj.JCFF == "VMAS")
            {
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                {
                    if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                    {
                        carinidata.AmbientCO2Up = 1f;
                        carinidata.AmbientCOUp = 1f;
                        carinidata.AmbientHCUp = 7f;
                        carinidata.AmbientNOUp = 25f;
                        carinidata.BackgroundCO2Up = 1f;
                        carinidata.BackgroundCOUp = 1f;
                        carinidata.BackgroundHCUp = 7f;
                        carinidata.BackgroundNOUp = 25f;
                        carinidata.ResidualHCUp = 7f;
                    }
                    else
                    {
                        try
                        {
                            carinidata.AmbientCO2Up = float.Parse(carLogin.limitdatainf.AmbientCO2Up);
                            carinidata.AmbientCOUp = float.Parse(carLogin.limitdatainf.AmbientCOUp);
                            carinidata.AmbientHCUp = float.Parse(carLogin.limitdatainf.AmbientHCUp);
                            carinidata.AmbientNOUp = float.Parse(carLogin.limitdatainf.AmbientNOUp);
                            carinidata.BackgroundCO2Up = float.Parse(carLogin.limitdatainf.BackgroundCO2Up);
                            carinidata.BackgroundCOUp = float.Parse(carLogin.limitdatainf.BackgroundCOUp);
                            carinidata.BackgroundHCUp = float.Parse(carLogin.limitdatainf.BackgroundHCUp);
                            carinidata.BackgroundNOUp = float.Parse(carLogin.limitdatainf.BackgroundNOUp);
                            carinidata.ResidualHCUp = float.Parse(carLogin.limitdatainf.ResidualHCUp);
                        }
                        catch
                        {
                            carinidata.AmbientCO2Up = 1f;
                            carinidata.AmbientCOUp = 1f;
                            carinidata.AmbientHCUp = 7f;
                            carinidata.AmbientNOUp = 25f;
                            carinidata.BackgroundCO2Up = 1f;
                            carinidata.BackgroundCOUp = 1f;
                            carinidata.BackgroundHCUp = 7f;
                            carinidata.BackgroundNOUp = 25f;
                            carinidata.ResidualHCUp = 7f;
                        }
                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
                {
                    try
                    {
                        carinidata.AmbientCO2Up = float.Parse(mainPanel.jschecklimitmodel.AmbientCO2Up);
                        carinidata.AmbientCOUp = float.Parse(mainPanel.jschecklimitmodel.AmbientCOUp);
                        carinidata.AmbientHCUp = float.Parse(mainPanel.jschecklimitmodel.AmbientHCUp);
                        carinidata.AmbientNOUp = float.Parse(mainPanel.jschecklimitmodel.AmbientNOUp);
                        carinidata.BackgroundCO2Up = float.Parse(mainPanel.jschecklimitmodel.BackgroundCO2Up);
                        carinidata.BackgroundCOUp = float.Parse(mainPanel.jschecklimitmodel.BackgroundCOUp);
                        carinidata.BackgroundHCUp = float.Parse(mainPanel.jschecklimitmodel.BackgroundHCUp);
                        carinidata.BackgroundNOUp = float.Parse(mainPanel.jschecklimitmodel.BackgroundNOUp);
                        carinidata.ResidualHCUp = float.Parse(mainPanel.jschecklimitmodel.ResidualHCUp);
                        carinidata.CarNdz = float.Parse(mainPanel.jschecklimitmodel.COAndCO2);
                    }
                    catch
                    {
                        carinidata.AmbientCO2Up = 1f;
                        carinidata.AmbientCOUp = 1f;
                        carinidata.AmbientHCUp = 7f;
                        carinidata.AmbientNOUp = 25f;
                        carinidata.BackgroundCO2Up = 1f;
                        carinidata.BackgroundCOUp = 1f;
                        carinidata.BackgroundHCUp = 7f;
                        carinidata.BackgroundNOUp = 25f;
                        carinidata.ResidualHCUp = 7f;
                        carinidata.CarNdz = 6f;
                    }
                }
                else
                {
                    carinidata.AmbientCO2Up = 1f;
                    carinidata.AmbientCOUp = 1f;
                    carinidata.AmbientHCUp = 7f;
                    carinidata.AmbientNOUp = 25f;
                    carinidata.BackgroundCO2Up = 1f;
                    carinidata.BackgroundCOUp = 1f;
                    carinidata.BackgroundHCUp = 7f;
                    carinidata.BackgroundNOUp = 25f;
                    carinidata.ResidualHCUp = 7f;
                }
            }
            else
            {
                carinidata.AmbientCO2Up = 1f;
                carinidata.AmbientCOUp = 1f;
                carinidata.AmbientHCUp = 7f;
                carinidata.AmbientNOUp = 25f;
                carinidata.BackgroundCO2Up = 1f;
                carinidata.BackgroundCOUp = 1f;
                carinidata.BackgroundHCUp = 7f;
                carinidata.BackgroundNOUp = 25f;
                carinidata.ResidualHCUp = 7f;
            }
            try
            { }
            catch
            { }
            if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.CYNETMODE)
            {
                ini.INIIO.deleteDir(mainPanel.xcdirectory);
                ini.INIIO.deleteDir(@"D:\Exchange");//删除诚创联网文件交互文件夹内的所有文件
                carini.writeCarIni(carinidata, @"C:\xcdatatxt\carinfo.ini", mainPanel.xcdirectory);
            }
            else
            {
                ini.INIIO.deleteDir(mainPanel.directory);
                ini.INIIO.deleteDir(@"D:\Exchange");//删除诚创联网文件交互文件夹内的所有文件
                carini.writeCarIni(carinidata, @"C:\jcdatatxt\carinfo.ini", mainPanel.directory);
            }
        }
        /// <summary>
        /// 信息显示
        /// </summary>
        /// <param name="Msgowner">信息显示的Label控件</param>
        /// <param name="Msgfather">Label控件的父级Panel</param>
        /// <param name="Msgstr">要显示的信息</param>
        /// <param name="Update_DB">是不是要更新到检测状态</param>
        public void Msg(Label Msgowner, Panel Msgfather, string Msgstr)
        {
            BeginInvoke(new wtlsb(Msg_Show), Msgowner, Msgstr);
            BeginInvoke(new wtlp(Msg_Position), Msgowner, Msgfather);
        }
        public void Label_Msg(Label Msgowner, string Msgstr)
        {
            BeginInvoke(new wtlm(Label_Show), Msgowner, Msgstr);
        }
        public void Label_Show(Label Msgowner, string Msgstr)
        {
            Msgowner.Text = Msgstr;
        }
        public void Msg_Show(Label Msgowner, string Msgstr)
        {
            Msgowner.Text = Msgstr;
        }

        public void Msg_Position(Label Msgowner, Panel Msgfather)
        {
            if (Msgowner.Width < Msgfather.Width)
                Msgowner.Location = new Point((Msgfather.Width - Msgowner.Width) / 2, Msgowner.Location.Y);
            else
                Msgowner.Location = new Point(0, Msgowner.Location.Y);
        }
        public void enableButton(Button button, bool buttonEnable)
        {
            BeginInvoke(new wtbe(button_enable), button, buttonEnable);
        }
        public void button_enable(Button button, bool buttonEnable)
        {
            button.Enabled = buttonEnable;
        }
        private string getWgJcffByID(string id)
        {
            string jcff = "";
            switch (id)
            {
                case "VMAS": jcff = "VMAS"; thisjcffmc = "简易瞬态工况法"; break;
                case "ASM": jcff = "VASM"; thisjcffmc = "稳态工况法"; break;
                case "SDS": jcff = "VTIE"; thisjcffmc = "双怠速法"; break;
                case "SDSM": jcff = "MDIS"; thisjcffmc = "双怠速法"; break;//2018-08-31根据宝辉王小路转述安车的口头协议，摩托车双怠速传MDIS
                case "JZJS": jcff = "VLUG"; thisjcffmc = "加载减速法"; break;
                case "ZYJS": jcff = "VFLM"; thisjcffmc = "不透光烟度"; break;
                case "LZ": jcff = "VFTM"; thisjcffmc = "滤纸烟度法"; break;
                case "LZN": jcff = "LFTM"; thisjcffmc = "滤纸烟度法(农)"; break;
                default: break;
            }
            return jcff;
        }

        private void buttonOK_Click(object sender, EventArgs e)
        {
            uploadStartSuccess = false;
            uploadHCSuccess = false;
            uploadProcessSuccess = false;
            uploadStopSuccess = false;
            uploadResultSuccess = false;
            DateTime nowtime = DateTime.Now;
            TimeSpan timespan = nowtime - starttime;
            if (timespan.TotalSeconds > 2 || isautostart)
            {
                starttime = nowtime;
                if (buttonOK.Text == "开始录像")
                {
                    int ahresult = 0;
                    string ahErrMsg = "";
                    if (mainPanel.ahinterface.BeginRecord(mainPanel.lineid, carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                    {
                        buttonOK.Text = "开始";
                        ahisStartRecord = true;
                    }
                    else
                    {
                        MessageBox.Show("错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                        return;
                    }
                }
                else
                {
                    try
                    {
                        if (mainPanel.equipconfig.isTpTempInstrument)
                        {
                            double wd = 0, sd = 0, dqy = 0;
                            DateTime datetime;
                            if (mainPanel.logininfcontrol.getTHP(out datetime, out wd, out sd, out dqy))
                            {
                                TimeSpan ts = DateTime.Now - datetime;
                                if (ts.TotalMinutes > 30)
                                {
                                    if (MessageBox.Show("检测到统配温湿度计已经超过30分钟没有更新\r\n是否继续？", "系统提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.Cancel)
                                    {
                                        return;
                                    }
                                }
                                selfcheckini.writeWSD(wd.ToString("0.0"), sd.ToString("0.0"), dqy.ToString("0.0"));
                            }
                        }
                        if (carLogin.carbj.JCFF == "JZJS")
                        {
                            foreach (Control childcheckbox in panelJZJSYj.Controls)
                            {
                                if (childcheckbox is CheckBox)
                                {
                                    if (((CheckBox)childcheckbox).Checked)
                                    {
                                        MessageBox.Show("该车预检没有通过,不能上线检测");
                                        return;
                                    }
                                }
                            }
                        }
                        else if (carLogin.carbj.JCFF == "VMAS")
                        {
                            foreach (Control childcheckbox in panelVMASPREPARE.Controls)
                            {
                                if (childcheckbox is CheckBox)
                                {
                                    if (((CheckBox)childcheckbox).Checked)
                                    {
                                        MessageBox.Show("该车预检没有通过,不能上线检测");
                                        return;
                                    }
                                }
                            }
                        }
                        if (mainPanel.linesbbd.Yrenable)
                        {
                            if (carLogin.carbj.JCFF == "ASM" || carLogin.carbj.JCFF == "VMAS" || carLogin.carbj.JCFF == "JZJS")
                            {
                                StringBuilder temp = new StringBuilder();
                                temp.Length = 2048;

                                ini.INIIO.GetPrivateProfileString("测功机上次运转时间", "执行", "N", temp, 2048, @".\detectConfig.ini");
                                string cgjenable = temp.ToString();
                                if (cgjenable == "Y")
                                {
                                    ini.INIIO.GetPrivateProfileString("测功机上次运转时间", "时间", "", temp, 2048, @".\detectConfig.ini");
                                    string timestring = temp.ToString();
                                    DateTime precgjtime = DateTime.Now;
                                    if (DateTime.TryParse(timestring, out precgjtime))
                                    {
                                        TimeSpan cgjtimespan = DateTime.Now - precgjtime;
                                        int cgjnoactionmin = cgjtimespan.Days * 24 * 60 + cgjtimespan.Hours * 60 + cgjtimespan.Minutes;
                                        if (cgjnoactionmin > 30)
                                        {
                                            MessageBox.Show("测功机已经超过30分钟未运转,必须重新预热后才能上线");
                                            return;
                                        }
                                    }
                                    else
                                    {
                                        ini.INIIO.WritePrivateProfileString("测功机上次运转时间", "时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), @".\detectConfig.ini");
                                    }
                                }
                            }
                        }

                        ini.INIIO.saveLogInf("点击开始测量");
                        jcsj = DateTime.Now;
                        carLogin.carbj.JCRQ = jcsj;
                        carLogin.carbj.JCGWH = mainPanel.lineid;
                        carLogin.carbj.JCZBH = mainPanel.stationinfmodel.STATIONID;
                        SYS.Model.CARINF carinf = new CARINF();
                        carinf = mainPanel.logininfcontrol.getCarInfbyPlate(carLogin.carbj.CLHP);
                        mainPanel.lshmodel = mainPanel.stationcontrol.getLineLshInf(mainPanel.stationid, mainPanel.lineid);
                        if(mainPanel.lshmodel.StationID=="-2")
                        {
                            MessageBox.Show("读取流水号信息失败,请重新点开始");
                            return;
                        }
                        int stationcount = mainPanel.stationcontrol.getStationLshInf(mainPanel.stationid);
                        int lshcount = int.Parse(mainPanel.lshmodel.COUNT);
                        thisjcff = getWgJcffByID(carLogin.carbj.JCFF);
                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.WGNETMODE)
                            carLogin.carbj.JCBGBH = "1" + mainPanel.wgsocketinf.JCZJC + mainPanel.wgsocketinf.JCZBH + mainPanel.linemodel.LINEID + jcsj.ToString("yyyyMMdd") + lshcount.ToString("0000") + thisjcff;
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ACNETMODE)
                        {
                            if (mainPanel.acsocketinf.AREA == mainPanel.ACAREA_NN)//统一格式为：状态（1位）+检测站简称（2位）+检测站编号（2位）+检测线编号（2位）+检测时间（8位）+随机数（4位）+检测方法（4位）。状态是指在线（1）或者离线（0）状态。检测时间格式年（4位）月（2位）日（2位）。简易瞬态工况法:VMAS，稳态工况法:VASM，双怠速法：VTIE，加载减速法：VLUG，不透光烟度：VFLM，滤纸烟度法：VFTM，滤纸烟度法（农）：LFTM
                            {
                                carLogin.carbj.JCBGBH = "1" + mainPanel.stationinfmodel.StationCompany + mainPanel.stationid + mainPanel.lineid + jcsj.ToString("yyyyMMdd") + lshcount.ToString("0000") + thisjcff;
                            }
                            else
                            {
                                carLogin.carbj.JCBGBH = mainPanel.stationinfmodel.STATIONID + mainPanel.lineid + mainPanel.logininfcontrol.getComBoBoxItemsID("检测方法", carLogin.carbj.JCFF) + jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff").Split(' ')[0].Replace(":", "").Replace("/", "").Replace("-", "").Remove(0, 2) + lshcount.ToString("0000");
                            }
                            while (mainPanel.logininfcontrol.checkLSHIsAlive(carLogin.carbj.JCBGBH, "已检车辆信息"))
                            {
                                ini.INIIO.saveLogInf("流水号：" + carLogin.carbj.JCBGBH + "已存在,将自动加1");
                                lshcount++;
                                if (mainPanel.acsocketinf.AREA == mainPanel.ACAREA_NN)//统一格式为：状态（1位）+检测站简称（2位）+检测站编号（2位）+检测线编号（2位）+检测时间（8位）+随机数（4位）+检测方法（4位）。状态是指在线（1）或者离线（0）状态。检测时间格式年（4位）月（2位）日（2位）。简易瞬态工况法:VMAS，稳态工况法:VASM，双怠速法：VTIE，加载减速法：VLUG，不透光烟度：VFLM，滤纸烟度法：VFTM，滤纸烟度法（农）：LFTM
                                {
                                    carLogin.carbj.JCBGBH = "1" + mainPanel.stationinfmodel.StationCompany + mainPanel.stationid + mainPanel.lineid + jcsj.ToString("yyyyMMdd") + lshcount.ToString("0000") + thisjcff;
                                }
                                else
                                {
                                    carLogin.carbj.JCBGBH = mainPanel.stationinfmodel.STATIONID + mainPanel.lineid + mainPanel.logininfcontrol.getComBoBoxItemsID("检测方法", carLogin.carbj.JCFF) + jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff").Split(' ')[0].Replace(":", "").Replace("/", "").Replace("-", "").Remove(0, 2) + lshcount.ToString("0000");
                                }
                            }
                            ini.INIIO.saveLogInf("流水号：" + carLogin.carbj.JCBGBH + "确认");


                        }
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
                            carLogin.carbj.JCBGBH = mainPanel.stationinfmodel.STATIONID + mainPanel.lineid + jcsj.ToString("yyyyMMddHHmmss");
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NHNETMODE)
                            carLogin.carbj.JCBGBH = mainPanel.stationid + "-" + mainPanel.nhwebinf.lineid + "-" + DateTime.Now.ToString("yyyyMMdd") + lshcount.ToString("0000");
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                            carLogin.carbj.JCBGBH = carLogin.carbj.JYLSH;
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                        {
                            carLogin.carbj.JCBGBH = mainPanel.stationid + stationcount.ToString("0000000000");
                        }
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ORTNETMODE)//检测站ID+检测设备ID+yyMMddHHmmssfff
                            carLogin.carbj.JCBGBH = mainPanel.stationinfmodel.STATIONID + mainPanel.stationinfmodel.StationCompany + mainPanel.lineid + jcsj.ToString("yyyyMMddHHmmssfff");
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                        {
                            carLogin.carbj.JCBGBH = mainPanel.stationid.Substring(6, 2) + mainPanel.lineid + stationcount.ToString("000000");//桂林联网，检测站编号+检测线号+顺序号，顺序号暂时取全站全年顺序号
                        }
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.EZNETMODE)
                        {
                            carLogin.carbj.JCBGBH = mainPanel.stationid + DateTime.Now.ToString("yyMMddHHmmss") + stationcount.ToString("0000");
                        }
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HHZNNETMODE)//由19位数字组成，前9位为检测站编码，后10位为顺序号,在注册登记 的时候已经生成
                        {
                            carLogin.carbj.JCBGBH = mainPanel.stationid + DateTime.Now.ToString("yyMMddHHmmss") + stationcount.ToString("0000");
                        }
                        else
                        {
                            if (mainPanel.stationinfmodel.LSHRULE == "永康")
                            {
                                carLogin.carbj.JCBGBH = mainPanel.stationinfmodel.StationCompany +"-"+ jcsj.ToString("yyyyMMdd") + stationcount.ToString("00000") +"-"+ mainPanel.lineid +"-"+(int.Parse(carLogin.carbj.JCCS)-1).ToString("00");
                            }
                            else
                            {
                                carLogin.carbj.JCBGBH = mainPanel.stationinfmodel.STATIONID + mainPanel.lineid + mainPanel.logininfcontrol.getComBoBoxItemsID("检测方法", carLogin.carbj.JCFF) + jcsj.ToString("yyyyMMddHHmmss") + lshcount.ToString("0000");
                            }
                        }
                        jcsxh = mainPanel.stationid + mainPanel.lineid + lshcount.ToString("0000");
                        lshcount++;
                        stationcount++;
                        mainPanel.stationcontrol.setLineLshCount(mainPanel.stationid, mainPanel.lineid, lshcount.ToString());
                        mainPanel.stationcontrol.setStationLshCount(mainPanel.stationid, stationcount.ToString());
                        mainPanel.logininfcontrol.writeJcbgbhByPlate(carLogin.carbj.CLHP, carLogin.carbj.JCBGBH);
                        jcbgbh = carLogin.carbj.JCBGBH;
                        ini.INIIO.saveLogInf("流水号：" + jcbgbh);
                        if (mainPanel.isNetUsed)
                        {
                            if (mainPanel.NetMode == mainPanel.WGNETMODE)
                            {
                                carinfor.WGnetRegCarWait wgdata = new carinfor.WGnetRegCarWait();
                                wgdata.JCBGBH = carLogin.carbj.JCBGBH;
                                wgdata.CPHM = carLogin.carbj.CLHP;
                                wgdata.CLZL = mainPanel.logininfcontrol.getComBoBoxItemsNAME("车辆种类", carLogin.modelbj.CLZL);
                                wgdata.CLLX = mainPanel.logininfcontrol.getComBoBoxItemsNAME("车辆类型", carLogin.modelbj.CLLX);
                                wgdata.HPZL = carLogin.modelbj.CPYS;
                                wgdata.CZMC = carLogin.modelbj.CZ;
                                wgdata.LXDZ = carLogin.modelbj.CZDZ;
                                wgdata.LXDH = carLogin.modelbj.LXDH;
                                wgdata.CPXH = carLogin.modelbj.XH;
                                wgdata.SYXZ = mainPanel.logininfcontrol.getComBoBoxItemsNAME("使用性质", carLogin.modelbj.SYXZ);
                                wgdata.CLSBM = carLogin.modelbj.CLSBM;
                                wgdata.CLSCQY = carLogin.modelbj.SCQY;
                                wgdata.ZDZZL = carLogin.modelbj.ZZL;
                                wgdata.JZZL = carLogin.modelbj.JZZL;
                                wgdata.CCDJRQ = carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd") + " 00:00:00";
                                wgdata.CCRQ = carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd") + " 00:00:00";
                                wgdata.DCZZ = "";
                                wgdata.DPXH = "";
                                wgdata.QDFS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("驱动形式", carLogin.modelbj.QDXS);
                                wgdata.QDLTQY = carLogin.modelbj.QDLTQY;
                                wgdata.BSQXS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("变速器形式", carLogin.modelbj.BSQXS);
                                wgdata.DWS = carLogin.modelbj.DWS;
                                wgdata.FDJXH = carLogin.modelbj.FDJXH;
                                wgdata.FDJSCQY = carLogin.modelbj.FDJSCQY;
                                wgdata.QGS = carLogin.modelbj.QGS;
                                wgdata.FDJPL = carLogin.modelbj.FDJPL;
                                wgdata.RYXS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("供油方式", carLogin.modelbj.GYFS);
                                wgdata.RYGG = mainPanel.logininfcontrol.getComBoBoxItemsNAME("燃料种类", carLogin.modelbj.RLZL);
                                wgdata.LJXSLC = carLogin.carbj.XSLC;
                                wgdata.CHZHQ = mainPanel.logininfcontrol.getComBoBoxItemsNAME("催化转化器", carLogin.modelbj.JHZZ);
                                wgdata.JQFS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("进气方式", carLogin.modelbj.JQFS);
                                wgdata.GYXTXS = "闭环";
                                wgdata.PQHCLZZ = mainPanel.logininfcontrol.getComBoBoxItemsNAME("排气后处理装置", carLogin.modelbj.JHZZ);
                                wgdata.RYPH = carLogin.modelbj.RYPH;
                                wgdata.SFWDZR = mainPanel.logininfcontrol.getComBoBoxItemsNAME("是否外地转入", carLogin.modelbj.SFWDZR);
                                wgdata.SFYQBF = mainPanel.logininfcontrol.getComBoBoxItemsNAME("是否延期报废", carLogin.modelbj.SFYQBF);
                                wgdata.SJCYS = carLogin.modelbj.HDZK;
                                wgdata.SSXQ = carLogin.modelbj.SSXQ;
                                wgdata.ICCardNo = "";
                                wgdata.ZBZL = carLogin.modelbj.ZBZL;
                                wgdata.DPFS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("电喷方式", carLogin.modelbj.DPFS);
                                wgdata.OBD = carLogin.modelbj.OBD;
                                wgdata.DKGYYB = carLogin.modelbj.DKGYYB;
                                wgdata.DLSP = carLogin.modelbj.DLSP;
                                wgdata.CHZZ = mainPanel.logininfcontrol.getComBoBoxItemsNAME("侧滑装置", carLogin.modelbj.CHZZ);
                                wgdata.FDJEDZS = carLogin.modelbj.EDZS;
                                wgdata.FDJEDGL = carLogin.modelbj.EDGL;
                                if (!mainPanel.wgsocket.SendCarWaitData(wgdata))
                                {
                                    Msg(label1, panel4, "发送车辆注册信息失败,不能进行检测");
                                    return;
                                }
                            }
                            else if (mainPanel.NetMode == mainPanel.CCNETMODE)
                            {
                                string code, message;
                                if (mainPanel.ccsocket.SendInspectionBegin(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message))
                                {
                                    if (code != "1")
                                    {
                                        Msg(label1, panel4, "发送车辆注册信息失败,不能进行检测,错误信息：" + message);
                                        return;
                                    }
                                }
                                else
                                {
                                    Msg(label1, panel4, "发送车辆注册信息失败,不能进行检测");
                                    return;
                                }
                            }
                            else if (mainPanel.NetMode == mainPanel.ACNETMODE)
                            {
                                if (mainPanel.useHyDatabase)
                                {
                                    if (!regCarWait2Net(carLogin.modelbj, carLogin.carbj))
                                    {
                                        Msg(label1, panel4, "发送车辆注册信息失败,不能进行检测");
                                        ini.INIIO.saveLogInf("联网信息：发送车辆注册信息失败,不能进行检测");
                                        return;
                                    }
                                }
                                else
                                {
                                    if (!regCarWait2Net(carinf, carLogin.carbj))
                                    {
                                        Msg(label1, panel4, "发送车辆注册信息失败,不能进行检测");
                                        ini.INIIO.saveLogInf("联网信息：发送车辆注册信息失败,不能进行检测");
                                        return;
                                    }
                                }
                                ini.INIIO.saveLogInf("联网信息：发送车辆注册信息成功");
                            }
                            else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                            {
                                string code, msg;
                                System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                ht.Add("kssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                ht.Add("jclsh",carLogin.carbj.CLID);
                                ht.Add("hphm", carLogin.carbj.CLHP);
                                ht.Add("hpzl",mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL,""));
                                ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                ht.Add("jccs", carLogin.carbj.JCCS);
                                ht.Add("ycy", carLogin.carbj.JSY);
                                ht.Add("dly", carLogin.carbj.DLY);
                                ht.Add("czy", carLogin.carbj.CZY);
                                switch (carLogin.carbj.JCFF)
                                {
                                    case "ASM":
                                        ht.Add("jcffid", "2");break;
                                    case "VMAS":
                                        ht.Add("jcffid", "3"); break;
                                    case "JZJS":
                                        ht.Add("jcffid", "6"); break;
                                    case "ZYJS":
                                        ht.Add("jcffid", "4"); break;
                                    case "SDS":
                                        ht.Add("jcffid", "1"); break;
                                    case "LZ":
                                        ht.Add("jcffid", "5"); break;

                                }
                                ht.Add("jczt","4");
                                ht.Add("jcbz", "3");
                                ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB,""));
                                DataTable dtinf = new DataTable();
                                if (!mainPanel.hninterface.startTest(ht, out code, out msg))
                                {
                                   
                                        MessageBox.Show("发送开始检测命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                        ini.INIIO.saveLogInf("发送开始检测命令失败,code" + code + ",msg:" + msg);
                                        return;
                                }
                            }
                            else if (mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
                            {

                                bool jsstatus;
                                string jserrMsg = "";
                                string jsstationid = mainPanel.stationid, jslineid = mainPanel.stationid + mainPanel.lineid, jsinspectionId;
                                string ackstring = mainPanel.jsinterface.beginInspection(mainPanel.jsvehiclemodel.inspection_type, out jsstationid, out jslineid, out jsinspectionId, out jsstatus, out jserrMsg);
                                if (ackstring != "")
                                {
                                    MessageBox.Show(ackstring, "开始检测失败");
                                    ini.INIIO.saveLogInf("开始检测失败：" + ackstring);
                                    return;
                                }
                                else
                                {
                                    if (!jsstatus)
                                    {
                                        MessageBox.Show(jserrMsg);
                                        MessageBox.Show(jserrMsg, "开始检测失败");
                                        ini.INIIO.saveLogInf("开始检测失败：" + jserrMsg);
                                        return;
                                    }
                                    else
                                    {
                                        carLogin.carbj.JCBGBH = jsinspectionId;
                                        jcbgbh = carLogin.carbj.JCBGBH;
                                        ini.INIIO.saveLogInf("开始检测成功");
                                    }
                                }
                            }
                            else if (mainPanel.NetMode == mainPanel.AHNETMODE)
                            {
                                int ahresult = 0;
                                string ahErrMsg = "";
                                if (!mainPanel.ahinterface.BeginInspect(mainPanel.lineid, carLogin.carbj.CLID, carLogin.ahDriverID, carLogin.ahOperatorID, out ahresult, out ahErrMsg))
                                {
                                    MessageBox.Show("错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    return;
                                }
                                else
                                {
                                    ahisStartInspect = true;
                                }
                            }
                            else if (mainPanel.NetMode == mainPanel.NHNETMODE)
                            {
                                int nhcode, nhexpcode;
                                string nhmsg, nhexpmsg;
                                bool startflag = mainPanel.nhinterface.SendStartTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                if (nhcode == 0 && nhexpcode == 0)
                                {
                                    if (!startflag)
                                    {
                                        MessageBox.Show("错误代码：" + nhmsg);
                                        return;
                                    }
                                }
                                else if (nhcode != 0)
                                {
                                    MessageBox.Show("错误代码：" + nhmsg);
                                    return;
                                }
                                else if (nhexpcode != 0)
                                {
                                    MessageBox.Show("错误代码：" + nhexpmsg);
                                    return;
                                }
                                mainPanel.nhinterface.SendUploadEquipmentStatus("2", out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                            }
                            else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                            {
                                try
                                {
                                    DataTable dt = mainPanel.logininfcontrol.getTestState(carLogin.carbj.JYLSH, carLogin.carbj.JCCS);
                                    if (dt == null)
                                    {
                                        MessageBox.Show("未获取到该车状态信息：datatable为null");
                                        return;
                                    }
                                    else if (dt.Rows.Count == 0)
                                    {
                                        MessageBox.Show("未获取到该车状态信息：dt.Rows.Count = 0");
                                        return;
                                    }
                                    else if (dt.Rows[0]["ZT"].ToString() ==mainPanel.queryStartTestNotOk )
                                    {
                                        MessageBox.Show("该车验证未通过，不能开始检测：\r\n"+ dt.Rows[0]["BZ"].ToString());
                                        return;
                                    }
                                    else if (dt.Rows[0]["ZT"].ToString() == mainPanel.queryStartTest)
                                    {
                                        MessageBox.Show("该车还未进行验证，请稍后再试");
                                        return;
                                    }
                                    else if (dt.Rows[0]["ZT"].ToString() != mainPanel.queryStartTestOK)
                                    {
                                        MessageBox.Show("该车检测状态有疑点["+ dt.Rows[0]["ZT"].ToString()+"]，不能开始检测");
                                        return;
                                    }
                                }
                                catch(Exception er)
                                {
                                    MessageBox.Show("未获取到该车状态信息：" + er.Message);
                                    return;
                                }
                            }
                            else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                            {
                                string code, msg;
                                if (!mainPanel.jxinterface.logonAdditional(carLogin.jxthiscarinf.detectionId, new jxstartdetection(mainPanel.jxwebinf.lineid, carLogin.jxthiscarinf.testType, carLogin.carbj.CZY, carLogin.carbj.JSY), carLogin.jxthiscarinf.driveMode, out code, out msg))
                                {
                                    MessageBox.Show("logonAdditional失败,不能开始检测\r\ncode:" + code + "\r\nmessage:" + msg);
                                    return;
                                }
                            }
                            else if(mainPanel.NetMode==mainPanel.EZNETMODE)
                            {
                                string code, msg;
                                try
                                {
                                    EzWebClient.EzCodModelslibrarycatalogue data = new EzWebClient.EzCodModelslibrarycatalogue(
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                            carLogin.modelbj.CLHP,
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             carLogin.modelbj.EDGL,
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.QGS,
                                                             carLogin.modelbj.FDJPL,
                                                             carLogin.modelbj.FDJSCQY,
                                                             carLogin.modelbj.FDJHM,
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             "N", 
                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.DKGYYB, "N"),
                                                             "Y",
                                                             "N",
                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, "N"),
                                                             carLogin.carbj.JCBGBH,
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             carLogin.modelbj.JZZL,
                                                             carLogin.modelbj.SCRQ.ToString("yyyyMMdd"),
                                                             carLogin.carbj.XSLC,
                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.CZDZ,
                                                             carLogin.modelbj.CZ,
                                                             carLogin.modelbj.LXDH,
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             carLogin.modelbj.QDLTQY,
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             carLogin.modelbj.PP,
                                                             carLogin.modelbj.SCQY,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.CLSBM,
                                                             "",
                                                             carLogin.modelbj.CLSBM,
                                                             "",
                                                             carLogin.modelbj.ZZL
                                        );
                                    if (!mainPanel.ezinterface.uploadEzCodModelslibrarycatalogue(data, out code, out msg))
                                    {
                                        MessageBox.Show("新增车辆信息失败,不能开始检测\r\ncode:" + code + "\r\nmessage:" + msg);
                                        return;
                                    }
                                }
                                catch (Exception er)
                                {
                                    MessageBox.Show("新增车辆信息发生异常:" + er.Message);
                                    return;
                                }
                            }
                            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                            {
                                string code, msg;
                                if (!mainPanel.xbsocket.Send_START_TEST(carLogin.carbj.JYLSH, carLogin.carbj.JCCS, out code, out msg))
                                {
                                    MessageBox.Show("车辆检测开始失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                    ini.INIIO.saveLogInf("车辆检测开始失败,code" + code + ",msg:" + msg);
                                    return;
                                }
                            }
                        }

                        
                        //regCarWait2Net(carinf, carLogin.carbj);
                        //Process myprocess = new Process();
                        switch (carLogin.carbj.JCFF)
                        {

                            case "ASM":
                                Process.Start("D://环保检测子程序/ASMtest.EXE", isautostart ? "auto" : "manual");
                                exeName = "ASMtest";
                                break;
                            case "VMAS":
                                Process.Start("D://环保检测子程序/Vmastest.EXE", isautostart ? "auto" : "manual");
                                exeName = "Vmastest";
                                break;
                            case "JZJS":
                                Process.Start("D://环保检测子程序/lugdowm.EXE", isautostart ? "auto" : "manual");
                                exeName = "lugdowm";
                                break;
                            case "ZYJS":
                                Process.Start("D://环保检测子程序/zyjsTest.EXE", isautostart ? "auto" : "manual");
                                exeName = "zyjsTest";
                                break;
                            case "SDS":
                                Process.Start("D://环保检测子程序/sds.EXE", isautostart ? "auto" : "manual");
                                exeName = "sds";
                                break;
                            case "SDSM":
                                Process.Start("D://环保检测子程序/sds.EXE", isautostart ? "auto" : "manual");
                                exeName = "sds";
                                break;
                            case "LZ":
                                Process.Start("D://环保检测子程序/lztest.EXE", isautostart ? "auto" : "manual");
                                exeName = "lztest";
                                break;
                            default: break;
                        }
                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                        {
                            mainPanel.opratormode.ID = carLogin.carbj.CLID;
                            mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                            mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                            mainPanel.opratormode.STATUS = "已上线";
                            mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                            mainPanel.opratormode.YL1 = "";
                            mainPanel.opratormode.YL2 = "";
                            mainPanel.opratormode.YL3 = "";
                            mainPanel.opratormode.YL4 = "";
                            mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                        }
                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                        {
                            车辆检测状态 teststate = new 车辆检测状态();
                            teststate.JCZBH = mainPanel.stationid;
                            teststate.LINEID = mainPanel.lineid;
                            teststate.JYLSH = carLogin.carbj.JYLSH;
                            teststate.JYCS = carLogin.carbj.JCCS;
                            teststate.JCSJ = DateTime.Now;
                            teststate.CLHP = carLogin.carbj.CLHP;
                            teststate.HPZL = carLogin.carbj.HPZL;
                            teststate.ZT = mainPanel.startTest;
                            teststate.JCFF = carLogin.carbj.JCFF;
                            mainPanel.logininfcontrol.Save_TestState(teststate);
                        }
                        mainPanel.worklogdata.ProjectID = mainPanel.stationid + mainPanel.lineid + DateTime.Now.ToString("yyMMddHHmmss");//线号“00”代表为登录机进行的操作
                        mainPanel.worklogdata.ProjectName = "操作日志";
                        mainPanel.worklogdata.Stationid = mainPanel.stationid;
                        mainPanel.worklogdata.Lineid = mainPanel.lineid;
                        mainPanel.worklogdata.Czy = mainPanel.nowUser.userName;
                        mainPanel.worklogdata.Data = "开始检测车辆" + carLogin.carbj.CLHP + ",驾控员:" + carLogin.carbj.JSY + ",检测方法：" + carLogin.carbj.JCFF;
                        mainPanel.worklogdata.State = "成功";
                        mainPanel.worklogdata.Result = "";
                        mainPanel.worklogdata.Date = DateTime.Now;
                        mainPanel.worklogdata.Bzsm = "";
                        mainPanel.demarcatecontrol.saveWordLogByIni(mainPanel.worklogdata);
                        ini.INIIO.saveLogInf("检测方法：" + carLogin.carbj.JCFF);
                        th_wait = new Thread(waitTestFinished);
                        th_wait.Start();
                        ini.INIIO.saveLogInf("开始检测");
                    }
                    catch (Exception er)
                    {
                        ini.INIIO.saveLogInf("点击开始测量时出现异常:" + er.Message);
                    }
                }
            }
        }
        private void waitTestFinished()
        {
            try
            {
                string CrucialTime0 = "";
                string CrucialTime1 = "";
                string CrucialTime2 = "";
                string CrucialTime3 = "";
                string CrucialTime4 = "";
                string newPath = "C://jcdatatxt/" + carLogin.carbj.CLID + ".ini";
                string newCsvPath = "C://jcdatatxt/" + carLogin.carbj.CLID + ".csv";
                string newStatusPath = "C://jcdatatxt/statusConfig.ini";//安车及其他平台上的状态文件
                string neuStatusPath = "C://jcdatatxt/neustatusConfig.ini";//东软平台上的状态文件
                string glStatusPath = "C://jcdatatxt/glstatusConfig.ini";//东软平台上的状态文件
                string newAhCsvPath = "C://jcdatatxt/" + carLogin.carbj.CLID + "ah.csv";
                if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.CYNETMODE)
                {
                    newPath = "C://xcdatatxt/" + carLogin.carbj.CLID + ".ini";
                    newCsvPath = "C://xcdatatxt/" + carLogin.carbj.CLID + ".csv";
                    newStatusPath = "C://xcdatatxt/statusConfig.ini";//安车及其他平台上的状态文件
                    neuStatusPath = "C://xcdatatxt/neustatusConfig.ini";//东软平台上的状态文件
                    newAhCsvPath = "C://xcdatatxt/" + carLogin.carbj.CLID + "ah.csv";

                }
                while (mainPanel.processalive)
                {
                    Thread.Sleep(200);
                    
                    if (File.Exists(glStatusPath))
                    {
                        #region 查询到桂林状态文件
                        ini.INIIO.saveLogInf("waitTestFinished()进程中查询到\"" + glStatusPath + "\"存在");
                        carinfor.statusconfigInfdata statusdata = new carinfor.statusconfigInfdata();
                        statusdata = statusini.getGlConfigIni();
                        switch (statusdata.nType)
                        {
                            case "daowei":
                                if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.GUILINNETMODE)
                                {
                                    string result;
                                    string errmsg = "";
                                    DataTable dt = new DataTable();
                                    Hashtable ht2 = new Hashtable();
                                    ht2.Add("stationcode", mainPanel.stationid);
                                    ht2.Add("linecode", mainPanel.lineid);
                                    ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                    ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                    if (!mainPanel.gxinterface.startTest(ht2, out result, out errmsg))
                                    {
                                        ini.INIIO.saveLogInf("发送桂林联网开始检测失败,code=" + result + ",msg=" + errmsg);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("发送桂林联网开始检测成功");
                                    }
                                }
                                break;
                            case "tantou":
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                {
                                    string result;
                                    string errmsg = "";
                                    DataTable dt = new DataTable();
                                    Hashtable ht2 = new Hashtable();
                                    ht2.Add("stationcode", mainPanel.stationid);
                                    ht2.Add("linecode", mainPanel.lineid);
                                    ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                    ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                    if (!mainPanel.gxinterface.chaGuanFinish(ht2, out result, out errmsg))
                                    {
                                        ini.INIIO.saveLogInf("发送桂林安插探头信号失败,code=" + result + ",msg=" + errmsg);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("发送桂林安插探头信号成功");
                                    }
                                }
                                break;
                            case "startsample":
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                {
                                    string result;
                                    string errmsg = "";
                                    DataTable dt = new DataTable();
                                    Hashtable ht2 = new Hashtable();
                                    ht2.Add("stationcode", mainPanel.stationid);
                                    ht2.Add("linecode", mainPanel.lineid);
                                    ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                    ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                    if (!mainPanel.gxinterface.startDataSample(ht2, out result, out errmsg))
                                    {
                                        ini.INIIO.saveLogInf("发送桂林采集数据开始失败,code=" + result + ",msg=" + errmsg);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("发送桂林采集数据开始成功");
                                    }
                                }
                                break;
                            case "endsample":
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                {
                                    string result;
                                    string errmsg = "";
                                    DataTable dt = new DataTable();
                                    Hashtable ht2 = new Hashtable();
                                    ht2.Add("stationcode", mainPanel.stationid);
                                    ht2.Add("linecode", mainPanel.lineid);
                                    ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                    ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                    if (!mainPanel.gxinterface.stopDataSample(ht2, out result, out errmsg))
                                    {
                                        ini.INIIO.saveLogInf("发送桂林采集数据结束失败,code=" + result + ",msg=" + errmsg);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("发送桂林采集数据结束成功");
                                    }
                                }
                                break;
                            default: break;
                        }
                        ini.INIIO.saveLogInf("检测桂林状态代码：" + statusdata.nType);
                        File.Delete(glStatusPath);
                        //ini.INIIO.saveLogInf("删除文件：" + neuStatusPath);
                        #endregion
                    }
                    if (File.Exists(neuStatusPath))//东软平台状态字处理
                    {
                        #region 查询到东软状态文件 
                        ini.INIIO.saveLogInf("waitTestFinished()进程中查询到\"" + neuStatusPath + "\"存在");
                        carinfor.statusconfigInfdata statusdata = new carinfor.statusconfigInfdata();
                        statusdata = statusini.getNeuConfigIni();
                        string status = "";
                        bool neusoftstatus = false;
                        switch (statusdata.nType)
                        {
                            case "StartTest":
                                CrucialTime0 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                status = "开始检测";
                                neusoftstatus = true;
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid,carLogin.carbj.CLID,0, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NHNETMODE)
                                {
                                    ini.INIIO.saveLogInf("南华联网信息：发送拍照命令");
                                    int nhcode, nhexpcode;
                                    string nhmsg, nhexpmsg;
                                    bool startflag = mainPanel.nhinterface.SendTakePhoto(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                    if (nhcode == 0 && nhexpcode == 0)
                                    {
                                        if (!startflag)
                                        {
                                            ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                        }
                                    }
                                    else if (nhcode != 0)
                                    {
                                        ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                    }
                                    else if (nhexpcode != 0)
                                    {
                                        ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                    }
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 1);
                                }
                                else if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.HNNETMODE)
                                {
                                    string code, msg;
                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "1");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                        //return;
                                    }
                                    ht.Clear();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "4");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                        //return;
                                    }

                                }
                                /*
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                {
                                    string result;
                                    string errmsg = "";
                                    DataTable dt = new DataTable();
                                    Hashtable ht2 = new Hashtable();
                                    ht2.Add("stationcode", mainPanel.stationid);
                                    ht2.Add("linecode", mainPanel.lineid);
                                    ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                    ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                    if (!mainPanel.gxinterface.startTest(ht2, out result, out errmsg))
                                    {
                                        ini.INIIO.saveLogInf("发送桂林联网开始检测失败,code=" + result + ",msg=" + errmsg);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("发送桂林联网开始检测成功");
                                    }
                                }*/
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                {
                                    #region 上传检测开始命令
                                    mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                    mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                    ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendStart);
                                    Thread thread = new Thread(threadstart);
                                    ini.INIIO.saveLogInf("开始上传检测开始命令，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    int alivetimecount = 0;
                                    int reSend = 0;
                                    thread.Start();
                                    string result, info;
                                    bool isExcedTimeToUpload = false;
                                    while (thread.IsAlive)
                                    {
                                        Thread.Sleep(10);
                                        alivetimecount++;
                                        if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                        {
                                            isExcedTimeToUpload = true;
                                            try
                                            {
                                                thread.Abort();
                                            }
                                            catch
                                            { }
                                            ini.INIIO.saveLogInf("上传检测开始失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));

                                        }

                                    }
                                    if (!isExcedTimeToUpload)
                                    {
                                        uploadStartSuccess = true;
                                        ini.INIIO.saveLogInf("上传检测开始成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                        mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                        ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                    }
                                    #endregion
                                }
                                //else if (mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused&&mainPanel.capturecontrol!=null)
                                    {
                                        switch (carLogin.carbj.JCFF)
                                        {
                                        case "VMAS":
                                            if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_vmas_start)
                                            {
                                                mainPanel.capturecontrol.startFrontCaptureThread(frontpic1);
                                                mainPanel.capturecontrol.startBackCaptureThread(backpic1);
                                            }
                                            break;
                                        case "ASM":
                                            if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_asm_start)
                                            {
                                                mainPanel.capturecontrol.startFrontCaptureThread(frontpic1);
                                                mainPanel.capturecontrol.startBackCaptureThread(backpic1);
                                            }
                                            break;
                                        case "SDS":
                                            if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_sds_start)
                                            {
                                                mainPanel.capturecontrol.startFrontCaptureThread(frontpic1);
                                                mainPanel.capturecontrol.startBackCaptureThread(backpic1);
                                            }
                                            break;
                                        case "SDSM":
                                            if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_sds_start)
                                            {
                                                mainPanel.capturecontrol.startFrontCaptureThread(frontpic1);
                                                mainPanel.capturecontrol.startBackCaptureThread(backpic1);
                                            }
                                            break;
                                        case "JZJS":
                                            if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_lugdown_start)
                                            {
                                                mainPanel.capturecontrol.startFrontCaptureThread(frontpic1);
                                                mainPanel.capturecontrol.startBackCaptureThread(backpic1);
                                            }
                                            break;
                                        case "ZYJS":
                                            if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_btg_start)
                                            {
                                                mainPanel.capturecontrol.startFrontCaptureThread(frontpic1);
                                                mainPanel.capturecontrol.startBackCaptureThread(backpic1);
                                            }
                                            break;
                                        default:break;
                                    }
                                    }
                                //}
                                break;//exist in neusoft-mode
                            case "TestingHigh":
                                status = "HighIdle";
                                CrucialTime1 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    //teststate.ZT = mainPanel.highIdlesStart;
                                    teststate.ZT = (carLogin.carbj.JCFF == "SDS") ? mainPanel.highIdlesStart : mainPanel.highIdlesStartM;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 2);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HNNETMODE)
                                {
                                    string code, msg;
                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "2");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                        //return;
                                    }
                                    ht.Clear();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "5");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                    {
                                        int ahresult = 0;
                                        string ahErrMsg = "";
                                        if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID,9, out ahresult, out ahErrMsg))
                                        {
                                            ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        }
                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                       // return;
                                    }

                                }
                                //else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null&&mainPanel.capturedata.cap_sds_high)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic2);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic2);
                                    }
                                //}
                                break;//exist in neusoft-mode
                            case "TestingLow":
                                status = "LowIdle";
                                CrucialTime2 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT =( carLogin.carbj.JCFF=="SDS")?mainPanel.lowIdleStart:mainPanel.lowIdleStartM;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 3);
                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 10, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                //else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_sds_low)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic3);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic3);
                                    }
                                //}
                                break;//exist in neusoft-mode
                            case "Testing15km":
                                status = "15km/h";
                                neusoftstatus = true;
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.vmas15;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 2);
                                }
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_vmas_15)
                                {
                                    mainPanel.capturecontrol.startFrontCaptureThread(frontpic2);
                                    mainPanel.capturecontrol.startBackCaptureThread(backpic2);
                                }
                                break;//exist in neusoft-mode
                            case "Testing32km":
                                status = "32km/h";
                                neusoftstatus = true;
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.vmas32;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 3);
                                }
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_vmas_32)
                                {
                                    mainPanel.capturecontrol.startFrontCaptureThread(frontpic3);
                                    mainPanel.capturecontrol.startBackCaptureThread(backpic3);
                                }
                                break;//exist in neusoft-mode
                            case "Testing50km":
                                status = "50km/h";
                                neusoftstatus = true;
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.vmas50;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 4);
                                }
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_vmas_50)
                                {
                                    mainPanel.capturecontrol.startFrontCaptureThread(frontpic4);
                                    mainPanel.capturecontrol.startBackCaptureThread(backpic4);
                                }
                                break;//exist in neusoft-mode
                            case "Testing5025":
                                status = "5025工况";
                                neusoftstatus = true;
                                CrucialTime1 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.asm5025start;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HNNETMODE)
                                {
                                    string code, msg;
                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "2");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                        //return;
                                    }
                                    ht.Clear();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "5");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                        //return;
                                    }

                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 5, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_asm_5025)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic2);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic2);
                                    }
                                break;//exist in neusoft-mode
                            case "Testing2540":
                                status = "2540工况";
                                neusoftstatus = true;
                                CrucialTime2 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.asm2540start;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 6, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID,7, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 8, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                //else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_asm_2540)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic3);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic3);
                                    }
                               // }
                                break;//exist in neusoft-mode
                            case "K100Testing":
                                status = "100%velmaxhp";
                                neusoftstatus = true;
                                CrucialTime1 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.lugdown100Vel;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 2);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HNNETMODE)
                                {
                                    string code, msg;
                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "2");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                        //return;
                                    }
                                    ht.Clear();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "5");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                        //return;
                                    }

                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 11, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                //else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_lugdown_100)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic2);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic2);
                                    }
                                //}
                                break;//exist in neusoft-mode
                            case "K90Testing":
                                status = "90%velmaxhp";
                                neusoftstatus = true;
                                CrucialTime2 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.lugdown90Vel;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 3);
                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 12, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                //else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_lugdown_90)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic3);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic3);
                                    }
                                //}
                                break;//exist in neusoft-mode
                            case "K80Testing":
                                status = "80%velmaxhp";
                                neusoftstatus = true;
                                CrucialTime3 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.lugdown80Vel;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 4);
                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 13, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                //else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_lugdown_80)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic4);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic4);
                                    }
                                //}
                                break;//exist in neusoft-mode         
                            case "firstTest":
                                status = "80%velmaxhp";
                                neusoftstatus = true;
                                CrucialTime1 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.btgFirst;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 2);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HNNETMODE)
                                {
                                    string code, msg;
                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "2");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                        //return;
                                    }
                                    ht.Clear();
                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                    ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                    ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                    ht.Add("zpzl", "5");
                                    switch (carLogin.carbj.JCFF)
                                    {
                                        case "ASM":
                                            ht.Add("jcffid", "2"); break;
                                        case "VMAS":
                                            ht.Add("jcffid", "3"); break;
                                        case "JZJS":
                                            ht.Add("jcffid", "6"); break;
                                        case "ZYJS":
                                            ht.Add("jcffid", "4"); break;
                                        case "SDS":
                                            ht.Add("jcffid", "1"); break;
                                        case "LZ":
                                            ht.Add("jcffid", "5"); break;

                                    }
                                    if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                        //return;
                                    }

                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 14, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                //else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_btg_first)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic2);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic2);
                                    }
                                //}
                                break;//exist in neusoft-mode
                            case "secondTest":
                                status = "80%velmaxhp";
                                neusoftstatus = true;
                                CrucialTime2 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.btgSecond;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 3);
                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 15, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                //else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_btg_second)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic3);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic3);
                                    }
                                //}
                                break;//exist in neusoft-mode
                            case "thirdTest":
                                status = "80%velmaxhp";
                                neusoftstatus = true;
                                CrucialTime3 = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                {
                                    车辆检测状态 teststate = new 车辆检测状态();
                                    teststate.JCZBH = mainPanel.stationid;
                                    teststate.LINEID = mainPanel.lineid;
                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                    teststate.JYCS = carLogin.carbj.JCCS;
                                    teststate.JCSJ = DateTime.Now;
                                    teststate.CLHP = carLogin.carbj.CLHP;
                                    teststate.HPZL = carLogin.carbj.HPZL;
                                    teststate.ZT = mainPanel.btgThird;
                                    teststate.JCFF = carLogin.carbj.JCFF;
                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                }
                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                {
                                    mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 4);
                                }
                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                {
                                    int ahresult = 0;
                                    string ahErrMsg = "";
                                    if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 16, out ahresult, out ahErrMsg))
                                    {
                                        ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                        //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    }
                                }
                                //else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                //{
                                if (mainPanel.iscameraused && mainPanel.capturecontrol != null && mainPanel.capturedata.cap_btg_third)
                                    {
                                        mainPanel.capturecontrol.startFrontCaptureThread(frontpic4);
                                        mainPanel.capturecontrol.startBackCaptureThread(backpic4);
                                    }
                                //}
                                break;//exist in neusoft-mode                             
                            default: break;
                        }
                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE && neusoftstatus)
                        {
                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                            {
                                string result, inf;
                                if (!mainPanel.sysocket.SendTestStatus(carLogin.outLookID, "StartTest", out result, out inf))
                                {
                                    ini.INIIO.saveLogInf("东软联网信息：发送检测状态失败："+ "异常:" + result + "|信息:" + inf);
                                }
                                else
                                    ini.INIIO.saveLogInf("东软联网信息：发送检测状态:" + statusdata.nType);
                            }
                            else
                            {
                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                string ackresult, errormessage;
                                mainPanel.neusoftsocket.SendTestStatus(carLogin.outLookID, statusdata.nType, out ackresult, out errormessage);
                                ini.INIIO.saveLogInf("东软联网信息：发送检测状态:" + statusdata.nType);
                            }
                        }
                        ini.INIIO.saveLogInf("检测状态代码：" + statusdata.nType + "|检测状态：" + status);
                        Msg(labelStatus, panelStatus, status);
                        File.Delete(neuStatusPath);
                        ini.INIIO.saveLogInf("删除文件：" + neuStatusPath);
                        #endregion
                    }
                    if (File.Exists(newStatusPath))//安车及其他平台状态字处理
                    {
                        #region 查询到安车状态文件
                        ini.INIIO.saveLogInf("waitTestFinished()进程中查询到\"" + newStatusPath + "\"存在");
                        carinfor.statusconfigInfdata statusdata = new carinfor.statusconfigInfdata();
                        statusdata = statusini.getConfigIni();
                        string status = "";
                        string gwzt = "";
                        string videozt = "";
                        bool acsoftstatue = false;
                        switch (statusdata.nType)
                        {
                            case "H": status = "预热中"; acsoftstatue = true; break;
                            case "W": status = "空闲"; acsoftstatue = true; break;
                            case "L": status = "到位"; acsoftstatue = true; gwzt = "1"; videozt = "S"; break;
                            case "D": status = "下降"; acsoftstatue = true; break;
                            case "T": status = "检测中"; acsoftstatue = true; break;
                            case "Z": status = "接转速"; acsoftstatue = true; break;
                            case "I": status = "插探头"; acsoftstatue = true; gwzt = "2"; break;
                            case "A": status = "加速"; acsoftstatue = true; gwzt = "3"; break;
                            case "U": status = "举升"; acsoftstatue = true; break;
                            case "P": status = "过车"; acsoftstatue = true; gwzt = "4"; break;
                            case "F": status = "检测失败"; acsoftstatue = true; break;
                            case "C": status = "标定"; acsoftstatue = true; break;
                            case "V": status = "自检"; acsoftstatue = true; break;
                            case "E": status = "故障"; acsoftstatue = true; break;
                            case "J": status = "标定结束"; acsoftstatue = true; break;
                            case "K": status = "自检结束"; acsoftstatue = true; break;
                            default: break;
                        }
                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HNNETMODE&&status=="过车")
                        {
                            string code, msg;
                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                            ht.Add("jclsh", carLogin.carbj.CLID);
                            ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                            ht.Add("jccs", carLogin.carbj.JCCS);
                            ht.Add("hphm", carLogin.carbj.CLHP);
                            ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                            ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                            ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                            ht.Add("zpzl", "3");
                            switch (carLogin.carbj.JCFF)
                            {
                                case "ASM":
                                    ht.Add("jcffid", "2"); break;
                                case "VMAS":
                                    ht.Add("jcffid", "3"); break;
                                case "JZJS":
                                    ht.Add("jcffid", "6"); break;
                                case "ZYJS":
                                    ht.Add("jcffid", "4"); break;
                                case "SDS":
                                    ht.Add("jcffid", "1"); break;
                                case "SDSM":
                                    ht.Add("jcffid", "1"); break;
                                case "LZ":
                                    ht.Add("jcffid", "5"); break;

                            }
                            if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                            {
                                ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                //return;
                            }
                            ht.Clear();
                            ht.Add("jclsh", carLogin.carbj.CLID);
                            ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                            ht.Add("jccs", carLogin.carbj.JCCS);
                            ht.Add("hphm", carLogin.carbj.CLHP);
                            ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                            ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                            ht.Add("pssj", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                            ht.Add("zpzl", "6");
                            switch (carLogin.carbj.JCFF)
                            {
                                case "ASM":
                                    ht.Add("jcffid", "2"); break;
                                case "VMAS":
                                    ht.Add("jcffid", "3"); break;
                                case "JZJS":
                                    ht.Add("jcffid", "6"); break;
                                case "ZYJS":
                                    ht.Add("jcffid", "4"); break;
                                case "SDS":
                                    ht.Add("jcffid", "1"); break;
                                case "LZ":
                                    ht.Add("jcffid", "5"); break;

                            }
                            if (!mainPanel.hninterface.capturePic(ht, out code, out msg))
                            {
                                ini.INIIO.saveLogInf("发送capturePic失败,code" + code + ",msg:" + msg);
                                //return;
                            }

                        }
                        if (mainPanel.isNetUsed && gwzt != "")
                        {
                            if (mainPanel.NetMode == mainPanel.WGNETMODE)
                            {
                                carinfor.WGTakePictureData wgdata = new carinfor.WGTakePictureData();
                                wgdata.JCBGBH = jcbgbh;
                                wgdata.GWZT = gwzt;
                                wgdata.JCGWH = mainPanel.lineid;
                                wgdata.CREATEDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                mainPanel.wgsocket.SendTakePictureData(wgdata);
                                ini.INIIO.saveLogInf("万国联网信息：发送检测状态:" + gwzt);
                            }
                        }
                        if (mainPanel.isNetUsed && videozt != "")
                        {
                            if (mainPanel.NetMode == mainPanel.WGNETMODE)
                            {
                                carinfor.WGTakeVideoData wgdata = new carinfor.WGTakeVideoData();
                                wgdata.JCBGBH = jcbgbh;
                                wgdata.ZT = videozt;
                                wgdata.JCGWH = mainPanel.lineid;
                                wgdata.LXKSSJ = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                mainPanel.wgsocket.SendTakeVideoData(wgdata);
                                ini.INIIO.saveLogInf("万国联网信息：发送检测状态:" + videozt);
                            }
                        }
                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ACNETMODE&&acsoftstatue)
                        {
                            carinfor.equipmentStatus equipmentcontrol = new carinfor.equipmentStatus();
                            equipmentcontrol.JCBGBH = jcbgbh;
                            equipmentcontrol.JCGWH = mainPanel.lineid;
                            equipmentcontrol.SJXL = statusdata.SJXL;
                            equipmentcontrol.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                            equipmentcontrol.writeEquipmentStatus(char.Parse(statusdata.nType));
                            ini.INIIO.saveLogInf("安车联网信息：发送检测状态:" + statusdata.nType);
                        }
                        ini.INIIO.saveLogInf("检测状态代码：" + statusdata.nType + "|检测状态：" + status);
                        Msg(labelStatus, panelStatus, status);
                        File.Delete(newStatusPath);
                        ini.INIIO.saveLogInf("删除文件：" + newStatusPath);
                        #endregion
                    }

                    if (File.Exists(newPath))
                    {

                        #region 查询到数据文件
                        ini.INIIO.saveLogInf("waitTestFinished()进程中查询到\"" + newPath + "\"存在");
                        
                        if (mainPanel.isNetUsed)
                        {
                            #region 联网状态下检测结束信息上传
                            if (mainPanel.NetMode == mainPanel.WGNETMODE)
                            {
                                carinfor.WGTakeVideoData wgdata = new carinfor.WGTakeVideoData();
                                wgdata.JCBGBH = jcbgbh;
                                wgdata.ZT = "E";
                                wgdata.JCGWH = mainPanel.lineid;
                                wgdata.LXKSSJ = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                mainPanel.wgsocket.SendTakeVideoData(wgdata);
                                ini.INIIO.saveLogInf("万国联网信息：发送录相结束指令");
                            }
                            else if (mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
                            {
                                bool jsstatus;
                                string jserrMsg = "";
                                string ackstring = mainPanel.jsinterface.stopInspection(out jsstatus, out jserrMsg);
                                if (ackstring != "")
                                {
                                    MessageBox.Show(ackstring, "结束检测失败");
                                    ini.INIIO.saveLogInf("结束检测失败：" + ackstring);
                                }
                                else
                                {
                                    if (!jsstatus)
                                    {
                                        MessageBox.Show(jserrMsg);
                                        MessageBox.Show(jserrMsg, "结束检测失败");
                                        ini.INIIO.saveLogInf("结束检测失败：" + jserrMsg);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("结束检测成功");
                                    }
                                }
                            }
                            if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                            {
                                int ahresult = 0;
                                string ahErrMsg = "";
                                if (!mainPanel.ahinterface.TakePhoto(mainPanel.lineid, carLogin.carbj.CLID, 1, out ahresult, out ahErrMsg))
                                {
                                    ini.INIIO.saveLogInf("拍照发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                    //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                }
                            }
                            #endregion
                        }
                        Thread.Sleep(500);//等待两秒以确保文件内容写完
                        jssj = DateTime.Now;
                        switch (carLogin.carbj.JCFF)
                        {
                            case "ASM":
                                #region 稳态工况法
                                ini.INIIO.WritePrivateProfileString("测功机上次运转时间", "时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), @".\detectConfig.ini");

                                string asminifileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                if (ini.INIIO.createDir(asminifileDir))
                                    File.Copy(newPath, asminifileDir + "/" + carLogin.carbj.CLID + ".ini", true);
                                File.Copy(newPath, "D://dataseconds/" + carLogin.carbj.CLID + ".ini", true);
                                asm_data = asmdatacontrol.readAsmData(newPath);
                                if (asm_data.Co5025 == "-1")
                                {
                                    #region 检测终止
                                    ini.INIIO.saveLogInf("设备未完成检测退出,无检测结果数据");
                                    mainPanel.ts1 = "设备未完成检测退出";
                                    mainPanel.ts2 = "无检测结果数据";
                                    if (mainPanel.isNetUsed)
                                    {
                                        if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                        {
                                            carinfor.equipmentStatus equipmentcontrol = new carinfor.equipmentStatus();
                                            equipmentcontrol.JCBGBH = jcbgbh;
                                            equipmentcontrol.JCGWH = mainPanel.lineid;
                                            equipmentcontrol.SJXL = asm_data.RESULT;
                                            equipmentcontrol.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            equipmentcontrol.writeEquipmentStatus('F');
                                            ini.INIIO.saveLogInf("安车联网信息：发送检测失败指令");
                                        }
                                        else if (mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                                        {
                                            NeusoftUtil.UploadGasolineResult asmresult = new NeusoftUtil.UploadGasolineResult();
                                            asmresult.OutlookID = carLogin.outLookID;
                                            asmresult.Temperature = "";
                                            asmresult.AirPressure = "";
                                            asmresult.Humidity = "";
                                            asmresult.CO5025 = "";
                                            asmresult.HC5025 = "";
                                            asmresult.NO5025 = "";
                                            asmresult.CO2540 = "";
                                            asmresult.HC2540 = "";
                                            asmresult.NO2540 = "";
                                            asmresult.AmbientCO = "";
                                            asmresult.AmbientCO2 = "";
                                            asmresult.AmbientHC = "";
                                            asmresult.AmbientNO = "";
                                            asmresult.AmbientO2 = "";
                                            asmresult.BackgroundCO = "";
                                            asmresult.BackgroundCO2 = "";
                                            asmresult.BackgroundHC = "";
                                            asmresult.BackgroundNO = "";
                                            asmresult.BackgroundO2 = "";
                                            asmresult.ResidualHC = "";
                                            asmresult.Rev2540 = "";
                                            asmresult.Rev5025 = "";
                                            asmresult.Power2540 = "";
                                            asmresult.Power5025 = "";
                                            asmresult.Lambda5025 = "";
                                            asmresult.Lambda2540 = "";
                                            asmresult.Has2540Tested = "";
                                            asmresult.Has5025Tested = "";
                                            asmresult.Result = "2";
                                            asmresult.StopReason = "9";
                                            asmresult.StartTime = "";
                                            asmresult.AdjustZero = "";

                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadGasolineResultRequest(asmresult, null, out result, out inf, out dtack);
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                mainPanel.neusoftsocket.UploadGasolineResultRequest(asmresult, null, out ackresult, out errormessage);
                                            }
                                            ini.INIIO.saveLogInf("东软联网信息：发送检测失败指令");
                                        }
                                        else if(mainPanel.NetMode==mainPanel.AHNETMODE)
                                        {
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.StopInspect(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("StopInspect\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送StopInspect指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            ini.INIIO.saveLogInf("南华联网信息：发送检测终止命令");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                        {
                                            车辆检测状态 teststate = new 车辆检测状态();
                                            teststate.JCZBH = mainPanel.stationid;
                                            teststate.LINEID = mainPanel.lineid;
                                            teststate.JYLSH = carLogin.carbj.JYLSH;
                                            teststate.JYCS = carLogin.carbj.JCCS;
                                            teststate.JCSJ = DateTime.Now;
                                            teststate.CLHP = carLogin.carbj.CLHP;
                                            teststate.HPZL = carLogin.carbj.HPZL;
                                            teststate.ZT = mainPanel.stopTest;
                                            teststate.JCFF = carLogin.carbj.JCFF;
                                            mainPanel.logininfcontrol.Save_TestState(teststate);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                        {
                                            string code, msg;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                            ht.Add("jclsh", carLogin.carbj.CLID);
                                            ht.Add("hphm", carLogin.carbj.CLHP);
                                            ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                            ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                            ht.Add("jccs", carLogin.carbj.JCCS);
                                            ht.Add("ycy", carLogin.carbj.JSY);
                                            ht.Add("dly", carLogin.carbj.DLY);
                                            ht.Add("czy", carLogin.carbj.CZY);
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "ASM":
                                                    ht.Add("jcffid", "2"); break;
                                                case "VMAS":
                                                    ht.Add("jcffid", "3"); break;
                                                case "JZJS":
                                                    ht.Add("jcffid", "6"); break;
                                                case "ZYJS":
                                                    ht.Add("jcffid", "4"); break;
                                                case "SDS":
                                                    ht.Add("jcffid", "1"); break;
                                                case "LZ":
                                                    ht.Add("jcffid", "5"); break;

                                            }
                                            ht.Add("jczt", "2");
                                            ht.Add("jcbz", "3");
                                            ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                            ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                            DataTable dtinf = new DataTable();
                                            if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                            {
                                                MessageBox.Show("发送开始检测命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送开始检测命令失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.ZKYTNETMODE)
                                        {
                                            if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                            {
                                                mainPanel.yichangInterface.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            else if(mainPanel.zkytwebinf.add==mainPanel.ZKYTAREA_OTHER)
                                            {
                                                mainPanel.yichangInterfaceOther.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                            {
                                                mainPanel.yichangInterfaceYnbs.xxtz(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            try
                                            {
                                                ini.INIIO.saveLogInf(carinidata.CarID + " sendMessage(" + carLogin.carbj.JYLSH + "," + mainPanel.zkytwebinf.regcode + ",04,)");
                                            }
                                            catch
                                            { }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                                        {
                                            string code, msg;
                                            if (!mainPanel.xbsocket.Send_TEST_STOP(carLogin.carbj.JYLSH, carLogin.carbj.JCCS,"用户主动终止", out code, out msg))
                                            {
                                                //MessageBox.Show("车辆检测开始失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送车辆检测终止失败,code" + code + ",msg:" + msg);
                                                //return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                        {
                                            string result;
                                            string errmsg = "";
                                            DataTable dt = new DataTable();
                                            Hashtable ht2 = new Hashtable();
                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("linecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            if (!mainPanel.gxinterface.finishTest(ht2, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测失败,code=" + result + ",msg=" + errmsg);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测成功");
                                            }
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                            mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                            mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                            mainPanel.opratormode.STATUS = "已中止";
                                            mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                            mainPanel.opratormode.YL1 = "";
                                            mainPanel.opratormode.YL2 = "";
                                            mainPanel.opratormode.YL3 = "";
                                            mainPanel.opratormode.YL4 = "";
                                            mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                        }
                                    }
                                    Msg(label1, panel4, "设备未完成检测退出,无检测结果数据");
                                    Msg(labelStatus, panelStatus, "故障");
                                    mainPanel.worklogdata.ProjectID = mainPanel.stationid + mainPanel.lineid + DateTime.Now.ToString("yyMMddHHmmss");//线号“00”代表为登录机进行的操作
                                    mainPanel.worklogdata.ProjectName = "操作日志";
                                    mainPanel.worklogdata.Stationid = mainPanel.stationid;
                                    mainPanel.worklogdata.Lineid = mainPanel.lineid;
                                    mainPanel.worklogdata.Czy = mainPanel.nowUser.userName;
                                    mainPanel.worklogdata.Data = "车辆" + carLogin.carbj.CLHP + "检测中止" + ",驾控员:" + carLogin.carbj.JSY + ",检测方法：" + carLogin.carbj.JCFF;
                                    mainPanel.worklogdata.State = "中止";
                                    mainPanel.worklogdata.Result = "";
                                    mainPanel.worklogdata.Date = DateTime.Now;
                                    mainPanel.worklogdata.Bzsm = "";
                                    mainPanel.demarcatecontrol.saveWordLogByIni(mainPanel.worklogdata);
                                    #endregion
                                }
                                else
                                {
                                    #region 检测有效
                                    ini.INIIO.saveLogInf("检测完成，检测结果数据有效");
                                    mainPanel.ts1 = "检测完成";
                                    Msg(labelStatus, panelStatus, "检测完成");
                                    string isCsvAlive = "";
                                    ini.INIIO.saveLogInf("读取过程数据");
                                    DataTable dataseconds = csvreader.readCsv(newCsvPath);
                                    string fdjzs5025 = "0";
                                    string fdjzs2540 = "0";
                                    string fdjyw5025 = "0";
                                    string fdjyw2540 = "0";
                                    string yw = "0";
                                    string pdjg = "";
                                    string kh = "";
                                    string dcf_25 = "";
                                    string dcf_40 = "";
                                    if (dataseconds != null)
                                    {
                                        ini.INIIO.saveLogInf("查询到过程数据");
                                        string fileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                        if (ini.INIIO.createDir(fileDir))
                                            File.Copy(newCsvPath, fileDir + "/" + carLogin.carbj.CLID + ".csv", true);
                                        ini.INIIO.saveLogInf("过程数据复制到位置：" + fileDir + "/" + carLogin.carbj.CLID + ".csv");
                                        isCsvAlive = saveAsmDataSeconds(dataseconds, carLogin.carbj.CLID, carLogin.carbj.CLHP, jcsj, out fdjzs5025, out fdjzs2540, out fdjyw5025, out fdjyw2540, out yw,out kh,out dcf_25,out dcf_40);
                                        ini.INIIO.saveLogInf("过程数据保存到数据库成功");
                                        if (mainPanel.isNetUsed&&mainPanel.NetMode == mainPanel.DALINETMODE)
                                        {
                                            #region 大理联网时上传报告单基本信息并获取分配的检测报告编号
                                            string code, msg;
                                            string reportID;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "VMAS": ht.Add("检测类别", "1"); break;
                                                case "ASM": ht.Add("检测类别", "2"); break;
                                                case "SDS": ht.Add("检测类别", "3"); break;
                                                case "JZJS": ht.Add("检测类别", "4"); break;
                                                case "ZYJS": ht.Add("检测类别", "5"); break;
                                                case "LZ": ht.Add("检测类别", "6"); break;
                                            }
                                            ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                            ht.Add("检测站编号", mainPanel.stationid);
                                            ht.Add("检测工位号", mainPanel.daliwebinf.LINEID);
                                            ht.Add("检测日期", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("录入员", carLogin.carbj.DLY);
                                            ht.Add("操作员", carLogin.carbj.CZY);
                                            ht.Add("引车员", carLogin.carbj.JSY);
                                            ht.Add("检测开始日期", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("检测结束日期", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车牌号码", carLogin.carbj.CLHP);
                                            ht.Add("车牌颜色", carLogin.carbj.CPYS);
                                            ht.Add("车辆种类", carLogin.modelbj.CLZL);
                                            ht.Add("车辆类型", carLogin.modelbj.CLLX);
                                            ht.Add("车主类别", carLogin.modelbj.OBD);
                                            ht.Add("车主身份证号码", carLogin.modelbj.JSSZK);
                                            ht.Add("车主名称", carLogin.modelbj.CZ);
                                            ht.Add("联系地址", carLogin.modelbj.CZDZ);
                                            ht.Add("联系电话", carLogin.modelbj.LXDH);
                                            ht.Add("厂牌型号", carLogin.modelbj.PP);
                                            ht.Add("车辆品牌", carLogin.modelbj.PP);
                                            ht.Add("车辆型号", carLogin.modelbj.XH);
                                            ht.Add("使用性质", carLogin.modelbj.SYXZ);
                                            ht.Add("车辆营运性质", carLogin.modelbj.SFSRL);
                                            ht.Add("车辆运载种类", carLogin.modelbj.DLSP);
                                            ht.Add("车辆生产日期", carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车辆识别码", carLogin.modelbj.CLSBM);
                                            ht.Add("生产企业", carLogin.modelbj.SCQY);
                                            ht.Add("最大总质量", carLogin.modelbj.ZZL);
                                            ht.Add("基准质量", carLogin.modelbj.JZZL);
                                            ht.Add("初次登记日期", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("单车轴重", carLogin.modelbj.HDZZL);
                                            ht.Add("底盘型号", carLogin.modelbj.DKGYYB);

                                            ht.Add("驱动方式", carLogin.modelbj.QDXS);
                                            ht.Add("驱动轮胎气压", carLogin.modelbj.QDLTQY);
                                            ht.Add("变速器型式", carLogin.modelbj.BSQXS);
                                            ht.Add("档位数", carLogin.modelbj.DWS);
                                            ht.Add("发动机型号", carLogin.modelbj.FDJXH);
                                            ht.Add("发动机编号", carLogin.modelbj.FDJHM);
                                            ht.Add("发动机生产企业", carLogin.modelbj.FDJSCQY);
                                            ht.Add("汽缸数", carLogin.modelbj.QGS);
                                            ht.Add("发动机排量", carLogin.modelbj.FDJPL);
                                            ht.Add("供油方式", carLogin.modelbj.GYFS);
                                            ht.Add("燃油类型", carLogin.modelbj.RLZL);
                                            ht.Add("进气方式", carLogin.modelbj.JQFS);
                                            ht.Add("催化转化器", carLogin.modelbj.JHZZ);
                                            ht.Add("供油系统类型", carLogin.modelbj.DPFS);
                                            ht.Add("排气处理装置", carLogin.modelbj.JHZZ);
                                            ht.Add("燃油标号", carLogin.modelbj.RYPH);
                                            ht.Add("累计行驶里程", carLogin.carbj.XSLC);
                                            ht.Add("检测状态", carLogin.carbj.JCCS == "1" ? "初检" : "复检");
                                            ht.Add("检测次数", carLogin.carbj.JCCS);
                                            ht.Add("转入标志", carLogin.modelbj.SFWDZR);
                                            ht.Add("延期报废", carLogin.modelbj.SFYQBF);
                                            ht.Add("设计乘员数", carLogin.modelbj.HDZK);
                                            ht.Add("检测系统名称", mainPanel.equipmodel.SBMC);
                                            ht.Add("检测设备认证编码", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("检测系统型号", mainPanel.equipmodel.SBXH);
                                            ht.Add("检测系统编号", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("底盘测功机名称", mainPanel.equipmodel.CGJXH);
                                            ht.Add("气体分析仪名称", mainPanel.equipmodel.FXYXH);
                                            ht.Add("所属区域", carLogin.modelbj.SSXQ);
                                            ht.Add("是否路检", "否");
                                            ht.Add("生产地", carLogin.modelbj.HPZL);
                                            ht.Add("监测目的", carLogin.modelbj.JCLB);
                                            ht.Add("达标标准", carLogin.modelbj.ZXBZ);
                                            ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                            ht.Add("设备制造厂", mainPanel.equipmodel.SBZZC);
                                            if (!mainPanel.daliinterface.sendReportInf(ht, out reportID, out code, out msg))
                                            {
                                                MessageBox.Show("发送报告单基本信息失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送报告单基本信息失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                            dalijcbgbh = reportID;
                                            #endregion
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                                        {
                                            #region 东软
                                            ini.INIIO.saveLogInf("东软联网信息：结果判定");
                                            if (asmResultPd(asm_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            NeusoftUtil.UploadGasolineResult asmresult = new NeusoftUtil.UploadGasolineResult();
                                            asmresult.OutlookID = carLogin.outLookID;
                                            asmresult.Temperature = asm_data.Wd;
                                            asmresult.AirPressure = asm_data.Dqy;
                                            asmresult.Humidity = asm_data.Sd;
                                            asmresult.CO5025 = asm_data.Co5025;
                                            asmresult.HC5025 = asm_data.Hc5025;
                                            asmresult.NO5025 = asm_data.No5025;
                                            asmresult.CO2540 = asm_data.Co2540;
                                            asmresult.HC2540 = asm_data.Hc2540;
                                            asmresult.NO2540 = asm_data.No2540;
                                            asmresult.AmbientCO = asm_data.AmbientCO;
                                            asmresult.AmbientCO2 = asm_data.AmbientCO2;
                                            asmresult.AmbientHC = asm_data.AmbientHC;
                                            asmresult.AmbientNO = asm_data.AmbientNO;
                                            asmresult.AmbientO2 = asm_data.AmbientO2;
                                            asmresult.BackgroundCO = asm_data.BackgroundCO;
                                            asmresult.BackgroundCO2 = asm_data.BackgroundCO2;
                                            asmresult.BackgroundHC = asm_data.BackgroundHC;
                                            asmresult.BackgroundNO = asm_data.BackgroundNO;
                                            asmresult.BackgroundO2 = asm_data.BackgroundO2;
                                            asmresult.ResidualHC = asm_data.ResidualHC;
                                            asmresult.Rev2540 = asm_data.Rev2540;
                                            asmresult.Rev5025 = asm_data.Rev5025;
                                            asmresult.Power2540 = asm_data.Power2540;
                                            asmresult.Power5025 = asm_data.Power5025;
                                            asmresult.Lambda5025 = asm_data.Lambda5025;
                                            asmresult.Lambda2540 = asm_data.Lambda2540;
                                            asmresult.Has2540Tested = asm_data.Has2540Tested;
                                            asmresult.Has5025Tested = asm_data.Has5025Tested;
                                            asmresult.Result = pdjg;
                                            asmresult.StartTime = asm_data.StartTime;
                                            asmresult.StopReason = "0";
                                            asmresult.AdjustZero = "1";
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadGasolineResultRequest(asmresult, dataseconds, out result, out inf, out dtack);
                                                if (result == "1")
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");

                                                    asmdata.FDJZS5025 = fdjzs5025;
                                                    asmdata.FDJYW5025 = fdjyw5025;
                                                    asmdata.FDJZS2540 = fdjzs2540;
                                                    asmdata.FDJYW2540 = fdjyw2540;
                                                    asmdata.YW = yw;
                                                    asmdata.JCBGBH = jcbgbh;
                                                    asmdata.SHY = mainPanel.shy;
                                                    asmdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    asmdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    asmdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                                    isCsvAlive = "逐秒数据上传成功";
                                                    if (asmresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        asmdal.Save_ASM(asmdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (asmresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = "车辆检测不合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        asmdal.Save_ASM(asmdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + result + "errormessage:" + inf, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                ini.INIIO.saveLogInf("东软联网信息：上传结果信息");
                                                DataTable dtresult = mainPanel.neusoftsocket.UploadGasolineResultRequest(asmresult, dataseconds, out ackresult, out errormessage);
                                                if (dtresult != null)
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    asmresult.CO5025 = dtresult.Rows[1]["CO5025"].ToString();
                                                    asmresult.HC5025 = dtresult.Rows[1]["HC5025"].ToString();
                                                    asmresult.NO5025 = dtresult.Rows[1]["NO5025"].ToString();
                                                    asmresult.CO2540 = dtresult.Rows[1]["CO2540"].ToString();
                                                    asmresult.HC2540 = dtresult.Rows[1]["HC2540"].ToString();
                                                    asmresult.NO2540 = dtresult.Rows[1]["NO2540"].ToString();
                                                    asmresult.Result = dtresult.Rows[1]["TestResult"].ToString();

                                                    asmdata.FDJZS5025 = fdjzs5025;
                                                    asmdata.FDJYW5025 = fdjyw5025;
                                                    asmdata.FDJZS2540 = fdjzs2540;
                                                    asmdata.FDJYW2540 = fdjyw2540;
                                                    asmdata.YW = yw;
                                                    asmdata.JCBGBH = jcbgbh;
                                                    asmdata.SHY = mainPanel.shy;
                                                    asmdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    asmdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    asmdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                                    isCsvAlive = "逐秒数据上传成功";
                                                    if (asmresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";// "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        asmdal.Save_ASM(asmdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (asmresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";// "车辆检测不合格";
                                                        if (asmresult.Result != pdjg)
                                                        {
                                                            mainPanel.ts1 = "评判不一致";
                                                            MessageBox.Show("平台判定结果与本地判定不一致:" + errormessage, "提示");
                                                        }
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        asmdal.Save_ASM(asmdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + ackresult + "errormessage:" + errormessage, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            #region 南华
                                            ini.INIIO.saveLogInf("南华联网信息：结果判定");
                                            if (asmResultPd(asm_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            System.Collections.Hashtable hs = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hs_p = new System.Collections.Hashtable();
                                            hs.Add("ReportNumber", jcbgbh);
                                            hs.Add("Judge", pdjg);
                                            hs.Add("Operator", carLogin.carbj.CZY);
                                            hs.Add("Driver", carLogin.carbj.JSY);
                                            hs.Add("BeginTime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EndTime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EnvironmentalTemperature", asm_data.Wd);
                                            hs.Add("AtmosphericPressure", asm_data.Dqy);
                                            hs.Add("RelativeHumidity", asm_data.Sd);
                                            hs.Add("Lambda5025", asm_data.Lambda5025);
                                            hs.Add("Power5025", asm_data.Power5025);
                                            hs.Add("Rev5025", asm_data.Rev5025);
                                            //hs.Add("Lambda5025", carLogin.carbj.JSY);
                                            hs.Add("CO5025", asm_data.Co5025);
                                            hs.Add("HC5025", asm_data.Hc5025);
                                            hs.Add("NO5025", asm_data.No5025);
                                            hs.Add("CO5025Limit", asmdata.CO25XZ);
                                            hs.Add("HC5025Limit", asmdata.HC25XZ);
                                            hs.Add("NO5025Limit", asmdata.NOX25XZ);
                                            hs.Add("CO5025Judge", asmdata.CO25PD == "合格" ? "1" : "0");
                                            hs.Add("HC5025Judge", asmdata.HC25PD == "合格" ? "1" : "0");
                                            hs.Add("NO5025Judge", asmdata.NOX25PD == "合格" ? "1" : "0");
                                            hs.Add("IsTest2540", asm_data.Has2540Tested == "1" ? "1" : "0");
                                            if (asm_data.Has2540Tested == "1")
                                            {
                                                hs.Add("Lambda2540", asm_data.Lambda2540);
                                                hs.Add("Power2540", asm_data.Power2540);
                                                hs.Add("Rev2540", asm_data.Rev2540);
                                                //hs.Add("Lambda5025", carLogin.carbj.JSY);
                                                hs.Add("CO2540", asm_data.Co2540);
                                                hs.Add("HC2540", asm_data.Hc2540);
                                                hs.Add("NO2540", asm_data.No2540);
                                                hs.Add("CO2540Limit", asmdata.CO40XZ);
                                                hs.Add("HC2540Limit", asmdata.HC40XZ);
                                                hs.Add("NO2540Limit", asmdata.NOX40XZ);
                                                hs.Add("CO2540Judge", asmdata.CO40PD == "合格" ? "1" : "0");
                                                hs.Add("HC2540Judge", asmdata.HC40PD == "合格" ? "1" : "0");
                                                hs.Add("NO2540Judge", asmdata.NOX40PD == "合格" ? "1" : "0");
                                            }
                                            else
                                            {
                                                hs.Add("Lambda2540", "0");
                                                hs.Add("Power2540", "0");
                                                hs.Add("Rev2540", "0");
                                                //hs.Add("Lambda5025", carLogin.carbj.JSY);
                                                hs.Add("CO2540", "0");
                                                hs.Add("HC2540", "0");
                                                hs.Add("NO2540", "0");
                                                hs.Add("CO2540Limit", "0");
                                                hs.Add("HC2540Limit", "0");
                                                hs.Add("NO2540Limit", "0");
                                                hs.Add("CO2540Judge", "0");
                                                hs.Add("HC2540Judge", "0");
                                                hs.Add("NO2540Judge", "0");
                                            }
                                            ini.INIIO.saveLogInf("南华联网信息：上传稳态数据");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendUploadASMData(carLogin.carbj.JYLSH, hs, dataseconds, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                            if (startflag)
                                            {

                                                asmdata.FDJZS5025 = fdjzs5025;
                                                asmdata.FDJYW5025 = fdjyw5025;
                                                asmdata.FDJZS2540 = fdjzs2540;
                                                asmdata.FDJYW2540 = fdjyw2540;
                                                asmdata.YW = yw;
                                                asmdata.JCBGBH = jcbgbh;
                                                asmdata.SHY = mainPanel.shy;
                                                asmdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                asmdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                asmdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                                isCsvAlive = "逐秒数据上传成功";
                                                if (pdjg == "1")
                                                {
                                                    mainPanel.ts2 = "车辆检测合格";
                                                    ini.INIIO.saveLogInf("南华联网信息：接收到平台判定结果合格");
                                                    Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                    pdjg = "1";
                                                    asmdal.Save_ASM(asmdata);
                                                    enableButton(buttonOK, false);
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "车辆检测不合格";
                                                    ini.INIIO.saveLogInf("南华联网信息：接收到平台判定结果不合格");
                                                    Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                    pdjg = "0";
                                                    asmdal.Save_ASM(asmdata);
                                                    enableButton(buttonOK, false);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "上传结果失败";
                                                MessageBox.Show("ackresult:" + nhcode + "errormessage:" + nhmsg, "");
                                                mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                                isCsvAlive = "上传结果失败";
                                                Msg(label1, panel4, "上传结果失败");
                                                ini.INIIO.saveLogInf("南华联网信息：上传结果失败");
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
                                        {
                                            #region 江苏
                                            ini.INIIO.saveLogInf("江苏联网信息：结果判定");
                                            if (asmResultPd(asm_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            carinfor.JsAsmResultData asmresult = new carinfor.JsAsmResultData();
                                            asmresult.check_id = carLogin.carbj.JCBGBH;
                                            asmresult.check_type = carLogin.modelbj.JCLB;
                                            asmresult.citycode = mainPanel.stationid.Substring(0, 6);
                                            asmresult.unit_id = mainPanel.stationid; ;
                                            asmresult.device_id = mainPanel.stationid + mainPanel.lineid;
                                            asmresult.vhicleid = mainPanel.jsvehiclemodel.vehicleid;
                                            asmresult.odo_meter = mainPanel.jsvehiclemodel.odo_meter;
                                            asmresult.check_data = DateTime.Now.ToString("yyyy-MM-dd");
                                            asmresult.starttime = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                            asmresult.end_time = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                            asmresult.temperature = asmdata.WD;
                                            asmresult.pressure = asmdata.DQY;
                                            asmresult.humidity = asmdata.SD;
                                            asmresult.kh_retouch = kh;
                                            asmresult.dcf_retouch_25 = dcf_25;
                                            asmresult.dcf_retouch_40 = dcf_40;
                                            asmresult.co_5025 = asmdata.CO25CLZ;
                                            asmresult.co_5025_limit = asmdata.CO25XZ;
                                            asmresult.co_5025_result = (asmdata.CO25PD == "合格") ? "1" : "0";
                                            asmresult.hc_5025 = asmdata.HC25CLZ;
                                            asmresult.hc_5025_limit = asmdata.HC25XZ;
                                            asmresult.hc_5025_result = (asmdata.HC25PD == "合格") ? "1" : "0";
                                            asmresult.no_5025 = asmdata.NOX25CLZ;
                                            asmresult.no_5025_limit = asmdata.NOX25XZ;
                                            asmresult.no_5025_result = (asmdata.NOX25PD == "合格") ? "1" : "0";
                                            asmresult.power_5025 = asm_data.Power5025;
                                            asmresult.rev_5025 = asm_data.Rev5025;
                                            asmresult.lambda_5025 = asm_data.Lambda5025;

                                            asmresult.co_2540_limit = asmdata.CO40XZ;
                                            asmresult.hc_2540_limit = asmdata.HC40XZ;
                                            asmresult.no_2540_limit = asmdata.NOX40XZ;

                                            if (asm_data.Has2540Tested == "1")
                                            {
                                                asmresult.co_2540 = asmdata.CO40CLZ;
                                                asmresult.co_2540_result = (asmdata.CO40PD == "合格") ? "1" : "0";
                                                asmresult.hc_2540 = asmdata.HC40CLZ;
                                                asmresult.hc_2540_result = (asmdata.HC40PD == "合格") ? "1" : "0";
                                                asmresult.no_2540 = asmdata.NOX40CLZ;
                                                asmresult.no_2540_result = (asmdata.NOX40PD == "合格") ? "1" : "0";
                                                asmresult.power_2540 = asm_data.Power2540;
                                                asmresult.rev_2540 = asm_data.Rev2540;
                                                asmresult.lambda_2540 = asm_data.Lambda2540;
                                            }
                                            else
                                            {
                                                asmresult.co_2540 = "";
                                                asmresult.co_2540_result = "";
                                                asmresult.hc_2540 = "";
                                                asmresult.hc_2540_result = "";
                                                asmresult.no_2540 = "";
                                                asmresult.no_2540_result = "";
                                                asmresult.power_2540 = "";
                                                asmresult.rev_2540 = "";
                                                asmresult.lambda_2540 = "";
                                            }
                                            asmresult.passed = pdjg;
                                            bool jsstatus;
                                            string jserrMsg = "";
                                            string finalresult;
                                            bool cardwritestatus;
                                            string jsackstring = mainPanel.jsinterface.uploadInspectionResult(asmresult, dataseconds, out finalresult, out jsstatus, out cardwritestatus, out jserrMsg);
                                            if (jsackstring != "")
                                            {
                                                MessageBox.Show(jsackstring, "上传结果失败");
                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                if (!jsstatus)
                                                {
                                                    MessageBox.Show(jserrMsg, "上传结果失败");
                                                    ini.INIIO.saveLogInf("上传结果失败：" + jserrMsg);
                                                    if (mainPanel.jsinterface.CHECK_TYPE[carLogin.modelbj.JCLB] != "抽检")
                                                        return;
                                                }
                                                if (!cardwritestatus)
                                                {
                                                    MessageBox.Show("电子卡写卡失败");
                                                    ini.INIIO.saveLogInf("电子卡写卡失败");
                                                }
                                            }
                                            ini.INIIO.saveLogInf("江苏联网信息：接收到结果信息");
                                            asmdata.FDJZS5025 = fdjzs5025;
                                            asmdata.FDJYW5025 = fdjyw5025;
                                            asmdata.FDJZS2540 = fdjzs2540;
                                            asmdata.FDJYW2540 = fdjyw2540;
                                            asmdata.YW = yw;
                                            asmdata.JCBGBH = jcbgbh;
                                            asmdata.SHY = mainPanel.shy;
                                            asmdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            isCsvAlive = "逐秒数据上传成功";

                                            if (pdjg == "1")
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：接收到平台判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：接收到平台判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            #region 安徽
                                            ini.INIIO.saveLogInf("安徽联网信息：结果判定");
                                            if (asmResultPd(asm_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("安徽联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("安徽联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            AhWebClient.AhAsmResult asmresult = new AhWebClient.AhAsmResult();
                                            asmresult.Result = (pdjg == "1" ? "1" : "2");
                                            asmresult.CrucialTime0 = CrucialTime0;
                                            asmresult.Temperature = asmdata.WD;
                                            asmresult.Humidity = asmdata.SD; ;
                                            asmresult.Baro = asmdata.DQY;
                                            asmresult.CrucialTime1 = CrucialTime1;
                                            asmresult.CrucialTime2 = CrucialTime2;
                                            asmresult.HC5025 = asmdata.HC25CLZ;
                                            asmresult.CO5025 = asmdata.CO25CLZ;
                                            asmresult.NO5025 = asmdata.NOX25CLZ;
                                            asmresult.HC2540 = asmdata.HC40CLZ;
                                            asmresult.CO2540 = asmdata.CO40CLZ;
                                            asmresult.NO2540 = asmdata.NOX40CLZ;
                                            asmresult.HC5025Limit = asmdata.HC25XZ;
                                            asmresult.CO5025Limit = asmdata.CO25XZ;
                                            asmresult.NO5025Limit = asmdata.NOX25XZ;
                                            asmresult.HC2540Limit = asmdata.HC40XZ;
                                            asmresult.CO2540Limit = asmdata.CO40XZ;
                                            asmresult.NO2540Limit = asmdata.NOX40XZ;
                                            asmresult.HC5025Result = (asmdata.HC25PD == "合格" ? "1" : "2");
                                            asmresult.CO5025Result = (asmdata.CO25PD == "合格" ? "1" : "2");
                                            asmresult.NO5025Result = (asmdata.NOX25PD == "合格" ? "1" : "2");
                                            asmresult.HC2540Result = (asmdata.HC40PD == "" ?"0":(asmdata.HC40PD == "合格" ? "1" : "2"));
                                            asmresult.CO2540Result = (asmdata.CO40PD == "" ? "0" : (asmdata.CO40PD == "合格" ? "1" : "2"));
                                            asmresult.NO5025Result = (asmdata.NOX40PD == "" ? "0" : (asmdata.NOX40PD == "合格" ? "1" : "2"));
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.UploadAsmRealtimeData(carLogin.carbj.CLID, dataseconds, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("UploadAsmRealtimeData\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                MessageBox.Show("上传过程数据发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                Msg(label1, panel4, "上传过程数据发生错误");
                                                return;
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送UploadAsmRealtimeData指令");
                                            }
                                            if (!mainPanel.ahinterface.EndInspectASM(carLogin.carbj.CLID, asmresult, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndInspectASM\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                MessageBox.Show("上传检测结果发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndInspectASM指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                            asmdata.FDJZS5025 = fdjzs5025;
                                            asmdata.FDJYW5025 = fdjyw5025;
                                            asmdata.FDJZS2540 = fdjzs2540;
                                            asmdata.FDJYW2540 = fdjyw2540;
                                            asmdata.YW = yw;
                                            asmdata.JCBGBH = jcbgbh;
                                            asmdata.SHY = mainPanel.shy;
                                            asmdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                        {
                                            #region 桂林
                                            ini.INIIO.saveLogInf("桂林联网信息：结果判定");
                                            if (asmResultPd(asm_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            asmdata.FDJZS5025 = fdjzs5025;
                                            asmdata.FDJYW5025 = fdjyw5025;
                                            asmdata.FDJZS2540 = fdjzs2540;
                                            asmdata.FDJYW2540 = fdjyw2540;
                                            asmdata.YW = yw;
                                            asmdata.JCBGBH = jcbgbh;
                                            asmdata.SHY = mainPanel.shy;
                                            asmdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            string result;
                                            string errmsg = "";

                                            List<Hashtable> htpro = new List<Hashtable>();
                                            for (int i = 1; i < dataseconds.Rows.Count; i++)
                                            {
                                                Hashtable htchild = new Hashtable();
                                                DataRow dr = dataseconds.Rows[i];
                                                htchild.Add("stationcode", mainPanel.stationid);
                                                htchild.Add("inspectionnum", carLogin.carbj.JYLSH);
                                                htchild.Add("processtime", DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyy-MM-dd HH:mm:ss"));
                                                htchild.Add("gklx", dr["时序类别"].ToString());
                                                htchild.Add("second_no", i.ToString());
                                                htchild.Add("nf", dr["扭力"].ToString());
                                                htchild.Add("flow_hc", dr["HC实时值"].ToString());
                                                htchild.Add("flow_co", dr["CO实时值"].ToString());
                                                htchild.Add("flow_co2", dr["CO2实时值"].ToString());
                                                htchild.Add("flow_no", dr["NO实时值"].ToString());
                                                htchild.Add("analyser_o2", dr["O2实时值"].ToString());
                                                htchild.Add("weight_hc", "0");
                                                htchild.Add("weight_co", "0");
                                                htchild.Add("weight_no", "0");
                                                htchild.Add("linespeed", double.Parse(dr["实时车速"].ToString()).ToString("0.00"));
                                                htchild.Add("rotatespeed", dr["转速"].ToString());
                                                htchild.Add("totalpower", (double.Parse(dr["加载功率"].ToString()) + double.Parse(dr["寄生功率"].ToString())).ToString("0.00"));
                                                htchild.Add("cgjhz", "907");
                                                htchild.Add("paraspower", double.Parse(dr["寄生功率"].ToString()).ToString("0.00"));
                                                htchild.Add("indicpower", double.Parse(dr["加载功率"].ToString()).ToString("0.00"));
                                                htchild.Add("flowairpressure", "");
                                                htchild.Add("flowtemperature", "");
                                                htchild.Add("envirtemperature", dr["环境温度"].ToString());
                                                htchild.Add("envirairpressure", dr["大气压力"].ToString());
                                                htchild.Add("envirhumidity", dr["相对湿度"].ToString());
                                                htchild.Add("dilutecorrect", double.Parse(dr["稀释修正系数"].ToString()).ToString("0.00"));
                                                htchild.Add("humiditycorrect", double.Parse(dr["湿度修正系数"].ToString()).ToString("0.00"));
                                                htchild.Add("diluteratio", "1");
                                                htchild.Add("asmtype", asm_data.Has2540Tested == "1" ? "2540" : "5025");
                                                htchild.Add("istenmcondition", (dr["检测状态"].ToString() == "2" || dr["检测状态"].ToString() == "4") ? "1" : "0");
                                                htchild.Add("nfjzxs", "1");
                                                htchild.Add("nfxs", "5000");
                                                htpro.Add(htchild);
                                            }
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 1, null, htpro, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传过程数据成功");
                                            }

                                            isCsvAlive = "逐秒数据上传成功";

                                            DataTable dt = new DataTable();
                                            Hashtable ht2 = new Hashtable(); 

                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("linecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            if (!mainPanel.gxinterface.finishTest(ht2, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测失败,code=" + result + ",msg=" + errmsg);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测成功");
                                            }

                                            ht2.Clear();

                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("scenecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            ht2.Add("vlpn", carLogin.carbj.CLHP);
                                            ht2.Add("vin", carLogin.modelbj.CLSBM);
                                            ht2.Add("inspectionoperator", carLogin.carbj.CZY);
                                            ht2.Add("inspectiondriver", carLogin.carbj.JSY);
                                            ht2.Add("temperature", asmdata.WD);
                                            ht2.Add("pressure", asmdata.DQY);
                                            ht2.Add("humidity", asmdata.SD);
                                            ht2.Add("iutid", carLogin.carbj.JCBGBH);
                                            ht2.Add("vdct", pdjg);
                                            ht2.Add("iuidate", DateTime.Now.ToString("yyyy-MM-dd"));
                                            ht2.Add("detectstarttime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("detectendtime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("vinflag", "1");
                                            ht2.Add("enginenumflag", "1");
                                            ht2.Add("icheck", carLogin.carbj.CZY);
                                            ht2.Add("checktime", asmdata.JCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("eacr5025", asmdata.LAMBDA5025);
                                            ht2.Add("eacr2540", asmdata.LAMBDA2540);
                                            ht2.Add("hcel5025", asmdata.HC25XZ);
                                            ht2.Add("hcer5025", asmdata.HC25CLZ);
                                            ht2.Add("hced5025", asmdata.HC25PD == "不合格" ? "0" : "1");

                                            ht2.Add("coel5025", asmdata.CO25XZ);
                                            ht2.Add("coer5025", asmdata.CO25CLZ);
                                            ht2.Add("coed5025", asmdata.CO25PD == "不合格" ? "0" : "1");

                                            ht2.Add("noel5025", asmdata.NOX25XZ);
                                            ht2.Add("noer5025", asmdata.NOX25CLZ);
                                            ht2.Add("noed5025", asmdata.NOX25PD == "不合格" ? "0" : "1");
                                            if (asm_data.Has2540Tested == "1")
                                            {
                                                ht2.Add("hcel2540", asmdata.HC40XZ);
                                                ht2.Add("hcer2540", asmdata.HC40CLZ);
                                                ht2.Add("hced2540", asmdata.HC40PD == "不合格" ? "0" : "1");
                                                ht2.Add("coel2540", asmdata.CO40XZ);
                                                ht2.Add("coer2540", asmdata.CO40CLZ);
                                                ht2.Add("coed2540", asmdata.CO40PD == "不合格" ? "0" : "1");
                                                ht2.Add("noel2540", asmdata.NOX40XZ);
                                                ht2.Add("noer2540", asmdata.NOX40CLZ);
                                                ht2.Add("noed2540", asmdata.NOX40PD == "不合格" ? "0" : "1");

                                                ht2.Add("asmtype", asm_data.Kstg2540 == "1" ? "3" : "4");
                                            }
                                            else
                                            {
                                                ht2.Add("hcel2540", asmdata.HC40XZ);
                                                ht2.Add("hcer2540", "");
                                                ht2.Add("hced2540", "");
                                                ht2.Add("coel2540", asmdata.CO40XZ);
                                                ht2.Add("coer2540", "");
                                                ht2.Add("coed2540", "");
                                                ht2.Add("noel2540", asmdata.NOX40XZ);
                                                ht2.Add("noer2540", "");
                                                ht2.Add("noed2540", "");
                                                ht2.Add("asmtype", asm_data.Kstg5025 == "1" ? "1" : "2");
                                            }

                                            ht2.Add("dynamometer", asmdata.CGJXH);
                                            ht2.Add("dprovider", asmdata.CGJZZC);
                                            ht2.Add("analyser", asmdata.FXYXH);
                                            ht2.Add("aprovider", asmdata.FXYZZC);
                                            ht2.Add("flowmeter", "");
                                            ht2.Add("fprovider", "");
                                            ht2.Add("tachometer", "");
                                            ht2.Add("tprovider", "");
                                            ht2.Add("otsensor", "");
                                            ht2.Add("oprovider", "");
                                            ht2.Add("weatherstationtype", "");
                                            ht2.Add("weatherstationprovider", "");
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 0, ht2, null, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传结果数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传结果数据成功");
                                            }
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HHZNNETMODE)
                                        {
                                            #region 红河州
                                            ini.INIIO.saveLogInf("红河州联网信息：结果判定");
                                            if (asmResultPd(asm_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            asmdata.FDJZS5025 = fdjzs5025;
                                            asmdata.FDJYW5025 = fdjyw5025;
                                            asmdata.FDJZS2540 = fdjzs2540;
                                            asmdata.FDJYW2540 = fdjyw2540;
                                            asmdata.YW = yw;
                                            asmdata.JCBGBH = jcbgbh;
                                            asmdata.SHY = mainPanel.shy;
                                            asmdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            System.Collections.Hashtable hthhz = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz1 = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz2 = new System.Collections.Hashtable();
                                            #region 基本信息
                                            //hthhz.Add("JCDJBM", carLogin.carbj.CLID);//检测登记编号
                                            //hthhz.Add("CLBM", carLogin.carbj.JCBGBH);
                                            //hthhz.Add("VIN", carLogin.modelbj.CLSBM);
                                            //hthhz.Add("HBXXKH", "2012");
                                            //hthhz.Add("CPHM", carLogin.carbj.CLHP);
                                            //hthhz.Add("CPLX", mainPanel.hhzinterface.HhzR_VEHICLE_CPYS.GetValue(carLogin.modelbj.CPYS, "0"));
                                            //hthhz.Add("CLLX", carLogin.modelbj.CLLX.Split('_')[0]);//5
                                            //hthhz.Add("CDRQ", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd"));
                                            //hthhz.Add("LXDZ", carLogin.modelbj.CZDZ);
                                            //hthhz.Add("CZDW", carLogin.modelbj.CZ);
                                            //hthhz.Add("LZDH", carLogin.modelbj.LXDH);//疑问，不是LXDH
                                            //hthhz.Add("SFJF", "1");
                                            //hthhz.Add("SFYXFB", "0");
                                            //hthhz.Add("BYXFBYY", "1");
                                            //hthhz.Add("JCDJRQ", carLogin.carbj.DLSJ.ToString("yyyy-MM-dd"));
                                            //hthhz.Add("FBYBM", "123456");//转换为编号 
                                            //hthhz.Add("BZLX", "1");
                                            //hthhz.Add("XZBM", "1234");
                                            //hthhz.Add("JCZQBM", "1");
                                            //hthhz.Add("SFFK", "0");
                                            //hthhz.Add("LCBDS", carLogin.carbj.XSLC);
                                            //hthhz.Add("SFMJC", "1");
                                            //hthhz.Add("SFYOBD", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.OBD, "0"));
                                            //hthhz.Add("CXH", carLogin.modelbj.XH);
                                            //hthhz.Add("CP", carLogin.modelbj.PP);//15
                                            //hthhz.Add("SFDK", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.DKGYYB, "0"));//25
                                            //hthhz.Add("CLZL", mainPanel.hhzinterface.HhzR_VEHICLE_CLZL.GetValue(carLogin.modelbj.CLZL, "0"));
                                            //hthhz.Add("JZZL", carLogin.modelbj.JZZL);
                                            //hthhz.Add("ZDZL", carLogin.modelbj.ZZL);
                                            //hthhz.Add("QDXX", mainPanel.hhzinterface.HhzR_VEHICLE_QDXS.GetValue(carLogin.modelbj.QDXS, "0"));
                                            //hthhz.Add("BSQXS", mainPanel.hhzinterface.HhzR_VEHICLE_BSQXS.GetValue(carLogin.modelbj.BSQXS, "0"));//20
                                            //hthhz.Add("RYZL", mainPanel.hhzinterface.HhzR_VEHICLE_RLZL.GetValue(carLogin.modelbj.RLZL, "0"));
                                            //hthhz.Add("GYFS", mainPanel.hhzinterface.HhzR_VEHICLE_GYFS.GetValue(carLogin.modelbj.GYFS, "0"));
                                            //hthhz.Add("KH", carLogin.modelbj.CLLX.StartsWith("K") ? "K" : "H");
                                            //hthhz.Add("ZW", carLogin.modelbj.HDZK);
                                            //hthhz.Add("FDJEDZS", carLogin.modelbj.EDZS);
                                            //hthhz.Add("FDJPL", carLogin.modelbj.FDJPL);
                                            //hthhz.Add("FDJEDGL", carLogin.modelbj.EDGL);
                                            //hthhz.Add("JQFS", mainPanel.hhzinterface.HhzR_VEHICLE_JQFS.GetValue(carLogin.modelbj.JQFS, "0"));//41
                                            //hthhz.Add("QGSL", carLogin.modelbj.QGS);
                                            //hthhz.Add("SFYJHZZ", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.JHZZ, "0"));
                                            //hthhz.Add("JCDJJG", "1");
                                            //hthhz.Add("JCSFHG", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.ZHPD, ""));
                                            //hthhz.Add("SFYJFB", "0");
                                            //hthhz.Add("SFCGXK", "1");
                                            //hthhz.Add("DJYBM",carLogin.hhzOperatorID);
                                            //hthhz.Add("WGJCRQ", carLogin.carbj.DLSJ.ToString("yyyy-MM-dd HH:mm:ss"));//?
                                            //hthhz.Add("JCZBM", mainPanel.stationid);
                                            //hthhz.Add("JCXBM", mainPanel.stationid + mainPanel.lineid);
                                            //hthhz.Add("WQJCRQ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            //hthhz.Add("SFYXSXJC", "1");
                                            //hthhz.Add("SFCJ", carLogin.carbj.JCCS == "1" ? "0" : "1");
                                            //hthhz.Add("FDJH", carLogin.modelbj.FDJHM);
                                            //hthhz.Add("ZZ", carLogin.modelbj.HDZZL);
                                            //hthhz.Add("JCLX", mainPanel.hhzinterface.HhzR_RESULT_JCLX.GetValue(carLogin.modelbj.JCLB, "0"));//检测类型
                                            //hthhz.Add("DPFS", mainPanel.hhzinterface.HhzR_VEHICLE_DPFS.GetValue(carLogin.modelbj.DPFS, "0"));
                                            //hthhz.Add("HBBZFBSFDY", "0");
                                            //hthhz.Add("SFDYHGZ", "0");
                                            //hthhz.Add("JCZQS", "2");
                                            //hthhz.Add("BZQJCCS", carLogin.carbj.JCCS);
                                            //hthhz.Add("FGKXZBH", "0");
                                            //hthhz.Add("SCSJ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            //hthhz.Add("JCFF", mainPanel.hhzinterface.HhzR_RESULT_JCFF.GetValue(carLogin.carbj.JCFF, ""));

                                            hthhz.Add("tsno", mainPanel.stationid);//检测登记编号
                                            hthhz.Add("testlineno", mainPanel.stationid + "0" + mainPanel.lineid);
                                            hthhz.Add("testpersonno", carLogin.hhzDriverID);
                                            hthhz.Add("testno", carLogin.carbj.JCBGBH);
                                            hthhz.Add("carno", carLogin.carbj.JYLSH);
                                            hthhz.Add("testtype", mainPanel.hhzinterface.HhzR_RESULT_JCFF.GetValue(carLogin.carbj.JCFF, "0"));
                                            hthhz.Add("testtimes", carLogin.carbj.JCCS);//5
                                            hthhz.Add("testdate", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hthhz.Add("testdateend", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hthhz.Add("result", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.ZHPD, "0"));
                                            hthhz.Add("license", carLogin.modelbj.CLHP);//疑问，不是LXDH
                                            hthhz.Add("vin", carLogin.modelbj.CLSBM);
                                            hthhz.Add("registerdate", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd"));
                                            hthhz.Add("mdate", carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd"));
                                            hthhz.Add("vehiclemodel", carLogin.modelbj.XH);//转换为编号 
                                            hthhz.Add("engine", carLogin.modelbj.FDJXH);
                                            hthhz.Add("standard", mainPanel.hhzinterface.HhzR_VEHICLE_PFBZ.GetValue(carLogin.modelbj.ZXBZ, "0"));
                                            hthhz.Add("odometer", carLogin.carbj.XSLC);
                                            hthhz.Add("barometric", asmdata.DQY);
                                            hthhz.Add("humidity", asmdata.SD);
                                            hthhz.Add("temperature", asmdata.WD);
                                            hthhz.Add("exchangetime", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            #endregion
                                            #region 结果信息
                                            hthhz1.Add("testno", carLogin.carbj.JCBGBH);
                                            hthhz1.Add("hc5025limit", asmdata.HC25XZ);
                                            hthhz1.Add("co5025limit", asmdata.CO25XZ);
                                            hthhz1.Add("no5025limit", asmdata.NOX25XZ);
                                            hthhz1.Add("hc2540limit", asmdata.HC40XZ);
                                            hthhz1.Add("co2540limit", asmdata.CO40XZ);
                                            hthhz1.Add("no2540limit", asmdata.NOX40XZ);
                                            hthhz1.Add("co5025", asmdata.CO25CLZ);
                                            hthhz1.Add("hc5025", asmdata.HC25CLZ);
                                            hthhz1.Add("no5025", asmdata.NOX25CLZ);
                                            hthhz1.Add("co2540", asmdata.CO40CLZ == "" ? "0" : asmdata.CO40CLZ);
                                            hthhz1.Add("hc2540", asmdata.HC40CLZ == "" ? "0" : asmdata.HC40CLZ);
                                            hthhz1.Add("no2540", asmdata.NOX40CLZ == "" ? "0" : asmdata.NOX40CLZ);
                                            hthhz1.Add("hc5025judge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.HC25PD, ""));
                                            hthhz1.Add("co5025judge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.CO25PD, ""));
                                            hthhz1.Add("no5025judge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.NOX25PD, ""));
                                            hthhz1.Add("hc2540judge", asmdata.HC40PD == "" ? "0" : mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.HC40PD, ""));
                                            hthhz1.Add("co2540judge", asmdata.CO40PD == "" ? "0" : mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.CO40PD, ""));
                                            hthhz1.Add("no2540judge", asmdata.NOX40PD == "" ? "0" : mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.NOX40PD, ""));
                                            hthhz1.Add("exchangetime", DateTime.Now.ToString("yyyy-MM-dd"));

                                            //hthhz2.Add("type", "UPLOAD");
                                            //hthhz2.Add("JCZBM", mainPanel.stationid);
                                            hthhz2.Add("jcff", "WTGK_RESULT");
                                            // hthhz2.Add("jcff", "DOUBLE_IDLE");
                                            // hthhz2.Add("CHECK_REGIST_TASK", hthhz);
                                            hthhz2.Add("jcjbxx", hthhz);
                                            //hthhz2.Add("DOUBLE_IDLE_TASK", hthhz1);
                                            hthhz2.Add("WTGK_RESULT", hthhz1);
                                            #endregion
                                            try
                                            {
                                                string hhz_jcbgbh = "";
                                                sendPicture(asmdata.ZHPD);
                                                string code, msg;
                                                Newtonsoft.Json.Linq.JObject queryJobject = new Newtonsoft.Json.Linq.JObject();
                                                if (mainPanel.hhzinterface.uploadJsonArray(mainPanel.stationid, hthhz2, HhzWebClient.Hhzclient.DATALX.JCXX, out code, out msg, out queryJobject))
                                                {
                                                    try
                                                    {
                                                        if (code == "0" || code == "051")
                                                        {
                                                            ini.INIIO.saveLogInf("上传成功,code=" + code);
                                                        }
                                                        else
                                                        {
                                                            string codemsg = mainPanel.hhzinterface.Hhz_AckCode.GetValue(code, "");
                                                            MessageBox.Show("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + queryJobject["message"].ToString());
                                                            Msg(label1, panel4, "上传检测数据至联网平台失败");
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        ini.INIIO.saveLogInf("读取上传返回信息异常:" + er.Message);
                                                        //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                        Msg(label1, panel4, "读取上传返回信息异常:" + er.Message);
                                                        return;
                                                    }
                                                }
                                                else
                                                {

                                                    ini.INIIO.saveLogInf("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                    MessageBox.Show("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                    Msg(label1, panel4, "上传检测数据至联网平台失败");
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测数据失败,发生异常\r\n" + er.Message);
                                                MessageBox.Show("上传检测数据失败\r\n,发生异常\r\n" + er.Message);
                                                Msg(label1, panel4, "上传检测数据至联网平台失败,发生异常");
                                                return;
                                            }

                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("红河州联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("红河州联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            ini.INIIO.saveLogInf("联网信息：结果数据上传服务器成功");
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(asmdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆：" + asmdata.CLPH);
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                        {
                                            #region 中科宇图
                                            ini.INIIO.saveLogInf("中科宇图联网信息：结果判定");
                                            if (asmResultPd(asm_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("中科宇图联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("中科宇图联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            asmdata.FDJZS5025 = fdjzs5025;
                                            asmdata.FDJYW5025 = fdjyw5025;
                                            asmdata.FDJZS2540 = fdjzs2540;
                                            asmdata.FDJYW2540 = fdjyw2540;
                                            asmdata.YW = yw;
                                            asmdata.JCBGBH = jcbgbh;
                                            asmdata.SHY = mainPanel.shy;
                                            asmdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            if (!uploadStartSuccess)
                                            {
                                                #region 上传检测开始命令
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendStart);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测开始命令，time=" + jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        {
                                                        }
                                                        ini.INIIO.saveLogInf("上传检测开始失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));

                                                        MessageBox.Show("检测开传上传失败", "错误提示");
                                                        return;
                                                    }
                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStartSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测开始成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                                }
                                                #endregion
                                            }
                                            if (!uploadHCSuccess)
                                            {
                                                #region 上传HC

                                                if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD || mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                {
                                                    mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                    mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                    mainPanel.webthread.bgCO = double.Parse(asm_data.BackgroundCO);
                                                    mainPanel.webthread.bgNO = double.Parse(asm_data.BackgroundNO);
                                                    mainPanel.webthread.bgHC = double.Parse(asm_data.BackgroundHC);

                                                    mainPanel.webthread.canliuHC = double.Parse(asm_data.ResidualHC);
                                                    mainPanel.webthread.IFlowResult = "1";
                                                    mainPanel.webthread.O2Avg = 20.8;
                                                    mainPanel.webthread.checkResult = "1";
                                                    mainPanel.webthread.checkTimeStart = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.webthread.checkTimeEnd = jcsj.AddMinutes(1).ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.webthread.remark = "";
                                                    ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendAirHC);
                                                    Thread thread = new Thread(threadstart);
                                                    ini.INIIO.saveLogInf("开始上传HC残留，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    ini.INIIO.saveLogInf("mainPanel.yichangInterface.bgAirHC(" + carLogin.carbj.JYLSH + ","
                                                        + mainPanel.zkytwebinf.regcode + ","
                                                        + double.Parse(asm_data.BackgroundCO) + ","
                                                        + double.Parse(asm_data.BackgroundNO) + ","
                                                        + double.Parse(asm_data.BackgroundHC) + ","
                                                        + double.Parse(asm_data.ResidualHC) + ","
                                                        + "1" + ","
                                                        + "20.8" + ","
                                                        + "1" + ","
                                                        + jcsj.ToString("yyyy-MM-dd HH:mm:ss") + ","
                                                        + jcsj.AddMinutes(1).ToString("yyyy-MM-dd HH:mm:ss") + ","
                                                        + "" + ");");
                                                    int alivetimecount = 0;
                                                    int reSend = 0;
                                                    thread.Start();
                                                    string result, info;
                                                    bool isExcedTimeToUpload = false;
                                                    while (thread.IsAlive)
                                                    {
                                                        Thread.Sleep(10);
                                                        alivetimecount++;
                                                        if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                        {
                                                            isExcedTimeToUpload = true;
                                                            try
                                                            {
                                                                thread.Abort();
                                                            }
                                                            catch
                                                            { }
                                                            ini.INIIO.saveLogInf("上传HC残留失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));

                                                            MessageBox.Show("分析仪背景气体及HC残留上传失败", "错误提示");
                                                            return;
                                                        }

                                                    }
                                                    if (!isExcedTimeToUpload)
                                                    {
                                                        uploadHCSuccess = true;
                                                        ini.INIIO.saveLogInf("上传背景信息成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                        ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                                    }
                                                }
                                                #endregion
                                            }
                                            #region 上传过程数据
                                            if (dataseconds.Rows.Count>0)
                                            {
                                                ini.INIIO.saveLogInf("过程数据记录有" + dataseconds.Rows.Count.ToString() + "数据");
                                                ini.INIIO.saveLogInf("开始上传检测过程数据，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                try
                                                {
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                        {
                                                            mainPanel.yichangInterface.vasmLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                            i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["HC实时值"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["NO实时值"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["实时车速"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["转速"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["O2实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO2实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["稀释修正系数"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["湿度修正系数"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["加载功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["寄生功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["指示功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["油温"].ToString()), 1));
                                                        }
                                                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                        {
                                                            mainPanel.yichangInterfaceOther.vasmLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                              i,
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["HC实时值"].ToString()), 0),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["CO实时值"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["NO实时值"].ToString()), 0),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["实时车速"].ToString()), 0),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["转速"].ToString()), 0),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["O2实时值"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["CO2实时值"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["稀释修正系数"].ToString()), 3),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["湿度修正系数"].ToString()), 3),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["加载功率"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["寄生功率"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["指示功率"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["油温"].ToString()), 1));
                                                        }

                                                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                                        {
                                                            mainPanel.yichangInterfaceYnbs.wtGcsj(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                              DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                              dataseconds.Rows[i]["时序类别"].ToString(),
                                                              i,
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["HC实时值"].ToString()), 0),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["CO实时值"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["NO实时值"].ToString()), 0),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["O2实时值"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["CO2实时值"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["实时车速"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["转速"].ToString()), 0),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["稀释修正系数"].ToString()), 3),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["湿度修正系数"].ToString()), 3),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["加载功率"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["寄生功率"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["指示功率"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["油温"].ToString()), 1));
                                                        }
                                                        Thread.Sleep(10);
                                                    }
                                                    uploadProcessSuccess = true;
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    ini.INIIO.saveLogInf("上传检测过程数据完毕，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                }
                                                catch (Exception er)
                                                {
                                                    MessageBox.Show("上传过程数据失败\r\n" + "异常：" + er.Message);
                                                    Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                    return;
                                                }
                                            }
                                            #endregion
                                            #region 上传检测结束
                                            try
                                            {
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendFinish);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测结束命令，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        { }
                                                        ini.INIIO.saveLogInf("上传检测结束失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        MessageBox.Show("上传检测结束指令失败" );
                                                        Msg(label1, panel4, "上传检测结束指令失败");
                                                        return;
                                                    }

                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStopSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测结束成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测结束指令异常:" + er.Message);
                                                //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                Msg(label1, panel4, "上传检测结束指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 上传检测结果
                                            try
                                            {
                                                ini.INIIO.saveLogInf("开始上传数据");
                                                string result, info;

                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                mainPanel.webthread.hc5025 = double.Parse(asmdata.HC25CLZ);
                                                mainPanel.webthread.co5025 = double.Parse(asmdata.CO25CLZ);
                                                mainPanel.webthread.no5025 = double.Parse(asmdata.NOX25CLZ);
                                                mainPanel.webthread.fdjzs5025 = double.Parse(asmdata.FDJZS5025);
                                                mainPanel.webthread.fdjyw5025 = double.Parse(asmdata.FDJYW5025);
                                                if (asmdata.HC40CLZ == "")
                                                {
                                                    mainPanel.webthread.hc2540 = 0;
                                                    mainPanel.webthread.co2540 = 0;
                                                    mainPanel.webthread.no2540 = 0;
                                                    mainPanel.webthread.fdjzs2540 =0;
                                                    mainPanel.webthread.fdjyw2540 = 0;
                                                }
                                                else
                                                {
                                                    mainPanel.webthread.hc2540 = double.Parse(asmdata.HC40CLZ);
                                                    mainPanel.webthread.co2540 = double.Parse(asmdata.CO40CLZ);
                                                    mainPanel.webthread.no2540 = double.Parse(asmdata.NOX40CLZ);
                                                    mainPanel.webthread.fdjzs2540 = double.Parse(asmdata.FDJZS2540);
                                                    mainPanel.webthread.fdjyw2540 = double.Parse(asmdata.FDJYW2540);
                                                }
                                                mainPanel.webthread.tempreture = double.Parse(asmdata.WD);
                                                mainPanel.webthread.humidity = double.Parse(asmdata.SD);
                                                mainPanel.webthread.airPressure = double.Parse(asmdata.DQY);
                                                mainPanel.webthread.timeStart = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                mainPanel.webthread.timeEnd = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendAsmResult);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测结果，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        reSend++;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        { }
                                                        ini.INIIO.saveLogInf("上传检测结果失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        MessageBox.Show("上传检测结果指令失败");
                                                        Msg(label1, panel4, "上传检测结果指令失败");
                                                        return;
                                                    }
                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadResultSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测结果成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));                                                    
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);
                                                    if (result == "0")
                                                    {
                                                        MessageBox.Show(info);
                                                        return;
                                                    }
                                                    
                                                }


                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测结果指令异常:" + er.Message);
                                                //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                Msg(label1, panel4, "上传检测结果指令异常:" + er.Message);
                                                return;
                                            }
                                            try
                                            {
                                                ini.INIIO.saveLogInf(carinidata.CarID + " vasmData(" + carLogin.carbj.JYLSH + "," + mainPanel.zkytwebinf.regcode +
                                                    "," + asmdata.HC25CLZ + "," + asmdata.CO25CLZ + "," + asmdata.NOX25CLZ + "," + asmdata.FDJZS5025 + ","
                                                    + asmdata.FDJYW5025 + "," + asmdata.HC40CLZ + "," + asmdata.CO40CLZ + "," + asmdata.NOX40CLZ + ","
                                                    + asmdata.FDJZS2540 + "," + asmdata.FDJYW2540 + "," + asmdata.WD + "," + asmdata.SD + "," + asmdata.DQY + "," + jcsj.ToString("yyyy-MM-dd HH:mm:ss") + "," + jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            }
                                            catch
                                            { }
                                            #endregion
                                            #region 读取平台判定结果
                                            if(mainPanel.zkytwebinf.displayCheckResult)
                                            try
                                            {
                                                string result="", info="";
                                                string co5025el = ""; string hc5025el = ""; string no5025el = ""; string co2540el = ""; string hc2540el = ""; string no2540el = "";
                                                string co5025ed = ""; string hc5025ed = ""; string no5025ed = ""; string co2540ed = ""; string hc2540ed = ""; string no2540ed = "";
                                                string co5025str = ""; string hc5025str = ""; string no5025str = ""; string co2540str = ""; string hc2540str = ""; string no2540str = "";
                                                string result5 = "";
                                                if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                {
                                                    mainPanel.xmlanalysis.ReadAsmCheckResultString(mainPanel.yichangInterface.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                    out co5025el, out hc5025el, out no5025el, out co2540el, out hc2540el, out no2540el,
                                                    out co5025ed, out hc5025ed, out no5025ed, out co2540ed, out hc2540ed, out no2540ed,
                                                    out co5025str, out hc5025str, out no5025str, out co2540str, out hc2540str, out no2540str,
                                                    out result5);
                                                }
                                                else if(mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                {
                                                    mainPanel.xmlanalysis.ReadAsmCheckResultString(mainPanel.yichangInterfaceOther.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                    out co5025el, out hc5025el, out no5025el, out co2540el, out hc2540el, out no2540el,
                                                    out co5025ed, out hc5025ed, out no5025ed, out co2540ed, out hc2540ed, out no2540ed,
                                                    out co5025str, out hc5025str, out no5025str, out co2540str, out hc2540str, out no2540str,
                                                    out result5);
                                                }
                                                else if(mainPanel.zkytwebinf.add==mainPanel.ZKYTAREA_YNBS)
                                                    {
                                                        result = "";
                                                        info = "该地区不支持该接口";
                                                    }
                                                if (result == "1")
                                                {
                                                    asmdata.CO25CLZ = co5025str;
                                                    asmdata.HC25CLZ = hc5025str;
                                                    asmdata.NOX25CLZ = no5025str;
                                                    asmdata.CO40CLZ = co2540str;
                                                    asmdata.HC40CLZ = hc2540str;
                                                    asmdata.NOX40CLZ = no2540str;
                                                    asmdata.CO25XZ = co5025el;
                                                    asmdata.HC25XZ = hc5025el;
                                                    asmdata.NOX25XZ = no5025el;
                                                    asmdata.CO40XZ = co2540el;
                                                    asmdata.HC40XZ = hc2540el;
                                                    asmdata.NOX40XZ = no2540el;
                                                    asmdata.CO25PD = co5025ed;
                                                    asmdata.HC25PD = hc5025ed;
                                                    asmdata.NOX25PD = no5025ed;
                                                    asmdata.CO40PD = co2540ed;
                                                    asmdata.HC40PD = hc2540ed;
                                                    asmdata.NOX40PD = no2540ed;
                                                    asmdata.ZHPD = result5;
                                                }
                                                else
                                                {
                                                    ini.INIIO.saveLogInf("读取平台结果指令失败:" + info);
                                                    Msg(label1, panel4, "读取平台结果指令失败:" + info);
                                                    MessageBox.Show(info);
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("读取平台结果指令异常:" + er.Message);
                                                Msg(label1, panel4, "读取平台结果指令异常:" + er.Message);
                                                MessageBox.Show("读取平台结果指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 显示结果
                                            if (asmdata.ZHPD == "合格")
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult?"车辆检测合格":"车辆检测完毕";
                                                ini.INIIO.saveLogInf("联网信息：判定结果合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕";
                                                ini.INIIO.saveLogInf("联网信息：判定结果不合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                asmdal.Save_ASM(asmdata);
                                                enableButton(buttonOK, false);
                                            }
                                            ini.INIIO.saveLogInf("联网信息：结果数据上传服务器成功");
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(asmdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆：" + asmdata.CLPH);
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                            #endregion
                                        }
                                        else
                                        {
                                            #region 其他
                                            ini.INIIO.saveLogInf("判定检测结果");
                                            if (asmResultPd(asm_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("检测结果：合格");
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE || mainPanel.NetMode == mainPanel.EZNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("检测结果：不合格");
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE || mainPanel.NetMode == mainPanel.EZNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测不合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                            }
                                            asmdata.FDJZS5025 = fdjzs5025;
                                            asmdata.FDJYW5025 = fdjyw5025;
                                            asmdata.FDJZS2540 = fdjzs2540;
                                            asmdata.FDJYW2540 = fdjyw2540;
                                            asmdata.YW = yw;
                                            asmdata.JCBGBH = jcbgbh;
                                            asmdata.SHY = mainPanel.shy;
                                            asmdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            asmdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            ini.INIIO.saveLogInf("保存ASM检测结果到数据库");
                                            asmdal.Save_ASM(asmdata);
                                            ini.INIIO.saveLogInf("车辆检测结果保存成功");
                                            if (mainPanel.isNetUsed)
                                            {
                                                if (mainPanel.NetMode == mainPanel.WGNETMODE)
                                                {
                                                    #region 万国
                                                    carinfor.WGBasicTestData basicdata = new carinfor.WGBasicTestData();
                                                    basicdata.JCBGBH = jcbgbh;
                                                    basicdata.JCLXBH = thisjcff;
                                                    basicdata.JCLXMC = thisjcffmc;
                                                    basicdata.JCGWH = mainPanel.lineid;
                                                    basicdata.JCZBH = mainPanel.wgsocketinf.JCZBH;
                                                    basicdata.JCZMC = mainPanel.stationinfmodel.STATIONNAME;
                                                    basicdata.JCRQ = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    basicdata.JCLRY = carLogin.carbj.DLY;
                                                    basicdata.JCCZY = carLogin.carbj.CZY;
                                                    basicdata.JCJSY = carLogin.carbj.JSY;
                                                    basicdata.CPHM = carLogin.carbj.CLHP;
                                                    basicdata.SFCJ = (int.Parse(carLogin.carbj.JCCS) > 1) ? "复检" : "初检";
                                                    basicdata.JCCS = carLogin.carbj.JCCS;
                                                    basicdata.SFLJ = "否";
                                                    basicdata.SFCS = carLogin.carbj.SFCS;
                                                    basicdata.FWLX = "正常";
                                                    basicdata.PDJG = asmdata.ZHPD;
                                                    basicdata.BGJCFFYY = carLogin.bgffyy;
                                                    basicdata.WXBJ = carLogin.wxbj;
                                                    basicdata.WXCD = carLogin.wxcd;
                                                    basicdata.WXSJ = carLogin.wxsj;
                                                    basicdata.WXFY = carLogin.wxfy;
                                                    if (!mainPanel.wgsocket.SendBasicTestData(basicdata))
                                                    {
                                                        MessageBox.Show("基本结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    carinfor.WGCommonTestData comondata = new carinfor.WGCommonTestData();
                                                    carinfor.WGASMresultData wgdata = new carinfor.WGASMresultData();
                                                    comondata.SBRZBM = mainPanel.wgsocketinf.SBRZBH;
                                                    comondata.SBMC = mainPanel.equipmodel.SBMC;
                                                    comondata.SBXH = mainPanel.equipmodel.SBXH;
                                                    comondata.SBZZC = mainPanel.equipmodel.SBZZC;
                                                    comondata.DPCGJ = mainPanel.equipmodel.CGJXH;
                                                    comondata.PQFXY = mainPanel.equipmodel.FXYXH;
                                                    comondata.LLJ = "";
                                                    wgdata.JCBGBH = jcbgbh;
                                                    wgdata.WD = asmdata.WD;
                                                    wgdata.XDSD = asmdata.SD;
                                                    wgdata.DQY = asmdata.DQY;
                                                    wgdata.HC5025XZ = asmdata.HC25XZ;
                                                    wgdata.HC5025CLZ = asmdata.HC25CLZ;
                                                    wgdata.HC5025PDJG = asmdata.HC25PD;
                                                    wgdata.CO5025XZ = asmdata.CO25XZ;
                                                    wgdata.CO5025CLZ = asmdata.CO25CLZ;
                                                    wgdata.CO5025PDJG = asmdata.CO25PD;
                                                    wgdata.NO5025XZ = asmdata.NOX25XZ;
                                                    wgdata.NO5025CLZ = asmdata.NOX25CLZ;
                                                    wgdata.NO5025PDJG = asmdata.NOX25PD;
                                                    wgdata.FDJZS5025 = asmdata.FDJZS5025;
                                                    wgdata.FDJYW5025 = asmdata.FDJYW5025;
                                                    wgdata.HC2540XZ = asmdata.HC40XZ;
                                                    wgdata.HC2540CLZ = asmdata.HC40CLZ;
                                                    wgdata.HC2540PDJG = asmdata.HC40PD;
                                                    wgdata.CO2540XZ = asmdata.CO40XZ;
                                                    wgdata.CO2540CLZ = asmdata.CO40CLZ;
                                                    wgdata.CO2540PDJG = asmdata.CO40PD;
                                                    wgdata.NO2540XZ = asmdata.NOX40XZ;
                                                    wgdata.NO2540CLZ = asmdata.NOX40CLZ;
                                                    wgdata.NO2540PDJG = asmdata.NOX40PD;
                                                    wgdata.FDJZS2540 = asmdata.FDJZS2540;
                                                    wgdata.FDJYW2540 = asmdata.FDJYW2540;
                                                    wgdata.PDJG = asmdata.ZHPD;
                                                    wgdata.SHY = mainPanel.shy;
                                                    wgdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    wgdata.YW = asmdata.YW;
                                                    if (!mainPanel.wgsocket.SendASMresultData(comondata, wgdata))
                                                    {
                                                        MessageBox.Show("结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.CCNETMODE)
                                                {
                                                    #region 诚创
                                                    string code, message;

                                                    if (mainPanel.ccsocket.SendInspectionEnd(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message))
                                                    {
                                                        if (code != "1")
                                                        {
                                                            Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                            return;
                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息成功");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                        ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                        return;
                                                    }
                                                    carinfor.dataMainTxt datamaintxt = new carinfor.dataMainTxt();
                                                    datamaintxt.jcbh = carLogin.carbj.CLID;
                                                    datamaintxt.clhp = carLogin.carbj.CLHP;
                                                    datamaintxt.hpzl = carLogin.modelbj.CPYS;
                                                    datamaintxt.vin = carLogin.modelbj.CLSBM;
                                                    datamaintxt.czy = carLogin.carbj.CZY;
                                                    datamaintxt.jsy = carLogin.carbj.JSY;
                                                    datamaintxt.wd = asmdata.WD;
                                                    datamaintxt.sd = asmdata.SD;
                                                    datamaintxt.dqy = asmdata.DQY;
                                                    datamaintxt.jcsxh = jcsxh;
                                                    datamaintxt.cj = (asmdata.ZHPD == "合格") ? "1" : "0";
                                                    datamaintxt.jccs = carLogin.carbj.JCCS;
                                                    datamaintxt.ljsxlc = carLogin.carbj.XSLC;
                                                    datamaintxt.lsh = carLogin.carbj.JCBGBH;
                                                    datamaintxt.jckssj = asmdata.JCKSSJ;
                                                    datamaintxt.jcjssj = asmdata.JCJSSJ;
                                                    datamaintxt.jyr = asmdata.SHY;
                                                    datamaintxt.jcbgbh = carLogin.carbj.JCBGBH;
                                                    if (mainPanel.ccsocket.writeDataMainTxt(datamaintxt))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成失败");
                                                        Msg(label1, panel4, "写主检测信息数据成失败");
                                                        return;
                                                    }
                                                    carinfor.DataResultAsmTxt dataresult = new carinfor.DataResultAsmTxt();
                                                    dataresult.jcbh = carLogin.carbj.CLID;
                                                    dataresult.hc5025xz = asmdata.HC25XZ;
                                                    dataresult.hc5025 = asmdata.HC25CLZ;
                                                    dataresult.hc5025pd = ((asmdata.HC25PD == "合格") ? "1" : ((asmdata.HC40PD == "不合格") ? "0" : ""));
                                                    dataresult.hc2540xz = asmdata.HC40XZ;
                                                    dataresult.hc2540 = ((asmdata.HC40CLZ == "--") ? "" : asmdata.HC40CLZ);
                                                    dataresult.hc2540pd = ((asmdata.HC40PD == "合格") ? "1" : ((asmdata.HC40PD == "不合格") ? "0" : ""));
                                                    dataresult.co5025xz = asmdata.CO25XZ;
                                                    dataresult.co5025 = asmdata.CO25CLZ;
                                                    dataresult.co5025pd = ((asmdata.CO25PD == "合格") ? "1" : ((asmdata.CO40PD == "不合格") ? "0" : ""));
                                                    dataresult.co2540xz = asmdata.CO40XZ;
                                                    dataresult.co2540 = ((asmdata.CO40CLZ == "--") ? "" : asmdata.CO40CLZ);
                                                    dataresult.co2540pd = ((asmdata.CO40PD == "合格") ? "1" : ((asmdata.CO40PD == "不合格") ? "0" : ""));
                                                    dataresult.no5025xz = asmdata.NOX25XZ;
                                                    dataresult.no5025 = asmdata.NOX25CLZ;
                                                    dataresult.no5025pd = ((asmdata.NOX25PD == "合格") ? "1" : ((asmdata.NOX40PD == "不合格") ? "0" : ""));
                                                    dataresult.no2540xz = asmdata.NOX40XZ;
                                                    dataresult.no2540 = ((asmdata.NOX40CLZ == "--") ? "" : asmdata.NOX40CLZ);
                                                    dataresult.no2540pd = ((asmdata.NOX40PD == "合格") ? "1" : ((asmdata.NOX40PD == "不合格") ? "0" : ""));
                                                    if (mainPanel.ccsocket.writeDataResult(dataresult))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写稳态工况法检测结果数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写稳态工况法检测结果数据成失败");
                                                        Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        return;
                                                    }
                                                    bool uploadOK = false;

                                                    for (int i = 0; i < 3; i++)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）" + (i + 1).ToString() + "Upload");
                                                        if (mainPanel.ccsocket.WaitUploadFinish(out code, out message, out uploadOK))
                                                        {
                                                            if (code == "1")
                                                            {
                                                                if (uploadOK)
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload成功");
                                                                    break;
                                                                }
                                                                else
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload失败");
                                                                    // Msg(label1, panel4, "Upload失败");
                                                                    continue;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                                //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                                continue;
                                                            }

                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                            //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                            continue;
                                                        }
                                                    }
                                                    if (!uploadOK)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）Upload三次上传失败");
                                                        //return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.ORTNETMODE)
                                                {
                                                    #region ort net mode
                                                    string code, message;
                                                    carinfor.OrtASMVehicleInfo vehicleinf = new carinfor.OrtASMVehicleInfo();
                                                    vehicleinf.License = carLogin.modelbj.CLHP;
                                                    vehicleinf.LicenseClass = carLogin.modelbj.CPYS;
                                                    vehicleinf.Fuel = carLogin.modelbj.RLZL;
                                                    vehicleinf.VLTID = carLogin.modelbj.ZZL;
                                                    vehicleinf.Mileage = carLogin.carbj.XSLC;
                                                    vehicleinf.OwnerName = carLogin.modelbj.CZ;
                                                    vehicleinf.OwnerAddr = carLogin.modelbj.CZDZ;
                                                    vehicleinf.BodyColor = carLogin.modelbj.CSYS;
                                                    vehicleinf.EngineID = carLogin.modelbj.FDJHM;
                                                    vehicleinf.VIN = carLogin.modelbj.CLSBM;
                                                    vehicleinf.Cleaners = carLogin.modelbj.GYFS;
                                                    vehicleinf.Brand = carLogin.modelbj.PP;
                                                    vehicleinf.Model = carLogin.modelbj.XH;
                                                    vehicleinf.GATypeCode = carLogin.modelbj.CLLX.Split('_')[0];
                                                    vehicleinf.UseType = mainPanel.ortsocket.ORT_UseTypeR.GetValue(carLogin.modelbj.SYXZ, "");
                                                    vehicleinf.Area = carLogin.modelbj.SSXQ;
                                                    vehicleinf.EngineModel = carLogin.modelbj.FDJXH;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JQFS.Contains("增压") ? "是" : "否";
                                                    vehicleinf.RegData = carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.FactoryDate = carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.DriveType = carLogin.modelbj.QDXS;
                                                    vehicleinf.IsClosedLoopEFI = carLogin.modelbj.DPFS == "闭环电喷" ? "是" : "否";
                                                    vehicleinf.Is3WCC = carLogin.modelbj.JHZZ;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JHZZ;
                                                    vehicleinf.RateSpeed = carLogin.modelbj.EDZS;
                                                    vehicleinf.NominalPower = carLogin.modelbj.EDGL;
                                                    vehicleinf.Passengers = carLogin.modelbj.HDZK;
                                                    vehicleinf.BaseWeight = carLogin.modelbj.JZZL;
                                                    vehicleinf.Cylinders = carLogin.modelbj.QGS;
                                                    vehicleinf.IfGoIntoCity = carLogin.modelbj.SFWDZR;
                                                    vehicleinf.Stage = mainPanel.ortsocket.ORT_PhaseR.GetValue(carLogin.modelbj.ZXBZ, "");

                                                    carinfor.OrtASMResult resultinf = new carinfor.OrtASMResult();
                                                    resultinf.TestID = carLogin.carbj.JCBGBH;
                                                    resultinf.License = carLogin.carbj.CLHP;
                                                    resultinf.LicenseClass = carLogin.carbj.CPYS;
                                                    if (int.Parse(carLogin.modelbj.ZZL) <= 3500)
                                                        resultinf.VehicleType = "轻型车辆";
                                                    else if (int.Parse(carLogin.modelbj.ZZL) > 10000)
                                                        resultinf.VehicleType = "重型车辆";
                                                    else
                                                        resultinf.VehicleType = "中型车辆";
                                                    resultinf.TestType = carLogin.carbj.SFCJ;
                                                    resultinf.Region = carLogin.modelbj.SSXQ;
                                                    resultinf.Phase = carLogin.modelbj.ZXBZ;
                                                    resultinf.StationID = mainPanel.stationid;
                                                    resultinf.EISID = mainPanel.stationinfmodel.StationCompany + mainPanel.lineid;
                                                    resultinf.OperatorID = carLogin.carbj.CZY;
                                                    resultinf.AmbientTemp = asmdata.WD;
                                                    resultinf.AmbientHum = asmdata.SD;
                                                    resultinf.Pressure = asmdata.DQY;
                                                    resultinf.TestStartTime = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    resultinf.TestEndTime = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    resultinf.AmbientHC = "0";
                                                    resultinf.AmbientCO = "0.00";
                                                    resultinf.AmbientNO = "0";
                                                    resultinf.ResidualHC = "0";
                                                    resultinf.Is5024Done = asm_data.Has5025Tested;
                                                    resultinf.HCCutpoint5024 = asmdata.HC25XZ;
                                                    resultinf.COCutpoint5024 = asmdata.CO25XZ;
                                                    resultinf.NOCutpoint5024 = asmdata.NOX25XZ;
                                                    resultinf.HC5024 = asmdata.HC25CLZ;
                                                    resultinf.CO5024 = asmdata.CO25CLZ;
                                                    resultinf.NO5024 = asmdata.NOX25CLZ;
                                                    resultinf.Rotary5024 = asmdata.FDJZS5025;
                                                    if (asm_data.Hc5025pd == "不合格" || asm_data.Co5025pd == "不合格" || asm_data.No5025pd == "不合格")
                                                        resultinf.Result5024 = "不合格";
                                                    else
                                                        resultinf.Result5024 = "合格";

                                                    resultinf.Is2540Done = asm_data.Has2540Tested;
                                                    resultinf.HCCutpoint2540 = asmdata.HC40XZ;
                                                    resultinf.COCutpoint2540 = asmdata.CO40XZ;
                                                    resultinf.NOCutpoint2540 = asmdata.NOX40XZ;
                                                    resultinf.HC2540 = asmdata.HC40CLZ;
                                                    resultinf.CO2540 = asmdata.CO40CLZ;
                                                    resultinf.NO2540 = asmdata.NOX40CLZ;
                                                    resultinf.Rotary2540 = asmdata.FDJZS2540;
                                                    if (asm_data.Is2540Done == "1")
                                                    {
                                                        if (asm_data.Hc2540pd == "不合格" || asm_data.Co2540pd == "不合格" || asm_data.No2540pd == "不合格")
                                                            resultinf.Result2540 = "不合格";
                                                        else
                                                            resultinf.Result2540 = "合格";
                                                    }
                                                    else
                                                    {
                                                        resultinf.HC2540 = "0";
                                                        resultinf.CO2540 = "0";
                                                        resultinf.NO2540 = "0";
                                                        resultinf.Result2540 = "";
                                                    }
                                                    resultinf.Result = asmdata.ZHPD;
                                                    resultinf.CrucialTime0 = CrucialTime0;
                                                    resultinf.CrucialTime1 = CrucialTime1;
                                                    resultinf.CrucialTime2 = CrucialTime2;
                                                    resultinf.CrucialTime3 = "";
                                                    resultinf.IsGasCapTested = "1";
                                                    resultinf.GasCapResult = "合格";
                                                    resultinf.OutlookResult = "合格";
                                                    resultinf.AbortReason = "";
                                                    if (mainPanel.ortsocket.UploadAsmResult(vehicleinf, resultinf, out code, out message))
                                                    {

                                                        ini.INIIO.saveLogInf("（欧润特联网）写稳态工况法检测结果数据成成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else if (mainPanel.ortsocket.UploadAsmResult(vehicleinf, resultinf, out code, out message))
                                                    {
                                                        ini.INIIO.saveLogInf("（欧润特联网）写稳态工况法检测结果数据第一次失败，第二次发送成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（欧润特联网）写稳态工况法检测结果数据成失败");
                                                        Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        return;
                                                    }
                                                    if (dataseconds != null)
                                                    {
                                                        if (mainPanel.ortsocket.UploadAsmDataseconds(resultinf.TestID, dataseconds, out code, out message))
                                                        {
                                                            ini.INIIO.saveLogInf("（欧润特联网）上伟稳态过程数据成功");
                                                        }
                                                        else if (mainPanel.ortsocket.UploadAsmDataseconds(resultinf.TestID, dataseconds, out code, out message))
                                                        {
                                                            ini.INIIO.saveLogInf("（欧润特联网）上伟稳态过程数据第一次失败，第二次成功");
                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（欧润特联网）上伟稳态过程数据失败");
                                                        }
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                                {
                                                    #region 安车
                                                    Thread.Sleep(1000);
                                                    if (!saveAsmResult2Net())
                                                    {
                                                        Thread.Sleep(1000);
                                                        if (!saveAsmResult2Net())
                                                        {
                                                            MessageBox.Show("结果数据上传安车服务器失败", "错误提示");
                                                            ini.INIIO.saveLogInf("安车联网信息：结果数据上传服务器失败");
                                                            return;
                                                        }
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                                {
                                                    #region 通用
                                                    车辆检测状态 teststate = new 车辆检测状态();
                                                    teststate.JCZBH = mainPanel.stationid;
                                                    teststate.LINEID = mainPanel.lineid;
                                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                                    teststate.JYCS = carLogin.carbj.JCCS;
                                                    teststate.JCSJ = DateTime.Now;
                                                    teststate.CLHP = carLogin.carbj.CLHP;
                                                    teststate.HPZL = carLogin.carbj.HPZL;
                                                    teststate.ZT = mainPanel.finishTest;
                                                    teststate.JCFF = carLogin.carbj.JCFF;
                                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.DALINETMODE)
                                                {
                                                    #region 大理
                                                    string code, msg;
                                                    string reportID;
                                                    sendPicture(asmdata.ZHPD);
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "VMAS": ht.Add("检测类别", "1"); break;
                                                        case "ASM": ht.Add("检测类别", "2"); break;
                                                        case "SDS": ht.Add("检测类别", "3"); break;
                                                        case "JZJS": ht.Add("检测类别", "4"); break;
                                                        case "ZYJS": ht.Add("检测类别", "5"); break;
                                                        case "LZ": ht.Add("检测类别", "6"); break;
                                                    }
                                                    ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                                    ht.Add("温度", asmdata.WD);
                                                    ht.Add("大气压", asmdata.DQY);
                                                    ht.Add("相对湿度", asmdata.SD);
                                                    ht.Add("HC5025限值", asmdata.HC25XZ);
                                                    ht.Add("HC5025测量值", asmdata.HC25CLZ);
                                                    ht.Add("HC5025判定结果", asmdata.HC25PD);
                                                    ht.Add("CO5025限值", asmdata.CO25XZ);
                                                    ht.Add("CO5025测量值", asmdata.CO25CLZ);
                                                    ht.Add("CO5025判定结果", asmdata.CO25PD);
                                                    ht.Add("NO5025限值", asmdata.NOX25XZ);
                                                    ht.Add("NO5025测量值", asmdata.NOX25CLZ);
                                                    ht.Add("NO5025判定结果", asmdata.NOX25PD);
                                                    ht.Add("N5025发动机转速", asmdata.FDJZS5025);
                                                    ht.Add("N5025油温", asmdata.FDJYW5025);
                                                    if (asm_data.Has2540Tested == "1")
                                                    {
                                                        ht.Add("HC2540限值", asmdata.HC40XZ);
                                                        ht.Add("HC2540测量值", asmdata.HC40CLZ);
                                                        ht.Add("HC2540判定结果", asmdata.HC40PD);
                                                        ht.Add("CO2540限值", asmdata.CO40XZ);
                                                        ht.Add("CO2540测量值", asmdata.CO40CLZ);
                                                        ht.Add("CO2540判定结果", asmdata.CO40PD);
                                                        ht.Add("NO2540限值", asmdata.NOX40XZ);
                                                        ht.Add("NO2540测量值", asmdata.NOX40CLZ);
                                                        ht.Add("NO2540判定结果", asmdata.NOX40PD);
                                                        ht.Add("N2540发动机转速", asmdata.FDJZS2540);
                                                        ht.Add("N2540油温", asmdata.FDJYW2540);
                                                    }
                                                    else
                                                    {
                                                        ht.Add("HC2540限值", asmdata.HC40XZ);
                                                        ht.Add("HC2540测量值", "0");
                                                        ht.Add("HC2540判定结果", "合格");
                                                        ht.Add("CO2540限值", asmdata.CO40XZ);
                                                        ht.Add("CO2540测量值", "0");
                                                        ht.Add("CO2540判定结果", "合格");
                                                        ht.Add("NO2540限值", asmdata.NOX40XZ);
                                                        ht.Add("NO2540测量值", "0");
                                                        ht.Add("NO2540判定结果", "合格");
                                                        ht.Add("N2540发动机转速", "0");
                                                        ht.Add("N2540油温", "0");
                                                    }
                                                    ht.Add("判定结果", asmdata.ZHPD);
                                                    ht.Add("审核员", asmdata.SHY);
                                                    ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    //DataTable dt = new DataTable();
                                                    if (!mainPanel.daliinterface.sendTestData(ht, 2, dataseconds, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送检测数据失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送检测数据失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + asmdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                                {
                                                    #region 湖南
                                                    string code, msg;
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    System.Collections.Hashtable htdata = new System.Collections.Hashtable();
                                                    ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", asmdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    DataTable dtinf = new DataTable();
                                                    if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送结束检测命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送结束检测命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("xh", carLogin.modelbj.XH);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("clxh", carLogin.modelbj.PP);
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("fdjxh", carLogin.modelbj.FDJXH);
                                                    ht.Add("fdjh", carLogin.modelbj.FDJHM);
                                                    ht.Add("cllx", carLogin.modelbj.CLLX.Split('_')[0]);
                                                    ht.Add("csys", mainPanel.hninterface.RHN_CSYS.GetValue(carLogin.modelbj.CSYS, ""));
                                                    ht.Add("syxz", mainPanel.hninterface.RHN_SYXZ.GetValue(carLogin.modelbj.SYXZ, ""));
                                                    ht.Add("syr", carLogin.modelbj.CZ);
                                                    ht.Add("ccdjrq", carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("rlzl", mainPanel.hninterface.RHN_RLZL.GetValue(carLogin.modelbj.RLZL, ""));
                                                    ht.Add("pl", carLogin.modelbj.FDJPL);
                                                    ht.Add("gl", carLogin.modelbj.EDGL);
                                                    ht.Add("zs", "2");
                                                    ht.Add("zj", "2800");
                                                    ht.Add("qlj", "");
                                                    ht.Add("hlj", "");
                                                    ht.Add("zzl", carLogin.modelbj.ZZL);
                                                    ht.Add("zbzl", carLogin.modelbj.ZBZL);
                                                    ht.Add("ccrq", carLogin.modelbj.SCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("zsxzqh", "");
                                                    ht.Add("zzxzqh", "");
                                                    ht.Add("zt", "");
                                                    ht.Add("jqfs", mainPanel.hninterface.RHN_JQFS.GetValue(carLogin.modelbj.JQFS, ""));
                                                    ht.Add("gyxs", mainPanel.hninterface.RHN_GYXS.GetValue(carLogin.modelbj.GYFS, ""));
                                                    ht.Add("yxqz", "");
                                                    ht.Add("xslc", carLogin.carbj.XSLC);
                                                    ht.Add("chzhq", (carLogin.modelbj.JHZZ == "无" || carLogin.modelbj.JHZZ == "否") ? "0" : "1");
                                                    ht.Add("edzs", carLogin.modelbj.EDZS);
                                                    ht.Add("qdlqy", carLogin.modelbj.QDLTQY);
                                                    ht.Add("dczz", carLogin.modelbj.SSXQ);
                                                    ht.Add("rygg", carLogin.modelbj.RYPH);
                                                    ht.Add("bsqxs", mainPanel.hninterface.RHN_BSQXS.GetValue(carLogin.modelbj.BSQXS, ""));
                                                    ht.Add("dws", carLogin.modelbj.DWS);
                                                    ht.Add("qgs", carLogin.modelbj.QGS);
                                                    ht.Add("edzk", carLogin.modelbj.HDZK);
                                                    ht.Add("hbdbqk", "");
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", asmdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    //htdata.Add("glkqxssx", "1.03");
                                                    //htdata.Add("glkqxsxx", "0.97");
                                                    htdata.Add("hc5025pfxz", asmdata.HC25XZ);
                                                    htdata.Add("hc5025pfjg", asmdata.HC25CLZ);
                                                    htdata.Add("hc5025pfpd", asmdata.HC25PD == "合格" ? "1" : "0");
                                                    htdata.Add("co5025pfxz", asmdata.CO25XZ);
                                                    htdata.Add("co5025pfjg", asmdata.CO25CLZ);
                                                    htdata.Add("co5025pfpd", asmdata.CO25PD == "合格" ? "1" : "0");
                                                    htdata.Add("no5025pfxz", asmdata.NOX25XZ);
                                                    htdata.Add("no5025pfjg", asmdata.NOX25CLZ);
                                                    htdata.Add("no5025pfpd", asmdata.NOX25PD == "合格" ? "1" : "0");
                                                    if (asm_data.Has2540Tested == "1")
                                                    {
                                                        htdata.Add("hc2540pfxz", asmdata.HC40XZ);
                                                        htdata.Add("hc2540pfjg", asmdata.HC40CLZ);
                                                        htdata.Add("hc2540pfpd", asmdata.HC40PD == "合格" ? "1" : "0");
                                                        htdata.Add("co2540pfxz", asmdata.CO40XZ);
                                                        htdata.Add("co2540pfjg", asmdata.CO40CLZ);
                                                        htdata.Add("co2540pfpd", asmdata.CO40PD == "合格" ? "1" : "0");
                                                        htdata.Add("no2540pfxz", asmdata.NOX40XZ);
                                                        htdata.Add("no2540pfjg", asmdata.NOX40CLZ);
                                                        htdata.Add("no2540pfpd", asmdata.NOX40PD == "合格" ? "1" : "0");
                                                    }
                                                    else
                                                    {
                                                        htdata.Add("hc2540pfxz", asmdata.HC40XZ);
                                                        htdata.Add("hc2540pfjg", "0");
                                                        htdata.Add("hc2540pfpd", "-1");
                                                        htdata.Add("co2540pfxz", asmdata.CO40XZ);
                                                        htdata.Add("co2540pfjg", "0");
                                                        htdata.Add("co2540pfpd", "-1");
                                                        htdata.Add("no2540pfxz", asmdata.NOX40XZ);
                                                        htdata.Add("no2540pfjg", "0");
                                                        htdata.Add("no2540pfpd", "-1");
                                                    }
                                                    htdata.Add("asmhjwd", asmdata.WD);
                                                    htdata.Add("asmhjsd", asmdata.SD);
                                                    htdata.Add("asmhjdqy", asmdata.DQY);
                                                    htdata.Add("asmfdjyw", asmdata.YW);
                                                    if (!mainPanel.hninterface.writeTestResult(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送结果数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    htdata.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", asmdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    string HCGCSJ = "", COGCSJ = "", CO2GCSJ = "", O2GCSJ = "", NOXGCSJ = "", GLKQXSSJ = "", HCPFZLGCSJ = "", COPFZLGCSJ = "",
                                                        NOXPFZLGCSJ = "", LLJO2GCSJ = "", LLJSJLLGCSJ = "", LLJBZLLGCSJ = "", LLJWDGCSJ = "", QCWQLLGCSJ = "", LLJQYGCSJ = "", ZSGCSJ = "", YWGCSJ = "",
                                                        CSGCSJ = "", XSBGCSJ = "", XSXZGCSJ = "", SDXZGCSJ = "", JSGLGCSJ = "", ZSGLGCSJ = "", HJWDGCSJ = "", HJSDGCSJ = "", HJDQYGCSJ = "", YDZGCSJ = "",
                                                        GXSXSGCSJ = "";
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        HCGCSJ += dr["HC实时值"].ToString() + "#";
                                                        COGCSJ += dr["CO实时值"].ToString() + "#";
                                                        CO2GCSJ += dr["CO2实时值"].ToString() + "#";
                                                        NOXGCSJ += dr["NO实时值"].ToString() + "#";
                                                        O2GCSJ += dr["O2实时值"].ToString() + "#";
                                                        GLKQXSSJ += "1.00#";
                                                        CSGCSJ += dr["实时车速"].ToString() + "#";
                                                        ZSGLGCSJ += dr["加载功率"].ToString() + "#";
                                                        HJWDGCSJ += dr["环境温度"].ToString() + "#";
                                                        HJSDGCSJ += dr["相对湿度"].ToString() + "#";
                                                        HJDQYGCSJ += dr["大气压力"].ToString() + "#";
                                                        SDXZGCSJ += dr["湿度修正系数"].ToString() + "#";
                                                        XSXZGCSJ += dr["稀释修正系数"].ToString() + "#";
                                                        ZSGCSJ += dr["转速"].ToString() + "#";
                                                        YWGCSJ += dr["油温"].ToString() + "#";
                                                        JSGLGCSJ += dr["寄生功率"].ToString() + "#";
                                                    }
                                                    HCGCSJ.Remove(HCGCSJ.Length - 1, 1);
                                                    COGCSJ.Remove(COGCSJ.Length - 1, 1);
                                                    CO2GCSJ.Remove(CO2GCSJ.Length - 1, 1);
                                                    NOXGCSJ.Remove(NOXGCSJ.Length - 1, 1);
                                                    O2GCSJ.Remove(O2GCSJ.Length - 1, 1);
                                                    GLKQXSSJ.Remove(GLKQXSSJ.Length - 1, 1);
                                                    CSGCSJ.Remove(CSGCSJ.Length - 1, 1);
                                                    ZSGLGCSJ.Remove(ZSGLGCSJ.Length - 1, 1);
                                                    HJWDGCSJ.Remove(HJWDGCSJ.Length - 1, 1);
                                                    HJSDGCSJ.Remove(HJSDGCSJ.Length - 1, 1);
                                                    HJDQYGCSJ.Remove(HJDQYGCSJ.Length - 1, 1);
                                                    SDXZGCSJ.Remove(SDXZGCSJ.Length - 1, 1);
                                                    XSXZGCSJ.Remove(XSXZGCSJ.Length - 1, 1);
                                                    ZSGCSJ.Remove(ZSGCSJ.Length - 1, 1);
                                                    YWGCSJ.Remove(YWGCSJ.Length - 1, 1);
                                                    JSGLGCSJ.Remove(JSGLGCSJ.Length - 1, 1);

                                                    htdata.Add("HCGCSJ", HCGCSJ);
                                                    htdata.Add("COGCSJ", COGCSJ);
                                                    htdata.Add("CO2GCSJ", CO2GCSJ);
                                                    htdata.Add("O2GCSJ", O2GCSJ);
                                                    htdata.Add("NOXGCSJ", NOXGCSJ);
                                                    htdata.Add("GLKQXSSJ", GLKQXSSJ);
                                                    htdata.Add("HCPFZLGCSJ", HCPFZLGCSJ);
                                                    htdata.Add("COPFZLGCSJ", COPFZLGCSJ);
                                                    htdata.Add("NOXPFZLGCSJ", NOXPFZLGCSJ);
                                                    htdata.Add("LLJO2GCSJ", LLJO2GCSJ);
                                                    htdata.Add("LLJSJLLGCSJ", LLJSJLLGCSJ);
                                                    htdata.Add("LLJBZLLGCSJ", LLJBZLLGCSJ);
                                                    htdata.Add("LLJWDGCSJ", LLJWDGCSJ);
                                                    htdata.Add("QCWQLLGCSJ", QCWQLLGCSJ);
                                                    htdata.Add("LLJQYGCSJ", LLJQYGCSJ);
                                                    htdata.Add("ZSGCSJ", ZSGCSJ);
                                                    htdata.Add("YWGCSJ", YWGCSJ);
                                                    htdata.Add("CSGCSJ", CSGCSJ);
                                                    htdata.Add("XSBGCSJ", XSBGCSJ);
                                                    htdata.Add("XSXZGCSJ", XSXZGCSJ);
                                                    htdata.Add("SDXZGCSJ", SDXZGCSJ);
                                                    htdata.Add("JSGLGCSJ", JSGLGCSJ);
                                                    htdata.Add("ZSGLGCSJ", ZSGLGCSJ);
                                                    htdata.Add("HJWDGCSJ", HJWDGCSJ);
                                                    htdata.Add("HJSDGCSJ", HJSDGCSJ);
                                                    htdata.Add("HJDQYGCSJ", HJDQYGCSJ);
                                                    htdata.Add("YDZGCSJ", YDZGCSJ);
                                                    htdata.Add("GXSXSGCSJ", GXSXSGCSJ);

                                                    if (!mainPanel.hninterface.writeTestDataSeconds(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送过程数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送过程数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + asmdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }

                                                else if (mainPanel.NetMode == mainPanel.EZNETMODE)
                                                {
                                                    #region 鄂州
                                                    string code, msg;
                                                    try
                                                    {
                                                        EzWebClient.InspectionInformation data = new EzWebClient.InspectionInformation(
                                                            asmdata.ZHPD == "合格" ? "1" : "0",
                                                            asmdata.JCBGBH,
                                                            jssj.ToString("yyyyMMddHHmmss"),
                                                            mainPanel.ezinterface.EZR_inspectionmethod.GetValue(carLogin.carbj.JCFF, ""),
                                                            carLogin.carbj.JSY,
                                                            asmdata.JCBGBH,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            carLogin.carbj.JCCS,
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            mainPanel.stationid,
                                                            carLogin.modelbj.JCLB,
                                                            carLogin.modelbj.CLHP,
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.SCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJSCQY,
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.EDGL,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.modelbj.JZZL,
                                                             carLogin.carbj.XSLC,
                                                             carLogin.modelbj.QGS,
                                                             "Y",
                                                             "N",
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             DateTime.Now.ToString("yyyyMMddHHmmss"),
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "",
                                                             carLogin.carbj.CZY
                                                            );
                                                        if (!mainPanel.ezinterface.uploadInspectionInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("发送检测信息命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                            ini.INIIO.saveLogInf("发送检测信息命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    try
                                                    {
                                                        EzWebClient.ExternalLoginInformation data = new EzWebClient.ExternalLoginInformation(
                                                             mainPanel.stationid,
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             "N",
                                                             carLogin.modelbj.QGS,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             "Y",
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJHM,
                                                             "N",
                                                             "N",
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             carLogin.carbj.JCBGBH,
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.carbj.JCBGBH,
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             carLogin.modelbj.CLHP,
                                                             "N",
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.carbj.XSLC,

                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             "Y",
                                                             "N",
                                                             "",
                                                             carLogin.modelbj.CZDZ,
                                                             carLogin.modelbj.LXDH,
                                                             "Y",
                                                             carLogin.modelbj.EDGL,
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.JZZL,
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             carLogin.modelbj.CZ,

                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "1"
                                                            );
                                                        if (!mainPanel.ezinterface.uploadExternalLoginInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("新增外检登录信息失败,不能开始检测\r\ncode:" + code + "\r\nmessage:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("新增外检登录信息发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        EzWebClient.SteadyStateMethodData data = new EzWebClient.SteadyStateMethodData(
                                                            mainPanel.stationid,
                                                            asmdata.JCBGBH,
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            asmdata.HC25CLZ,
                                                            asmdata.CO25CLZ,
                                                            asmdata.NOX25CLZ,
                                                            asmdata.FDJZS5025,
                                                            asmdata.FDJYW5025,
                                                            asm_data.Has2540Tested == "1" ? asmdata.HC40CLZ : "",
                                                            asm_data.Has2540Tested == "1" ? asmdata.CO40CLZ : "",
                                                            asm_data.Has2540Tested == "1" ? asmdata.NOX40CLZ : "",
                                                            asm_data.Has2540Tested == "1" ? asmdata.FDJZS2540 : "",
                                                            asm_data.Has2540Tested == "1" ? asmdata.FDJYW2540 : "",
                                                            asmdata.HC25XZ,
                                                            asmdata.CO25XZ,
                                                            asmdata.NOX25XZ,
                                                            asmdata.HC40XZ,
                                                            asmdata.CO40XZ,
                                                            asmdata.NOX40XZ,
                                                            asmdata.HC25PD == "合格" ? "1" : "0",
                                                            asmdata.CO25PD == "合格" ? "1" : "0",
                                                            asmdata.NOX25PD == "合格" ? "1" : "0",
                                                            asm_data.Has2540Tested == "1" ? (asmdata.HC40PD == "合格" ? "1" : "0") : "",
                                                            asm_data.Has2540Tested == "1" ? (asmdata.CO40PD == "合格" ? "1" : "0") : "",
                                                            asm_data.Has2540Tested == "1" ? (asmdata.NOX40PD == "合格" ? "1" : "0") : "",
                                                            asmdata.WD,
                                                            asmdata.SD,
                                                            asmdata.DQY,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            jssj.ToString("yyyyMMddHHmmss"),
                                                            asmdata.JCBGBH
                                                            );
                                                        if (!mainPanel.ezinterface.uploadSteadyStateMethodData(data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    try
                                                    {
                                                        for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                        {
                                                            DataRow dr = dataseconds.Rows[i];
                                                            EzWebClient.SteadyStateMethodLog data = new EzWebClient.SteadyStateMethodLog(
                                                                mainPanel.stationid,
                                                                asmdata.JCBGBH,
                                                                mainPanel.stationid + mainPanel.lineid,
                                                                DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                                i.ToString(),
                                                                dr["时序类别"].ToString(),
                                                                dr["HC实时值"].ToString(),
                                                                dr["CO实时值"].ToString(),
                                                                dr["NO实时值"].ToString(),
                                                                dr["O2实时值"].ToString(),
                                                                dr["CO2实时值"].ToString(),
                                                                dr["实时车速"].ToString(),
                                                                dr["转速"].ToString(),
                                                                dr["扭力"].ToString(),
                                                                "907",
                                                                dr["稀释修正系数"].ToString(),
                                                                dr["湿度修正系数"].ToString(),
                                                                dr["加载功率"].ToString(),
                                                                dr["寄生功率"].ToString(),
                                                                dr["指示功率"].ToString(),
                                                                dr["环境温度"].ToString(),
                                                                dr["大气压力"].ToString(),
                                                                dr["相对湿度"].ToString(),
                                                                dr["油温"].ToString()
                                                                );
                                                            if (!mainPanel.ezinterface.uploadSteadyStateMethodLog(data, out code, out msg))
                                                            {
                                                                ini.INIIO.saveLogInf("发送过程数据[" + i.ToString() + "]命令失败,code" + code + ",msg:" + msg);
                                                            }
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    sendPicture(asmdata.ZHPD);
                                                    Msg(label1, panel4, "车辆检测" + asmdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }

                                            }
                                            ini.INIIO.saveLogInf("联网信息：结果数据上传服务器成功");
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(asmdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆：" + asmdata.CLPH);
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                        }
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("逐秒数据读取失败");
                                        Msg(label1, panel4, "未找到过程数据，检测无效");
                                    }
                                    #endregion
                                }
                                File.Delete(newPath);
                                ini.INIIO.saveLogInf("删除结果文件：" + newPath);
                                break;
                                #endregion
                            case "VMAS":
                                #region 瞬态
                                ini.INIIO.WritePrivateProfileString("测功机上次运转时间", "时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), @".\detectConfig.ini");
                                string vmasinifileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                if (ini.INIIO.createDir(vmasinifileDir))
                                    File.Copy(newPath, vmasinifileDir + "/" + carLogin.carbj.CLID + ".ini", true);
                               // File.Copy(newPath, "D://dataseconds/" + carLogin.carbj.CLID + ".ini", true);
                                vmas_data = vmasdatacontrol.readVmasData(newPath);
                                if (vmas_data.Cozl == "-1")
                                {
                                    Msg(label1, panel4, "设备未完成检测退出,无检测结果数据");
                                    mainPanel.ts1 = "设备未完成检测退出";
                                    mainPanel.ts2 = "无检测结果数据";
                                    Msg(labelStatus, panelStatus, "故障");
                                    if (mainPanel.isNetUsed)
                                    {
                                        if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                        {
                                            carinfor.equipmentStatus equipmentcontrol = new carinfor.equipmentStatus();
                                            equipmentcontrol.JCBGBH = jcbgbh;
                                            equipmentcontrol.JCGWH = mainPanel.lineid;
                                            equipmentcontrol.SJXL = asm_data.RESULT;
                                            equipmentcontrol.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            equipmentcontrol.writeEquipmentStatus('F');
                                            ini.INIIO.saveLogInf("安车联网信息：发送检测失败指令");
                                        }
                                        if (mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                                        {
                                                NeusoftUtil.UploadVmasResult vmasresult = new NeusoftUtil.UploadVmasResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = "";
                                            vmasresult.AirPressure = "";
                                            vmasresult.Humidity = "";
                                            vmasresult.AmbientO2 = "";
                                            vmasresult.ResidualHC = "";
                                            vmasresult.TestTime = "";
                                            vmasresult.AirFlowAll = "";
                                            vmasresult.CO = "";
                                            vmasresult.HC = "";
                                            vmasresult.NOX = "";
                                            vmasresult.CO2 = "";
                                            vmasresult.HCNOX = "";
                                            vmasresult.Power = "";
                                            vmasresult.StartTime = "";
                                            vmasresult.StopReason = "9";
                                            vmasresult.Result = "2";
                                            vmasresult.AdjustZero = "";
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadVmasResultRequest(vmasresult, null, out result, out inf, out dtack);
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                mainPanel.neusoftsocket.UploadVmasResultRequest(vmasresult, null, out ackresult, out errormessage);
                                            }
                                            ini.INIIO.saveLogInf("东软联网信息：发送检测失败指令");
                                        }
                                        else if (mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.StopInspect(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("StopInspect\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送StopInspect指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                        }

                                        else if (mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            ini.INIIO.saveLogInf("南华联网信息：发送检测终止命令");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                        {
                                            车辆检测状态 teststate = new 车辆检测状态();
                                            teststate.JCZBH = mainPanel.stationid;
                                            teststate.LINEID = mainPanel.lineid;
                                            teststate.JYLSH = carLogin.carbj.JYLSH;
                                            teststate.JYCS = carLogin.carbj.JCCS;
                                            teststate.JCSJ = DateTime.Now;
                                            teststate.CLHP = carLogin.carbj.CLHP;
                                            teststate.HPZL = carLogin.carbj.HPZL;
                                            teststate.ZT = mainPanel.stopTest;
                                            teststate.JCFF = carLogin.carbj.JCFF;
                                            mainPanel.logininfcontrol.Save_TestState(teststate);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                        {
                                            string code, msg;
                                            mainPanel.jxinterface.stop(carLogin.jxthiscarinf.detectionId, out code, out msg);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                        {
                                            string code, msg;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                            ht.Add("jclsh", carLogin.carbj.CLID);
                                            ht.Add("hphm", carLogin.carbj.CLHP);
                                            ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                            ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                            ht.Add("jccs", carLogin.carbj.JCCS);
                                            ht.Add("ycy", carLogin.carbj.JSY);
                                            ht.Add("dly", carLogin.carbj.DLY);
                                            ht.Add("czy", carLogin.carbj.CZY);
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "ASM":
                                                    ht.Add("jcffid", "2"); break;
                                                case "VMAS":
                                                    ht.Add("jcffid", "3"); break;
                                                case "JZJS":
                                                    ht.Add("jcffid", "6"); break;
                                                case "ZYJS":
                                                    ht.Add("jcffid", "4"); break;
                                                case "SDS":
                                                    ht.Add("jcffid", "1"); break;
                                                case "LZ":
                                                    ht.Add("jcffid", "5"); break;

                                            }
                                            ht.Add("jczt", "2");
                                            ht.Add("jcbz", "3");
                                            ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                            ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                            DataTable dtinf = new DataTable();
                                            if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                            {
                                                MessageBox.Show("发送检测结束命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送检测结束命令失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                        {

                                            if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                            {
                                                mainPanel.yichangInterface.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            else 
                                            {
                                                mainPanel.yichangInterfaceOther.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            try
                                            {
                                                ini.INIIO.saveLogInf(carinidata.CarID + " sendMessage(" + carLogin.carbj.JYLSH + "," + mainPanel.zkytwebinf.regcode + ",04,)");
                                            }
                                            catch
                                            { }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                                        {
                                            string code, msg;
                                            if (!mainPanel.xbsocket.Send_TEST_STOP(carLogin.carbj.JYLSH, carLogin.carbj.JCCS, "用户主动终止", out code, out msg))
                                            {
                                                //MessageBox.Show("车辆检测开始失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送车辆检测终止失败,code" + code + ",msg:" + msg);
                                                //return;
                                            }
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                            mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                            mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                            mainPanel.opratormode.STATUS = "已中止";
                                            mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                            mainPanel.opratormode.YL1 = "";
                                            mainPanel.opratormode.YL2 = "";
                                            mainPanel.opratormode.YL3 = "";
                                            mainPanel.opratormode.YL4 = "";
                                            mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                        }
                                    }
                                    mainPanel.worklogdata.ProjectID = mainPanel.stationid + mainPanel.lineid + DateTime.Now.ToString("yyMMddHHmmss");//线号“00”代表为登录机进行的操作
                                    mainPanel.worklogdata.ProjectName = "操作日志";
                                    mainPanel.worklogdata.Stationid = mainPanel.stationid;
                                    mainPanel.worklogdata.Lineid = mainPanel.lineid;
                                    mainPanel.worklogdata.Czy = mainPanel.nowUser.userName;
                                    mainPanel.worklogdata.Data = "车辆" + carLogin.carbj.CLHP + "检测中止" + ",驾控员:" + carLogin.carbj.JSY + ",检测方法：" + carLogin.carbj.JCFF;
                                    mainPanel.worklogdata.State = "中止";
                                    mainPanel.worklogdata.Result = "";
                                    mainPanel.worklogdata.Date = DateTime.Now;
                                    mainPanel.worklogdata.Bzsm = "";
                                    mainPanel.demarcatecontrol.saveWordLogByIni(mainPanel.worklogdata);
                                }
                                else
                                {
                                    ini.INIIO.saveLogInf("检测完成，检测结果数据有效");
                                    Msg(labelStatus, panelStatus, "检测完成");
                                    mainPanel.ts1 = "检测完成";
                                    string isCsvAlive = "";
                                    string pdjg = "";
                                    ini.INIIO.saveLogInf("读取过程数据");
                                    DataTable dataseconds = csvreader.readCsv(newCsvPath);
                                    if (dataseconds != null)
                                    {
                                        ini.INIIO.saveLogInf("查询到过程数据");
                                        string fileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                        if (ini.INIIO.createDir(fileDir))
                                            File.Copy(newCsvPath, fileDir + "/" + carLogin.carbj.CLID + ".csv", true);
                                        ini.INIIO.saveLogInf("过程数据复制到位置：" + fileDir + "/" + carLogin.carbj.CLID + ".csv");
                                        //isCsvAlive = saveAsmDataSeconds(dataseconds, carLogin.carbj.CLID, carLogin.carbj.CLHP, jcsj, out fdjzs5025, out fdjzs2540, out fdjyw5025, out fdjyw2540, out yw);
                                        isCsvAlive = saveVmasDataSeconds(dataseconds, carLogin.carbj.CLID, carLogin.carbj.CLHP, jcsj);
                                        ini.INIIO.saveLogInf("过程数据保存到数据库成功");
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                                        {
                                            if (vmasResultPd(vmas_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            NeusoftUtil.UploadVmasResult vmasresult = new NeusoftUtil.UploadVmasResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = vmas_data.Wd;
                                            vmasresult.AirPressure = vmas_data.Dqy;
                                            vmasresult.Humidity = vmas_data.Sd;
                                            vmasresult.AmbientO2 = vmas_data.AmbientO2;
                                            vmasresult.ResidualHC = vmas_data.ResidualHC;
                                            vmasresult.TestTime = vmas_data.TestTime;
                                            vmasresult.AirFlowAll = vmas_data.AirFlowAll;
                                            vmasresult.CO = vmas_data.Cozl;
                                            vmasresult.HC = vmas_data.Hczl;
                                            vmasresult.NOX = vmas_data.Noxzl;
                                            vmasresult.CO2 = vmas_data.Co2;
                                            vmasresult.HCNOX = (double.Parse(vmas_data.Hczl) + double.Parse(vmas_data.Noxzl)).ToString("0.00");// vmas_data.Hcnox;
                                            vmasresult.Power = vmas_data.Power;
                                            vmasresult.StartTime = vmas_data.Starttime;
                                            vmasresult.StopReason = "0";
                                            vmasresult.Result = pdjg;
                                            vmasresult.AdjustZero = "1";
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadVmasResultRequest(vmasresult, dataseconds, out result, out inf, out dtack);
                                                if (result == "1")
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    if (vmasresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);

                                                        //mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(vmasdata.CLPH);
                                                    }
                                                    else if (vmasresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = "车辆检测不合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);
                                                        //mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(vmasdata.CLPH);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + result + "errormessage:" + inf, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                ini.INIIO.saveLogInf("东软联网信息：上传结果信息");
                                                DataTable dtresult = mainPanel.neusoftsocket.UploadVmasResultRequest(vmasresult, dataseconds, out ackresult, out errormessage);
                                                if (dtresult != null)
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    if (true)
                                                    {
                                                        vmasresult.CO = dtresult.Rows[1]["CO"].ToString();
                                                        vmasresult.HC = dtresult.Rows[1]["HC"].ToString();
                                                        vmasresult.NOX = dtresult.Rows[1]["NOx"].ToString();
                                                    }
                                                    else
                                                    {
                                                        vmasresult.CO = dtresult.Rows[1]["CO"].ToString();
                                                        vmasresult.HCNOX = dtresult.Rows[1]["HCNOx"].ToString();
                                                    }
                                                    vmasresult.Result = dtresult.Rows[1]["TestResult"].ToString();
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    if (vmasresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";// "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);

                                                        //mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(vmasdata.CLPH);
                                                    }
                                                    else if (vmasresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";//"车辆检测不合格";
                                                        if (vmasresult.Result != pdjg)
                                                        {
                                                            mainPanel.ts1 = "评判结果不一致";
                                                            MessageBox.Show("平台判定结果与本地判定不一致:" + errormessage, "提示");
                                                        }
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);
                                                        //mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(vmasdata.CLPH);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + ackresult + "errormessage:" + errormessage, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                        }
                                        else if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.JINGHUANETMODE)
                                        {
                                            
                                            if (vmasResultPd(vmas_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            isCsvAlive = "逐秒数据上传成功";

                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            //string jhtestingid = "";
                                            for (int i = 0; i < 3; i++)
                                            {
                                                if (!mainPanel.jhoracle.insertVmas(mainPanel.jhwebinf.stationid, mainPanel.jhwebinf.lineid, carLogin.carbj.CZY, carLogin.carbj.JSY, pdjg, vmasdata, carLogin.carbjJh, jcsj.ToString("yyyy-MM-dd HH:mm:ss"), jssj.ToString("yyyy-MM-dd HH:mm:ss"), beforedate, out jhtestingid))
                                                {

                                                    if (i == 2)
                                                    {
                                                        Msg(label1, panel4, "上传过程数据发生错误");
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    carLogin.carbj.ECRYPT = jhtestingid;
                                                    ini.INIIO.saveLogInf("金华联网信息：上传过程数据成功");
                                                    break;
                                                }
                                            }
                                            if (!mainPanel.jhoracle.insertVmasDataSeconds(jhtestingid, pdjg, vmasdata, carLogin.carbjJh, dataseconds))
                                            {
                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：发送EndInspectSDS指令");
                                            }
                                            if (mainPanel.jhwebinf.checkprint)
                                            {
                                                string resultno;
                                                string resultdesc;
                                                string testno;
                                                JHWebClient.checkResultModel checkmodel = new JHWebClient.checkResultModel();
                                                mainPanel.jhinterface.CheckPrintIsEffective(mainPanel.jhwebinf.serverIP, jhtestingid, out testno, out resultno, out resultdesc, out checkmodel);
                                                if (int.Parse(resultno) > 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    vmasdata.COZL = checkmodel.value01;
                                                    vmasdata.HCZL = checkmodel.value02;
                                                    vmasdata.NOXZL = checkmodel.value03;
                                                    vmasdata.COXZ = checkmodel.limit01;
                                                    if (beforedate)
                                                    {
                                                        vmasdata.HCXZ = checkmodel.limit02;
                                                        vmasdata.NOXXZ = checkmodel.limit03;
                                                        vmasdata.HCPD = (checkmodel.judge02 == "1" ? "合格" : "不合格");
                                                        vmasdata.NOXPD = (checkmodel.judge03 == "1" ? "合格" : "不合格");

                                                    }
                                                    else
                                                    {
                                                        vmasdata.HCXZ = checkmodel.limit04;
                                                        vmasdata.NOXXZ = checkmodel.limit04;
                                                        vmasdata.HCPD = (checkmodel.judge04 == "1" ? "合格" : "不合格");
                                                        vmasdata.NOXPD = (checkmodel.judge04 == "1" ? "合格" : "不合格");
                                                    }
                                                    vmasdata.COPD = (checkmodel.judge01 == "1" ? "合格" : "不合格");
                                                    if (vmasdata.HCPD == "不合格" || vmasdata.HCPD == "不合格" || vmasdata.COPD == "不合格")
                                                    {
                                                        vmasdata.ZHPD = "不合格";
                                                        pdjg = "0";
                                                    }
                                                    else
                                                    {
                                                        vmasdata.ZHPD = "合格";
                                                        pdjg = "1";

                                                    }
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印,但结果有不一致");
                                                }
                                                else if (int.Parse(resultno) == 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印");
                                                }
                                                else
                                                {
                                                    Msg(label1, panel4, "验证未通过:" + resultdesc);
                                                    mainPanel.ts2 = "验证未通过";
                                                    MessageBox.Show("验证未通过:" + resultdesc + "\r\n该车不能打印报告");
                                                    return;
                                                }
                                                vmasdata.CLID = testno;

                                            }
                                            else
                                            {
                                                vmasdata.CLID = jhtestingid;
                                            }
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("金华联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                vmasdal.Save_VMAS(vmasdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);

                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("金华联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                vmasdal.Save_VMAS(vmasdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "不合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                        {
                                            #region 中科宇图
                                            ini.INIIO.saveLogInf("中科宇图联网信息：结果判定");
                                            if (vmasResultPd(vmas_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            if (!uploadStartSuccess)
                                            {
                                                #region 上传检测开始命令
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendStart);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测开始命令，time=" + jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        {
                                                        }
                                                        ini.INIIO.saveLogInf("上传检测开始失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));

                                                        MessageBox.Show("检测开传上传失败", "错误提示");
                                                        return;
                                                    }
                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStartSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测开始成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                                }
                                                #endregion
                                            }
                                            if (!uploadHCSuccess)
                                            {
                                                #region 上传HC
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                mainPanel.webthread.bgCO = 0.0;
                                                mainPanel.webthread.bgNO =0;
                                                mainPanel.webthread.bgHC = 0;

                                                mainPanel.webthread.canliuHC = double.Parse(vmas_data.ResidualHC);
                                                mainPanel.webthread.IFlowResult = "1";
                                                mainPanel.webthread.O2Avg = 20.8;
                                                mainPanel.webthread.checkResult = "1";
                                                mainPanel.webthread.checkTimeStart = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                mainPanel.webthread.checkTimeEnd = jcsj.AddMinutes(1).ToString("yyyy-MM-dd HH:mm:ss");
                                                mainPanel.webthread.remark = "";
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendAirHC);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传HC残留，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                ini.INIIO.saveLogInf("mainPanel.yichangInterface.bgAirHC(" + carLogin.carbj.JYLSH+ ","
                                                    + mainPanel.zkytwebinf.regcode + ","
                                                    + 0.0+ ","
                                                    + 0 + ","
                                                    + 0 + ","
                                                    + 0 + ","
                                                    + "1" + ","
                                                    + "20.8" + ","
                                                    + "1" + ","
                                                    + jcsj.ToString("yyyy-MM-dd HH:mm:ss") + ","
                                                    + jcsj.AddMinutes(1).ToString("yyyy-MM-dd HH:mm:ss") + ","
                                                    + "" + ");");
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        { }
                                                        ini.INIIO.saveLogInf("上传HC残留失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));

                                                        MessageBox.Show("分析仪背景气体及HC残留上传失败", "错误提示");
                                                        return;
                                                    }

                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadHCSuccess = true;
                                                    ini.INIIO.saveLogInf("上传背景信息成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                                }
                                                #endregion
                                            }

                                            #region 上传过程数据
                                            if (dataseconds.Rows.Count > 0)
                                            {
                                                ini.INIIO.saveLogInf("过程数据记录有" + dataseconds.Rows.Count.ToString() + "数据");
                                                ini.INIIO.saveLogInf("开始上传检测过程数据，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                
                                                try
                                                {
                                                    int timecount = dataseconds.Rows.Count - 1;
                                                    DateTime vmasstarttime = DateTime.Parse(dataseconds.Rows[1]["全程时序"].ToString());
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        string sxnb = "2";
                                                        if (i <= 2)
                                                        {
                                                            sxnb = "0";
                                                        }
                                                        else if (i <= timecount - 195)
                                                        {
                                                            sxnb = "1";
                                                        }
                                                        if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                        {
                                                            mainPanel.yichangInterface.vmasLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                            vmasstarttime.AddSeconds(i - 1).ToString("yyyyMMddHHmmss"),
                                                            sxnb,
                                                            i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["HC实时值"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO2实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["NO实时值"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["分析仪O2实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["流量计O2实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["环境O2浓度"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["实际体积流量"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["标准体积流量"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["尾气实际排放流量"].ToString()), 4),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["HC排放质量"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO排放质量"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["NO排放质量"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["实时车速"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["加载功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["寄生功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["指示功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["流量计压力"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["流量计温度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["稀释修正系数"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["湿度修正系数"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["稀释比"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["发动机转速"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["标准时速"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["扭矩"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["加载功率"].ToString()), 1));
                                                            ini.INIIO.saveLogInf("[过程数据" + i + "]:" + "vmasLog(" + carLogin.carbj.JYLSH + "," +
                                                                mainPanel.zkytwebinf.regcode + "," +
                                                                vmasstarttime.AddSeconds(i - 1).ToString("yyyyMMddHHmmss") + "," +
                                                                sxnb + "," +
                                                                i.ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["HC实时值"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO实时值"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO2实时值"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["NO实时值"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["分析仪O2实时值"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["流量计O2实时值"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["环境O2浓度"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["实际体积流量"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["标准体积流量"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["尾气实际排放流量"].ToString()), 4).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["HC排放质量"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO排放质量"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["NO排放质量"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["实时车速"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["加载功率"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["寄生功率"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["指示功率"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["流量计压力"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["流量计温度"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["稀释修正系数"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["湿度修正系数"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["稀释比"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["发动机转速"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["标准时速"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["扭矩"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["加载功率"].ToString()), 1).ToString() + ")");
                                                        }
                                                        else
                                                        {
                                                            mainPanel.yichangInterfaceOther.vmasLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                            i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["HC实时值"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO2实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["NO实时值"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["分析仪O2实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["流量计O2实时值"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["环境O2浓度"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["实际体积流量"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["标准体积流量"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["尾气实际排放流量"].ToString()), 4),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["HC排放质量"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO排放质量"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["NO排放质量"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["实时车速"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["加载功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["寄生功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["指示功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["流量计压力"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["流量计温度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["稀释修正系数"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["湿度修正系数"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["稀释比"].ToString()), 3));
                                                            ini.INIIO.saveLogInf("[过程数据" + i + "]:" + "vmasLog(" + carLogin.carbj.JYLSH + "," +
                                                                mainPanel.zkytwebinf.regcode + "," +
                                                                i.ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["HC实时值"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO实时值"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO2实时值"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["NO实时值"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["分析仪O2实时值"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["流量计O2实时值"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["环境O2浓度"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["实际体积流量"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["标准体积流量"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["尾气实际排放流量"].ToString()), 4).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["HC排放质量"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO排放质量"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["NO排放质量"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["实时车速"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["加载功率"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["寄生功率"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["指示功率"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["流量计压力"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["流量计温度"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["稀释修正系数"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["湿度修正系数"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["稀释比"].ToString()), 3).ToString()  + ")");
                                                        }
                                                        Thread.Sleep(10);
                                                    }
                                                    uploadProcessSuccess = true;
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    ini.INIIO.saveLogInf("上传检测过程数据完毕，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                }
                                                catch (Exception er)
                                                {
                                                    MessageBox.Show("上传过程数据失败\r\n" + "异常：" + er.Message);
                                                    Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                    return;
                                                }
                                            }
                                            #endregion
                                            #region 上传检测结束
                                            try
                                            {
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendFinish);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测结束命令，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        { }
                                                        ini.INIIO.saveLogInf("上传检测结束失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        MessageBox.Show("上传检测结束指令失败");
                                                        Msg(label1, panel4, "上传检测结束指令失败");
                                                        return;
                                                    }

                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStopSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测结束成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测结束指令异常:" + er.Message);
                                                //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                Msg(label1, panel4, "上传检测结束指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 上传检测结果
                                            try
                                            {
                                                ini.INIIO.saveLogInf("开始上传数据");
                                                string result, info;
                                                ini.INIIO.saveLogInf("开始上传检测结果命令，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                {
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.yichangInterface.vmasData(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                double.Parse(vmas_data.Cozl), double.Parse(vmas_data.Hczl), double.Parse(vmas_data.Noxzl), double.Parse(vmas_data.Power),
                                                double.Parse(vmas_data.sjxslc), double.Parse(vmas_data.Wd), double.Parse(vmas_data.Sd),
                                                double.Parse(vmas_data.Dqy), jcsj.ToString("yyyy-MM-dd HH:mm:ss"), jssj.ToString("yyyy-MM-dd HH:mm:ss")), out result, out info);
                                                }
                                                else
                                                {
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.yichangInterfaceOther.vmasData(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                   double.Parse(vmas_data.Cozl), double.Parse(vmas_data.Hczl), double.Parse(vmas_data.Noxzl), double.Parse(vmas_data.Power),
                                                   double.Parse(vmas_data.sjxslc), double.Parse(vmas_data.Wd), double.Parse(vmas_data.Sd),
                                                   double.Parse(vmas_data.Dqy), jcsj.ToString("yyyy-MM-dd HH:mm:ss"), jssj.ToString("yyyy-MM-dd HH:mm:ss")), out result, out info);
                                                }
                                                ini.INIIO.saveLogInf(carinidata.CarID + " vmasData(" + carLogin.carbj.JYLSH + "," + mainPanel.zkytwebinf.regcode +
                                                    "," + vmas_data.Cozl + "," + vmas_data.Hczl + "," + vmas_data.Noxzl + "," + vmas_data.Power + ","
                                                    + vmas_data.sjxslc + "," + vmas_data.Wd + "," + vmas_data.Sd + "," + vmas_data.Dqy + ","
                                                    + jcsj.ToString("yyyy-MM-dd HH:mm:ss") + "," + jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                                ini.INIIO.saveLogInf("成功上传检测结果命令，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                if (result == "0")
                                                {
                                                    ini.INIIO.saveLogInf("上传检测结果指令失败:" + info);
                                                    Msg(label1, panel4, "上传检测结果指令失败:" + info);
                                                    MessageBox.Show(info);
                                                    return;
                                                }

                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测结果指令异常:" + er.Message);
                                                //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                Msg(label1, panel4, "上传检测结果指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 读取平台判定结果   
                                            if (mainPanel.zkytwebinf.displayCheckResult)
                                                try
                                            {
                                                string result, info;
                                                string zkytvmasbefore;
                                                string valueCO = ""; string valueHC = ""; string valueNO = ""; string valueHCNO = ""; string valueCOLimit = ""; string valueHCLimit = ""; string valueNOLimit = "";
                                                string valueHCNOLimit = ""; string valueCOResult = ""; string valueHCResult = ""; string valueNOResult = ""; string valueHCNOResult = ""; string result1 = "";

                                                if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                {
                                                    mainPanel.xmlanalysis.ReadVmasCheckResultString(mainPanel.yichangInterface.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                    out valueCO, out valueHC, out valueNO, out valueHCNO, out valueCOLimit, out valueHCLimit, out valueNOLimit, out valueHCNOLimit, out valueCOResult, out valueHCResult, out valueNOResult, out valueHCNOResult, out result1, out zkytvmasbefore);
                                                }
                                                else
                                                {
                                                    mainPanel.xmlanalysis.ReadVmasCheckResultString(mainPanel.yichangInterfaceOther.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                       out valueCO, out valueHC, out valueNO, out valueHCNO, out valueCOLimit, out valueHCLimit, out valueNOLimit, out valueHCNOLimit, out valueCOResult, out valueHCResult, out valueNOResult, out valueHCNOResult, out result1, out zkytvmasbefore);
                                                }
                                                if (result == "1")
                                                {
                                                    vmasdata.BEFORE = zkytvmasbefore;
                                                    vmasdata.COXZ = valueCOLimit;
                                                    vmasdata.COPD = valueCOResult;
                                                    vmasdata.HCPD = valueHCResult;
                                                    if (zkytvmasbefore == "Y")
                                                    {
                                                        vmasdata.HCXZ = valueHCLimit;
                                                        vmasdata.NOXXZ = valueNOLimit;
                                                        vmasdata.HCPD = valueHCResult;
                                                        vmasdata.NOXPD = valueNOResult;
                                                    }
                                                    else
                                                    {
                                                        vmasdata.HCXZ = valueHCNOLimit;
                                                        vmasdata.NOXXZ = valueHCNOLimit;
                                                        vmasdata.HCPD = valueHCNOResult;
                                                        vmasdata.NOXPD = valueHCNOResult;
                                                    }
                                                    vmasdata.ZHPD = result1;
                                                }
                                                else
                                                {
                                                    ini.INIIO.saveLogInf("读取平台结果指令失败:" + info);
                                                    Msg(label1, panel4, "读取平台结果指令失败:" + info);
                                                    MessageBox.Show(info);
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("读取平台结果指令异常:" + er.Message);
                                                Msg(label1, panel4, "读取平台结果指令异常:" + er.Message);
                                                MessageBox.Show("读取平台结果指令异常:" + er.Message);
                                                return;
                                            }                                         
                                            #endregion
                                            #region 显示结果
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (vmasdata.ZHPD == "合格")
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult ? "车辆检测合格" : "车辆检测完毕";
                                                ini.INIIO.saveLogInf("联网信息：接收到平台判定结果合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);

                                                //mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(vmasdata.CLPH);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕";
                                                ini.INIIO.saveLogInf("联网信息：接收到平台判定结果不合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                                //mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(vmasdata.CLPH);
                                            }
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                            #endregion
                                        }
                                        else
                                        {
                                            ini.INIIO.saveLogInf("判定检测结果");
                                            if (vmasResultPd(vmas_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("检测结果：合格");
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE||mainPanel.NetMode==mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测合格," + isCsvAlive);

                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("检测结果：不合格");
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测不合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测不合格," + isCsvAlive);
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                            }
                                            ini.INIIO.saveLogInf("保存VMAS检测结果到数据库");
                                            vmasdal.Save_VMAS(vmasdata);
                                            ini.INIIO.saveLogInf("保存VMAS检测结果到数据库成功");
                                            if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ACNETMODE)
                                            {
                                                ini.INIIO.saveLogInf("保存VMAS检测结果到安车平台");
                                                Thread.Sleep(1000);
                                                if (!saveVmasResult2Net())
                                                {
                                                    Thread.Sleep(1000);
                                                    if (!saveVmasResult2Net())
                                                    {
                                                        MessageBox.Show("结果数据上传安车服务器失败", "错误提示");
                                                        ini.INIIO.saveLogInf("安车联网信息：结果数据上传服务器失败");
                                                        return;
                                                    }
                                                }
                                                ini.INIIO.saveLogInf("保存VMAS检测结果到安车平台成功");
                                            }
                                            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
                                            {
                                                车辆检测状态 teststate = new 车辆检测状态();
                                                teststate.JCZBH = mainPanel.stationid;
                                                teststate.LINEID = mainPanel.lineid;
                                                teststate.JYLSH = carLogin.carbj.JYLSH;
                                                teststate.JYCS = carLogin.carbj.JCCS;
                                                teststate.JCSJ = DateTime.Now;
                                                teststate.CLHP = carLogin.carbj.CLHP;
                                                teststate.HPZL = carLogin.carbj.HPZL;
                                                teststate.ZT = mainPanel.finishTest;
                                                teststate.JCFF = carLogin.carbj.JCFF;
                                                mainPanel.logininfcontrol.Save_TestState(teststate);
                                            }
                                            else if (mainPanel.isNetUsed&&mainPanel.NetMode == mainPanel.JXNETMODE)
                                            {
                                                string code, msg;
                                                
                                                int startindex = 1;
                                                if (dataseconds.Rows.Count > 195) startindex = dataseconds.Rows.Count - 195;
                                                for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                {
                                                    DataRow dr = dataseconds.Rows[i];
                                                    jxVmasProcessData processdata = new jxVmasProcessData(
                                                        dr["全程时序"].ToString(),
                                                        
                                                        (i>=startindex)?"2":"1",
                                                        i.ToString(),
                                                        dr["发动机转速"].ToString(),
                                                         dr["HC实时值"].ToString(),
                                                         dr["CO实时值"].ToString(),
                                                         dr["CO2实时值"].ToString(),
                                                         dr["NO实时值"].ToString(),
                                                         dr["环境O2浓度"].ToString(),
                                                         dr["分析仪O2实时值"].ToString(),
                                                         dr["流量计O2实时值"].ToString(),
                                                         dr["HC排放质量"].ToString(),
                                                         dr["CO排放质量"].ToString(),
                                                         dr["NO排放质量"].ToString(),
                                                         dr["标准时速"].ToString(),
                                                         dr["实时车速"].ToString(),
                                                         dr["扭矩"].ToString(),
                                                         dr["加载功率"].ToString(),
                                                         dr["环境温度"].ToString(),
                                                         dr["相对湿度"].ToString(),
                                                         dr["大气压力"].ToString(),
                                                         dr["流量计温度"].ToString(),
                                                         dr["流量计压力"].ToString(),
                                                         dr["实际体积流量"].ToString(),
                                                         dr["标准体积流量"].ToString(),
                                                         dr["湿度修正系数"].ToString(),
                                                         dr["稀释修正系数"].ToString(),
                                                         dr["稀释比"].ToString(),
                                                         dr["分析仪管路压力"].ToString(),
                                                         dr["尾气实际排放流量"].ToString()
                                                         );
                                                    if (!mainPanel.jxinterface.sendSimpleTransientProcessData(carLogin.carbj.CLID, processdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("sendSimpleTransientProcessData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：sendSimpleTransientProcessData上传服务器失败");
                                                        return;
                                                    }
                                                }
                                                jxVmasResultData resultdata = new jxVmasResultData(
                                                    vmasdata.CLID,
                                                    vmasdata.WD,
                                                    vmasdata.DQY,
                                                    vmasdata.SD,
                                                    vmasdata.BEFORE=="Y"?vmasdata.HCXZ:"",
                                                    vmasdata.COXZ,
                                                    vmasdata.BEFORE == "Y" ? vmasdata.NOXXZ : "",
                                                    vmasdata.BEFORE == "N" ? vmasdata.HCXZ : "",
                                                    vmasdata.HCZL,
                                                    vmasdata.COZL,
                                                    vmasdata.NOXZL,
                                                    Math.Round(double.Parse(vmasdata.HCZL)+double.Parse(vmasdata.NOXZL),2).ToString("0.00"),
                                                    vmasdata.BEFORE == "Y" ? (vmasdata.HCPD == "不合格" ? "0" : "1"):"",
                                                    vmasdata.COPD == "不合格" ? "0" : "1",
                                                    vmasdata.BEFORE == "Y" ? (vmasdata.NOXPD == "不合格" ? "0" : "1"):"",
                                                    vmasdata.BEFORE == "N" ? (vmasdata.HCPD == "不合格" ? "0" : "1"):"",
                                                    jcsj.ToString("yyyy-MM-dd HH:mm:ss"),
                                                    jssj.ToString("yyyy-MM-dd HH:mm:ss")
                                                    );
                                                if (!mainPanel.jxinterface.sendSimpleTransientResultData(carLogin.carbj.CLID, resultdata, out code, out msg))
                                                {
                                                    MessageBox.Show("sendSimpleTransientResultData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                    ini.INIIO.saveLogInf("江西联网信息：sendSimpleTransientResultData上传服务器失败");
                                                    return;
                                                }
                                                if (!mainPanel.jxinterface.finish(carLogin.carbj.CLID, out code, out msg))
                                                {
                                                    MessageBox.Show("finish上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                    ini.INIIO.saveLogInf("江西联网信息：finish上传服务器失败");
                                                    return;
                                                }
                                                Msg(label1, panel4,"车辆检测"+vmasdata.ZHPD+ ",上传完毕");
                                            }
                                            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                                            {
                                                string code, msg;
                                                string hjo2="";
                                                List<string> colist = new List<string>();
                                                List<string> hclist = new List<string>();
                                                List<string> nolist = new List<string>();
                                                List<string> co2list = new List<string>();
                                                List<string> o2list = new List<string>();
                                                List<string> xso2list = new List<string>();
                                                List<string> xsblist = new List<string>();
                                                List<string> sjlllist = new List<string>();
                                                List<string> bzlllist = new List<string>();
                                                List<string> cslist = new List<string>();
                                                List<string> nllist = new List<string>();
                                                List<string> gllist = new List<string>();
                                                List<string> jsgllist = new List<string>();
                                                List<string> ltmclist = new List<string>();
                                                List<string> mngllist = new List<string>();
                                                List<string> zslist = new List<string>();
                                                List<string> wdlist = new List<string>();
                                                List<string> sdlist = new List<string>();
                                                List<string> dqylist = new List<string>();
                                                List<string> dflist = new List<string>();
                                                List<string> khlist = new List<string>();
                                                List<string> lljwdlist = new List<string>();
                                                List<string> lljdqylist = new List<string>();
                                                List<string> hczllist = new List<string>();
                                                List<string> cozllist = new List<string>();
                                                List<string> nozllist = new List<string>();


                                                try
                                                {
                                                    int startindex = 1;
                                                    if (dataseconds.Rows.Count > 195) startindex = dataseconds.Rows.Count - 195;
                                                    for (int i = startindex; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        carinfo.XB_VMAS_PROCESS_DATA data = new carinfo.XB_VMAS_PROCESS_DATA();
                                                        data.JCFFBH = carLogin.carbj.JCFF;
                                                        data.JCLSH = carLogin.carbj.JYLSH;
                                                        data.SJXL = (i - startindex + 1).ToString();
                                                        if (i - startindex + 1 <= 28) data.State = "1";
                                                        else if(i - startindex + 1 <= 96) data.State = "2";
                                                        else data.State = "3";
                                                        data.HC = dr["HC实时值"].ToString();
                                                        data.CO = dr["CO实时值"].ToString();
                                                        data.NO = dr["NO实时值"].ToString();
                                                        data.O2 = dr["分析仪O2实时值"].ToString();
                                                        data.CO2 = dr["CO2实时值"].ToString();
                                                        data.Rpm = dr["发动机转速"].ToString();
                                                        data.JYWD = dr["流量计温度"].ToString();
                                                        data.Speed = dr["实时车速"].ToString();
                                                        data.Force = dr["扭矩"].ToString();
                                                        data.Power = dr["加载功率"].ToString();
                                                        data.IHP = dr["指示功率"].ToString();
                                                        data.PLHP = dr["寄生功率"].ToString();
                                                        data.LTMCLP = "0";
                                                        data.WD = dr["环境温度"].ToString();
                                                        data.SD = dr["相对湿度"].ToString();
                                                        data.DQY = dr["大气压力"].ToString();
                                                        data.KH = dr["湿度修正系数"].ToString();
                                                        data.DF = dr["稀释修正系数"].ToString();
                                                        data.LLO2 = dr["流量计O2实时值"].ToString();
                                                        data.BJO2 = dr["环境O2浓度"].ToString();
                                                        if (i == startindex) hjo2 = data.BJO2;
                                                        data.XSB = dr["稀释比"].ToString();
                                                        data.LLJWD = dr["流量计温度"].ToString();
                                                        data.LLJDQY = dr["流量计压力"].ToString();
                                                        data.LL = dr["实际体积流量"].ToString();
                                                        data.BZLL = dr["标准体积流量"].ToString();
                                                        data.HCZL = dr["HC排放质量"].ToString();
                                                        data.COZL = dr["CO排放质量"].ToString();
                                                        data.NOZL = dr["NO排放质量"].ToString();
                                                        colist.Add(data.CO);
                                                        hclist.Add(data.HC);
                                                        nolist.Add(data.NO);
                                                        co2list.Add(data.CO2);
                                                        o2list.Add(data.O2);
                                                        xso2list.Add(data.LLO2);
                                                        xsblist.Add(data.XSB);
                                                        sjlllist.Add(data.LL);
                                                        bzlllist.Add(data.BZLL);
                                                        cslist.Add(data.Speed);
                                                        nllist.Add(data.Force);
                                                        gllist.Add(data.Power);
                                                        jsgllist.Add(data.PLHP);
                                                        ltmclist.Add(data.LTMCLP);
                                                        mngllist.Add(data.IHP);
                                                        zslist.Add(data.Rpm);
                                                        wdlist.Add(data.WD);
                                                        sdlist.Add(data.SD);
                                                        dqylist.Add(data.DQY);
                                                        dflist.Add(data.DF);
                                                        khlist.Add(data.KH);
                                                        lljwdlist.Add(data.LLJWD);
                                                        lljdqylist.Add(data.LLJDQY);
                                                        hczllist.Add(data.HCZL);
                                                        cozllist.Add(data.COZL);
                                                        nozllist.Add(data.NOZL);

                                                        if (!mainPanel.xbsocket.Send_VMAS_PROCESS_DATA(data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送过程数据[" + i.ToString() + "]命令失败,code" + code + ",msg:" + msg);
                                                        }
                                                    }
                                                }
                                                catch (Exception er)
                                                {
                                                    MessageBox.Show("发送过程数据命令发生异常:" + er.Message);
                                                    return;
                                                }
                                                try
                                                {
                                                    carinfo.XB_RESULT_PUBLIC_DATA pdata = new carinfo.XB_RESULT_PUBLIC_DATA();
                                                    carinfo.XB_VMAS_RESULT_DATA data = new carinfo.XB_VMAS_RESULT_DATA();
                                                    pdata.JCFFBH = carLogin.carbj.JCFF;
                                                    pdata.JCLSH = carLogin.carbj.JYLSH;
                                                    pdata.DLY = carLogin.carbj.DLY;
                                                    pdata.YCY = carLogin.carbj.JSY;
                                                    pdata.JCY = carLogin.carbj.CZY;
                                                    pdata.WD = vmasdata.WD;
                                                    pdata.SD = vmasdata.SD;
                                                    pdata.DQY = vmasdata.DQY;
                                                    data.VmasCO = vmasdata.COZL;
                                                    data.VmasHC = vmasdata.HCZL;
                                                    data.VmasNO = vmasdata.NOXZL;
                                                    data.TestKilomter = vmasdata.XSLC;
                                                    data.CurveCount = "195";
                                                    data.BJO2 =hjo2;
                                                    data.COCurve = string.Join(",", colist);
                                                    data.HCCurve = string.Join(",", hclist);
                                                    data.NOCurve = string.Join(",", nolist);
                                                    data.CO2Curve = string.Join(",", colist);
                                                    data.YSO2Curve = string.Join(",", o2list);
                                                    data.XSO2Curve = string.Join(",", xso2list);
                                                    data.XSBCurve = string.Join(",", xsblist);
                                                    data.LLCurve = string.Join(",", sjlllist);
                                                    data.BZLLCurve = string.Join(",", bzlllist);
                                                    data.SpeedCurve = string.Join(",", cslist);
                                                    data.ForceCurve = string.Join(",", nllist);
                                                    data.PowerCurve = string.Join(",", gllist);
                                                    data.PLHPCurve = string.Join(",", jsgllist);
                                                    data.LTMCLPCurve = string.Join(",", ltmclist);
                                                    data.DIWLPCurve = string.Join(",", mngllist);
                                                    data.RpmCurve = string.Join(",", zslist);
                                                    data.WDCurve = string.Join(",", wdlist);
                                                    data.SDCurve = string.Join(",", sdlist);
                                                    data.DQYCurve = string.Join(",", dqylist);
                                                    data.DFCCurve = string.Join(",", dflist);
                                                    data.KHCurve = string.Join(",", khlist);
                                                    data.LLJWDCurve = string.Join(",", lljwdlist);
                                                    data.LLJDQYCurve = string.Join(",", lljdqylist);
                                                    data.HCZLCurve = string.Join(",", hczllist);
                                                    data.COZLCurve = string.Join(",", cozllist);
                                                    data.NOZLCurve = string.Join(",", nozllist);
                                                    
                                                    if (!mainPanel.xbsocket.Send_TEST_RESULT_DATA(pdata, data, out code, out msg))
                                                    {
                                                        ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                        MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                }
                                                catch (Exception er)
                                                {
                                                    MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                    return;
                                                }
                                                jxVmasResultData resultdata = new jxVmasResultData(
                                                    vmasdata.CLID,
                                                    vmasdata.WD,
                                                    vmasdata.DQY,
                                                    vmasdata.SD,
                                                    vmasdata.BEFORE == "Y" ? vmasdata.HCXZ : "",
                                                    vmasdata.COXZ,
                                                    vmasdata.BEFORE == "Y" ? vmasdata.NOXXZ : "",
                                                    vmasdata.BEFORE == "N" ? vmasdata.HCXZ : "",
                                                    vmasdata.HCZL,
                                                    vmasdata.COZL,
                                                    vmasdata.NOXZL,
                                                    Math.Round(double.Parse(vmasdata.HCZL) + double.Parse(vmasdata.NOXZL), 2).ToString("0.00"),
                                                    vmasdata.BEFORE == "Y" ? (vmasdata.HCPD == "不合格" ? "0" : "1") : "",
                                                    vmasdata.COPD == "不合格" ? "0" : "1",
                                                    vmasdata.BEFORE == "Y" ? (vmasdata.NOXPD == "不合格" ? "0" : "1") : "",
                                                    vmasdata.BEFORE == "N" ? (vmasdata.HCPD == "不合格" ? "0" : "1") : "",
                                                    jcsj.ToString("yyyy-MM-dd HH:mm:ss"),
                                                    jssj.ToString("yyyy-MM-dd HH:mm:ss")
                                                    );
                                                if (!mainPanel.jxinterface.sendSimpleTransientResultData(carLogin.carbj.CLID, resultdata, out code, out msg))
                                                {
                                                    MessageBox.Show("sendSimpleTransientResultData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                    ini.INIIO.saveLogInf("江西联网信息：sendSimpleTransientResultData上传服务器失败");
                                                    return;
                                                }
                                                if (!mainPanel.jxinterface.finish(carLogin.carbj.CLID, out code, out msg))
                                                {
                                                    MessageBox.Show("finish上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                    ini.INIIO.saveLogInf("江西联网信息：finish上传服务器失败");
                                                    return;
                                                }
                                                Msg(label1, panel4, "车辆检测" + vmasdata.ZHPD + ",上传完毕");
                                            }
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(vmasdata.CLPH);
                                            }
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                                autoPrint(carLogin.carbj.CLID);
                                        }
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("逐秒数据读取失败");
                                        isCsvAlive = "逐秒数据读取失败";
                                        Msg(label1, panel4, "未找到过程数据，检测无效");
                                    }
                                }
                                File.Delete(newPath);
                                break;
                            #endregion
                            case "JZJS":
                                #region 加载减速
                                ini.INIIO.WritePrivateProfileString("测功机上次运转时间", "时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), @".\detectConfig.ini");

                                jzjs_data = jzjsdatacontrol.readJzjsData(newPath);
                                if (jzjs_data.Lbgl == "-1")
                                {
                                    #region 检测终止
                                    Msg(label1, panel4, "设备未完成检测退出,无检测结果数据");
                                    mainPanel.ts1 = "设备未完成检测退出";
                                    mainPanel.ts2 = "无检测结果数据";
                                    Msg(labelStatus, panelStatus, "故障");
                                    if (mainPanel.isNetUsed)
                                    {
                                        if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                        {
                                            carinfor.equipmentStatus equipmentcontrol = new carinfor.equipmentStatus();
                                            equipmentcontrol.JCBGBH = jcbgbh;
                                            equipmentcontrol.JCGWH = mainPanel.lineid;
                                            equipmentcontrol.SJXL = "0";
                                            equipmentcontrol.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            equipmentcontrol.writeEquipmentStatus('F');
                                            ini.INIIO.saveLogInf("安车联网信息：发送检测失败指令");
                                        }
                                        if (mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                                        {
                                            NeusoftUtil.UploadDieselResult vmasresult = new NeusoftUtil.UploadDieselResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = "";
                                            vmasresult.AirPressure = "";
                                            vmasresult.Humidity = "";
                                            vmasresult.MaxPower = "";
                                            vmasresult.K100 = "";
                                            vmasresult.K90 = "";
                                            vmasresult.K80 = "";
                                            vmasresult.Rev100 = "";
                                            vmasresult.StartTime = "";
                                            vmasresult.StopReason = "9";
                                            vmasresult.Result = "2";
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadDieselResultRequest(vmasresult, null, out result, out inf, out dtack);
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                mainPanel.neusoftsocket.UploadDieselResultRequest(vmasresult, null, out ackresult, out errormessage);
                                            }
                                            ini.INIIO.saveLogInf("东软联网信息：发送检测失败指令");
                                        }
                                        else if (mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.StopInspect(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("StopInspect\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送StopInspect指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            ini.INIIO.saveLogInf("南华联网信息：发送检测终止命令");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                        {
                                            车辆检测状态 teststate = new 车辆检测状态();
                                            teststate.JCZBH = mainPanel.stationid;
                                            teststate.LINEID = mainPanel.lineid;
                                            teststate.JYLSH = carLogin.carbj.JYLSH;
                                            teststate.JYCS = carLogin.carbj.JCCS;
                                            teststate.JCSJ = DateTime.Now;
                                            teststate.CLHP = carLogin.carbj.CLHP;
                                            teststate.HPZL = carLogin.carbj.HPZL;
                                            teststate.ZT = mainPanel.stopTest;
                                            teststate.JCFF = carLogin.carbj.JCFF;
                                            mainPanel.logininfcontrol.Save_TestState(teststate);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                        {
                                            string code, msg;
                                            mainPanel.jxinterface.stop(carLogin.jxthiscarinf.detectionId, out code, out msg);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                        {
                                            string code, msg;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                            ht.Add("jclsh", carLogin.carbj.CLID);
                                            ht.Add("hphm", carLogin.carbj.CLHP);
                                            ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                            ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                            ht.Add("jccs", carLogin.carbj.JCCS);
                                            ht.Add("ycy", carLogin.carbj.JSY);
                                            ht.Add("dly", carLogin.carbj.DLY);
                                            ht.Add("czy", carLogin.carbj.CZY);
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "ASM":
                                                    ht.Add("jcffid", "2"); break;
                                                case "VMAS":
                                                    ht.Add("jcffid", "3"); break;
                                                case "JZJS":
                                                    ht.Add("jcffid", "6"); break;
                                                case "ZYJS":
                                                    ht.Add("jcffid", "4"); break;
                                                case "SDS":
                                                    ht.Add("jcffid", "1"); break;
                                                case "LZ":
                                                    ht.Add("jcffid", "5"); break;

                                            }
                                            ht.Add("jczt", "2");
                                            ht.Add("jcbz", "3");
                                            ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                            ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                            DataTable dtinf = new DataTable();
                                            if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                            {
                                                MessageBox.Show("发送开始检测命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送开始检测命令失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                        {
                                            if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                            {
                                                mainPanel.yichangInterface.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            else if(mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                            {
                                                mainPanel.yichangInterfaceOther.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                            {
                                                mainPanel.yichangInterfaceYnbs.xxtz(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            try
                                            {
                                                ini.INIIO.saveLogInf(carinidata.CarID + " sendMessage(" + carLogin.carbj.JYLSH + "," + mainPanel.zkytwebinf.regcode + ",04,)");
                                            }
                                            catch
                                            { }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                                        {
                                            string code, msg;
                                            if (!mainPanel.xbsocket.Send_TEST_STOP(carLogin.carbj.JYLSH, carLogin.carbj.JCCS, "用户主动终止", out code, out msg))
                                            {
                                                //MessageBox.Show("车辆检测开始失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送车辆检测终止失败,code" + code + ",msg:" + msg);
                                                //return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                        {
                                            string result;
                                            string errmsg = "";
                                            DataTable dt = new DataTable();
                                            Hashtable ht2 = new Hashtable();
                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("linecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            if (!mainPanel.gxinterface.finishTest(ht2, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测失败,code=" + result + ",msg=" + errmsg);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测成功");
                                            }
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                            mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                            mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                            mainPanel.opratormode.STATUS = "已中止";
                                            mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                            mainPanel.opratormode.YL1 = "";
                                            mainPanel.opratormode.YL2 = "";
                                            mainPanel.opratormode.YL3 = "";
                                            mainPanel.opratormode.YL4 = "";
                                            mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                        }
                                    }
                                    mainPanel.worklogdata.ProjectID = mainPanel.stationid + mainPanel.lineid + DateTime.Now.ToString("yyMMddHHmmss");//线号“00”代表为登录机进行的操作
                                    mainPanel.worklogdata.ProjectName = "操作日志";
                                    mainPanel.worklogdata.Stationid = mainPanel.stationid;
                                    mainPanel.worklogdata.Lineid = mainPanel.lineid;
                                    mainPanel.worklogdata.Czy = mainPanel.nowUser.userName;
                                    mainPanel.worklogdata.Data = "车辆" + carLogin.carbj.CLHP + "检测中止" + ",驾控员:" + carLogin.carbj.JSY + ",检测方法：" + carLogin.carbj.JCFF;
                                    mainPanel.worklogdata.State = "中止";
                                    mainPanel.worklogdata.Result = "";
                                    mainPanel.worklogdata.Date = DateTime.Now;
                                    mainPanel.worklogdata.Bzsm = "";
                                    mainPanel.demarcatecontrol.saveWordLogByIni(mainPanel.worklogdata);
                                    #endregion
                                }
                                else
                                {
                                    #region 检测有效
                                    Msg(labelStatus, panelStatus, "检测完成");
                                    mainPanel.ts1 = "检测完成";
                                    double fdjyw = 0;
                                    string pdjg = "";
                                    string isCsvAlive = "";
                                    DataTable dataseconds = csvreader.readCsv(newCsvPath);
                                    if (dataseconds != null)
                                    {
                                        ini.INIIO.saveLogInf("查询到过程数据");
                                        string fileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                        if (ini.INIIO.createDir(fileDir))
                                            File.Copy(newCsvPath, fileDir + "/" + carLogin.carbj.CLID + ".csv", true);
                                        ini.INIIO.saveLogInf("过程数据复制到位置：" + fileDir + "/" + carLogin.carbj.CLID + ".csv");
                                        isCsvAlive = saveJzjsDataSeconds(dataseconds, carLogin.carbj.CLID, carLogin.carbj.CLHP, jcsj, out fdjyw);
                                        ini.INIIO.saveLogInf("过程数据保存到数据库成功");
                                        jzjsdata.YW = fdjyw.ToString("0.0");
                                        jzjsdata.JCBGBH = jcbgbh;
                                        jzjsdata.SHY = mainPanel.shy;
                                        jzjsdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                        jzjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                        jzjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                        {
                                            #region 大理联网时上传报告单基本信息并获取分配的检测报告编号
                                            string code, msg;
                                            string reportID;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "VMAS": ht.Add("检测类别", "1"); break;
                                                case "ASM": ht.Add("检测类别", "2"); break;
                                                case "SDS": ht.Add("检测类别", "3"); break;
                                                case "JZJS": ht.Add("检测类别", "4"); break;
                                                case "ZYJS": ht.Add("检测类别", "5"); break;
                                                case "LZ": ht.Add("检测类别", "6"); break;
                                            }
                                            ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                            ht.Add("检测站编号", mainPanel.stationid);
                                            ht.Add("检测工位号", mainPanel.daliwebinf.LINEID);
                                            ht.Add("检测日期", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("录入员", carLogin.carbj.DLY);
                                            ht.Add("操作员", carLogin.carbj.CZY);
                                            ht.Add("引车员", carLogin.carbj.JSY);
                                            ht.Add("检测开始日期", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("检测结束日期", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车牌号码", carLogin.carbj.CLHP);
                                            ht.Add("车牌颜色", carLogin.carbj.CPYS);
                                            ht.Add("车辆种类", carLogin.modelbj.CLZL);
                                            ht.Add("车辆类型", carLogin.modelbj.CLLX);
                                            ht.Add("车主类别", carLogin.modelbj.OBD);
                                            ht.Add("车主身份证号码", carLogin.modelbj.JSSZK);
                                            ht.Add("车主名称", carLogin.modelbj.CZ);
                                            ht.Add("联系地址", carLogin.modelbj.CZDZ);
                                            ht.Add("联系电话", carLogin.modelbj.LXDH);
                                            ht.Add("厂牌型号", carLogin.modelbj.PP);
                                            ht.Add("车辆品牌", carLogin.modelbj.PP);
                                            ht.Add("车辆型号", carLogin.modelbj.XH);
                                            ht.Add("使用性质", carLogin.modelbj.SYXZ);
                                            ht.Add("车辆营运性质", carLogin.modelbj.SFSRL);
                                            ht.Add("车辆运载种类", carLogin.modelbj.DLSP);
                                            ht.Add("车辆生产日期", carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车辆识别码", carLogin.modelbj.CLSBM);
                                            ht.Add("生产企业", carLogin.modelbj.SCQY);
                                            ht.Add("最大总质量", carLogin.modelbj.ZZL);
                                            ht.Add("基准质量", carLogin.modelbj.JZZL);
                                            ht.Add("初次登记日期", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("单车轴重", carLogin.modelbj.HDZZL);
                                            ht.Add("底盘型号", carLogin.modelbj.DKGYYB);

                                            ht.Add("驱动方式", carLogin.modelbj.QDXS);
                                            ht.Add("驱动轮胎气压", carLogin.modelbj.QDLTQY);
                                            ht.Add("变速器型式", carLogin.modelbj.BSQXS);
                                            ht.Add("档位数", carLogin.modelbj.DWS);
                                            ht.Add("发动机型号", carLogin.modelbj.FDJXH);
                                            ht.Add("发动机编号", carLogin.modelbj.FDJHM);
                                            ht.Add("发动机生产企业", carLogin.modelbj.FDJSCQY);
                                            ht.Add("汽缸数", carLogin.modelbj.QGS);
                                            ht.Add("发动机排量", carLogin.modelbj.FDJPL);
                                            ht.Add("供油方式", carLogin.modelbj.GYFS);
                                            ht.Add("燃油类型", carLogin.modelbj.RLZL);
                                            ht.Add("进气方式", carLogin.modelbj.JQFS);
                                            ht.Add("催化转化器", carLogin.modelbj.JHZZ);
                                            ht.Add("供油系统类型", carLogin.modelbj.DPFS);
                                            ht.Add("排气处理装置", carLogin.modelbj.JHZZ);
                                            ht.Add("燃油标号", carLogin.modelbj.RYPH);
                                            ht.Add("累计行驶里程", carLogin.carbj.XSLC);
                                            ht.Add("检测状态", carLogin.carbj.JCCS == "1" ? "初检" : "复检");
                                            ht.Add("检测次数", carLogin.carbj.JCCS);
                                            ht.Add("转入标志", carLogin.modelbj.SFWDZR);
                                            ht.Add("延期报废", carLogin.modelbj.SFYQBF);
                                            ht.Add("设计乘员数", carLogin.modelbj.HDZK);
                                            ht.Add("检测系统名称", mainPanel.equipmodel.SBMC);
                                            ht.Add("检测设备认证编码", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("检测系统型号", mainPanel.equipmodel.SBXH);
                                            ht.Add("检测系统编号", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("底盘测功机名称", mainPanel.equipmodel.CGJXH);
                                            ht.Add("气体分析仪名称", mainPanel.equipmodel.YDJXH);
                                            ht.Add("所属区域", carLogin.modelbj.SSXQ);
                                            ht.Add("是否路检", "否");
                                            ht.Add("生产地", carLogin.modelbj.HPZL);
                                            ht.Add("监测目的", carLogin.modelbj.JCLB);
                                            ht.Add("达标标准", carLogin.modelbj.ZXBZ);
                                            ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                            ht.Add("设备制造厂", mainPanel.equipmodel.SBZZC);
                                            if (!mainPanel.daliinterface.sendReportInf(ht, out reportID, out code, out msg))
                                            {
                                                MessageBox.Show("发送报告单基本信息失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送报告单基本信息失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                            dalijcbgbh = reportID;
                                            #endregion
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                                        {
                                            #region 东软
                                            ini.INIIO.saveLogInf("东软联网信息：结果判定");
                                            if (jzjsResultPd(jzjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            NeusoftUtil.UploadDieselResult vmasresult = new NeusoftUtil.UploadDieselResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = jzjs_data.Wd;
                                            vmasresult.AirPressure = jzjs_data.Dqy;
                                            vmasresult.Humidity = jzjs_data.Sd;
                                            vmasresult.MaxPower = jzjs_data.Lbgl;
                                            vmasresult.K100 = jzjs_data.Gxsxs_100;
                                            vmasresult.K90 = jzjs_data.Gxsxs_90;
                                            vmasresult.K80 = jzjs_data.Gxsxs_80;
                                            vmasresult.Rev100 = jzjs_data.Rev100;
                                            vmasresult.StartTime = jzjs_data.StartTime;
                                            vmasresult.StopReason = "0";
                                            vmasresult.Result = pdjg;
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadDieselResultRequest(vmasresult, dataseconds, out result, out inf, out dtack);
                                                if (result == "1")
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    if (vmasresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        jzjsdal.Save_JZJS(jzjsdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (vmasresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = "车辆检测不合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        jzjsdal.Save_JZJS(jzjsdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + result + "errormessage:" + inf, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                ini.INIIO.saveLogInf("东软联网信息：上传结果信息");
                                                DataTable dtresult = mainPanel.neusoftsocket.UploadDieselResultRequest(vmasresult, dataseconds, out ackresult, out errormessage);
                                                if (dtresult != null)
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    vmasresult.MaxPower = dtresult.Rows[1]["MaxPower"].ToString();
                                                    vmasresult.K100 = dtresult.Rows[1]["K100"].ToString();
                                                    vmasresult.K90 = dtresult.Rows[1]["K90"].ToString();
                                                    vmasresult.K80 = dtresult.Rows[1]["K80"].ToString();
                                                    vmasresult.Result = dtresult.Rows[1]["TestResult"].ToString();
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    if (vmasresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";// "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        jzjsdal.Save_JZJS(jzjsdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (vmasresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";// "车辆检测不合格";
                                                        if (vmasresult.Result != pdjg)
                                                        {
                                                            mainPanel.ts1 = "评判结果不一致";
                                                            MessageBox.Show("平台判定结果与本地判定不一致:" + errormessage, "提示");
                                                        }
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        jzjsdal.Save_JZJS(jzjsdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + ackresult + "errormessage:" + errormessage, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            #region 南华
                                            ini.INIIO.saveLogInf("南华联网信息：结果判定");
                                            if (jzjsResultPd(jzjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            System.Collections.Hashtable hs = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hs_p = new System.Collections.Hashtable();
                                            hs.Add("ReportNumber", jcbgbh);
                                            hs.Add("Judge", pdjg);
                                            hs.Add("Operator", carLogin.carbj.CZY);
                                            hs.Add("Driver", carLogin.carbj.JSY);
                                            hs.Add("BeginTime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EndTime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EnvironmentalTemperature", jzjs_data.Wd);
                                            hs.Add("AtmosphericPressure", jzjs_data.Dqy);
                                            hs.Add("RelativeHumidity", jzjs_data.Sd);
                                            hs.Add("IsJudgeRev", mainPanel.equipconfig.isFdjzsJudge?"1":"0");
                                            hs.Add("K100", jzjs_data.Gxsxs_100);
                                            hs.Add("K90", jzjs_data.Gxsxs_90);
                                            //hs.Add("Lambda5025", carLogin.carbj.JSY);
                                            hs.Add("K80", jzjs_data.Gxsxs_80);
                                            hs.Add("EngineRev100", jzjsdata.MAXLBZS);
                                            hs.Add("P100", jzjs_data.Lbgl);
                                            hs.Add("CorrectedPower", jzjs_data.Lbgl);
                                            hs.Add("PowerCorrectionFactor", "1.0");
                                            hs.Add("KLimit", jzjsdata.YDXZ);
                                            hs.Add("PLimit", jzjsdata.GLXZ);
                                            hs.Add("RevUpLimit",ZSXZ_HIGH.ToString());
                                            hs.Add("RevBelowLimit", ZSXZ_LOW.ToString());
                                            hs.Add("K100Judge", jzjsdata.HKPD=="合格"?"1":"0");
                                            hs.Add("K90Judge", jzjsdata.NKPD == "合格" ? "1" : "0");
                                            hs.Add("K80Judge", jzjsdata.EKPD == "合格" ? "1" : "0");
                                            hs.Add("RevJudge", jzjsdata.ZSPD == "合格" ? "1" : "0");
                                            hs.Add("PowerJudge", jzjsdata.GLPD == "合格" ? "1" : "0");
                                            
                                            ini.INIIO.saveLogInf("南华联网信息：上传加载减速数据");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendUploadLUGDOWNData(carLogin.carbj.JYLSH, hs, dataseconds, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }

                                            if (startflag)
                                            {
                                                
                                                isCsvAlive = "逐秒数据上传成功";
                                                if (pdjg == "1")
                                                {
                                                    mainPanel.ts2 = "车辆检测合格";
                                                    ini.INIIO.saveLogInf("南华联网信息：接收到平台判定结果合格");
                                                    Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                    pdjg = "1";
                                                    jzjsdal.Save_JZJS(jzjsdata);
                                                    enableButton(buttonOK, false);
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "车辆检测不合格";
                                                    ini.INIIO.saveLogInf("南华联网信息：接收到平台判定结果不合格");
                                                    Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                    pdjg = "0";
                                                    jzjsdal.Save_JZJS(jzjsdata);
                                                    enableButton(buttonOK, false);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "上传结果失败";
                                                MessageBox.Show("ackresult:" + nhcode + "errormessage:" + nhmsg, "");
                                                mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                                isCsvAlive = "上传结果失败";
                                                Msg(label1, panel4, "上传结果失败");
                                                ini.INIIO.saveLogInf("南华联网信息：上传结果失败");
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            #region 安徽
                                            ini.INIIO.saveLogInf("安徽联网信息：结果判定");
                                            if (jzjsResultPd(jzjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            AhWebClient.AhLugdownResult asmresult = new AhWebClient.AhLugdownResult();
                                            asmresult.Result = (pdjg == "1" ? "1" : "2");
                                            asmresult.CrucialTime0 =CrucialTime0;
                                            asmresult.Temperature = jzjsdata.WD;
                                            asmresult.Humidity = jzjsdata.SD; ;
                                            asmresult.Baro = jzjsdata.DQY;
                                            asmresult.CrucialTime1 = CrucialTime1;
                                            asmresult.CrucialTime2 = CrucialTime2;
                                            asmresult.CrucialTime3 = CrucialTime3;
                                            asmresult.YD1 = jzjsdata.HK;
                                            asmresult.YD2 = jzjsdata.NK;
                                            asmresult.YD3 = jzjsdata.EK;
                                            asmresult.Power = jzjsdata.MAXLBGL;
                                            asmresult.YDLimit = jzjsdata.YDXZ;
                                            asmresult.PowerLimit =jzjsdata.GLXZ;
                                            asmresult.RateSpeedUp = jzjsdata.RATEREVUP;
                                            asmresult.RateSpeedDown = jzjsdata.RATEREVDOWN;
                                            asmresult.RealRateSpeed = jzjsdata.MAXLBZS;
                                            asmresult.YDResult = (jzjsdata.HKPD == "合格" && jzjsdata.NKPD == "合格" && jzjsdata.EKPD == "合格") ? "1" : "2";
                                            asmresult.PowerResult=jzjsdata.GLPD == "合格" ? "1" : "2";
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.UploadLugdownRealtimeData(carLogin.carbj.CLID, dataseconds, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("UploadLugdownRealtimeData\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                MessageBox.Show("上传过程数据发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                Msg(label1, panel4, "上传过程数据发生错误");
                                                return;
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送UploadLugdownRealtimeData指令");
                                            }
                                            if (!mainPanel.ahinterface.EndInspectLugdown(carLogin.carbj.CLID, asmresult, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndInspectLugdown\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                MessageBox.Show("上传检测结果发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndInspectLugdown指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            #region 金华
                                            ini.INIIO.saveLogInf("金华联网信息：结果判定");
                                            if (jzjsResultPd(jzjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }

                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            for (int i = 0; i < 3; i++)
                                            {
                                                if (!mainPanel.jhoracle.insertLugdown(mainPanel.jhwebinf.stationid, mainPanel.jhwebinf.lineid, carLogin.carbj.CZY, carLogin.carbj.JSY, pdjg, jzjsdata, jzjs_data.Velmaxhp, carLogin.carbjJh, jcsj.ToString("yyyy-MM-dd HH:mm:ss"), jssj.ToString("yyyy-MM-dd HH:mm:ss"), out jhtestingid))
                                                {
                                                    if (i == 2)
                                                    {
                                                        Msg(label1, panel4, "上传过程数据发生错误");
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    carLogin.carbj.ECRYPT = jhtestingid;
                                                    ini.INIIO.saveLogInf("金华联网信息：上传过程数据成功");
                                                    break;
                                                }
                                            }
                                            if (!mainPanel.jhoracle.insertLugdownDataSeconds(jhtestingid, pdjg, jzjsdata, carLogin.carbjJh, dataseconds))
                                            {
                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息上传过程数据成功");
                                            }
                                            if (mainPanel.jhwebinf.checkprint)
                                            {
                                                string resultno;
                                                string resultdesc;
                                                string testno;
                                                JHWebClient.checkResultModel checkmodel = new JHWebClient.checkResultModel();
                                                mainPanel.jhinterface.CheckPrintIsEffective(mainPanel.jhwebinf.serverIP, jhtestingid, out testno, out resultno, out resultdesc, out checkmodel);
                                                if (int.Parse(resultno) > 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    jzjsdata.HK = checkmodel.value01;
                                                    jzjsdata.NK = checkmodel.value02;
                                                    jzjsdata.EK = checkmodel.value03;
                                                    jzjsdata.YDXZ = checkmodel.limit01;
                                                    jzjsdata.GLXZ = checkmodel.limit04;
                                                    jzjsdata.GLPD = (checkmodel.judge02 == "1" ? "合格" : "不合格");

                                                    jzjsdata.ZHPD = ((checkmodel.judge03 == "1" && checkmodel.judge02 == "1") ? "合格" : "不合格");
                                                    pdjg = ((checkmodel.judge03 == "1" && checkmodel.judge02 == "1") ? "1" : "0");
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印,但结果有不一致");
                                                }
                                                else if (int.Parse(resultno) == 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印");
                                                }
                                                else
                                                {
                                                    Msg(label1, panel4, "验证未通过:" + resultdesc);
                                                    mainPanel.ts2 = "验证未通过";
                                                    MessageBox.Show("验证未通过:" + resultdesc + "\r\n该车不能打印报告");
                                                    return;
                                                }
                                                jzjsdata.CLID = testno;
                                            }
                                            else
                                            {
                                                jzjsdata.CLID = jhtestingid;
                                            }
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("金华联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);
                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("金华联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);
                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "不合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                        {
                                            #region 桂林
                                            ini.INIIO.saveLogInf("桂林联网信息：结果判定");
                                            if (jzjsResultPd(jzjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            string result;
                                            string errmsg = "";
                                            List<Hashtable> htpro = new List<Hashtable>();
                                            for (int i = 1; i < dataseconds.Rows.Count; i++)
                                            {
                                                Hashtable htchild = new Hashtable();
                                                DataRow dr = dataseconds.Rows[i];
                                                htchild.Add("stationcode", mainPanel.stationid);
                                                htchild.Add("inspectionnum", carLogin.carbj.JYLSH);
                                                htchild.Add("processtime", DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyy-MM-dd HH:mm:ss"));
                                                htchild.Add("gklx", dr["时序类别"].ToString());
                                                htchild.Add("second_no", i.ToString());
                                                htchild.Add("nf", dr["扭力"].ToString());
                                                htchild.Add("gxsxs", dr["光吸收系数K"].ToString());
                                                htchild.Add("cgjhz", Math.Round(double.Parse(dr["功率"].ToString()), 2).ToString("0.00"));
                                                htchild.Add("calvelmaxhp", Math.Round(double.Parse(jzjsdata.VELMAXHP), 2).ToString("0.00"));
                                                htchild.Add("actvelmaxhp", Math.Round(double.Parse(jzjsdata.REALVELMAXHP), 2).ToString("0.00"));
                                                htchild.Add("powerpersec", Math.Round(double.Parse(dr["功率"].ToString()), 2).ToString("0.00"));
                                                htchild.Add("speedpersec", Math.Round(double.Parse(dr["车速"].ToString()), 2).ToString("0.00"));
                                                htchild.Add("actmaxpower", Math.Round(double.Parse(dr["功率"].ToString()), 2).ToString("0.00"));
                                                htchild.Add("rotatespeed", dr["转速"].ToString());
                                                htchild.Add("envirtemperature", dr["环境温度"].ToString());
                                                htchild.Add("envirairpressure", dr["大气压力"].ToString());
                                                htchild.Add("envirhumidity", dr["相对湿度"].ToString());
                                                htchild.Add("powercorrect", Math.Round(double.Parse(dr["DCF"].ToString()), 2).ToString("0.00"));
                                                htchild.Add("cormaxpower", Math.Round(double.Parse(dr["功率"].ToString()) * double.Parse(dr["DCF"].ToString())).ToString("0.00"));
                                                htchild.Add("realspeed", Math.Round(double.Parse(dr["车速"].ToString()), 2).ToString("0.00"));
                                                htchild.Add("nfjzxs", "1");
                                                htchild.Add("nfxs", "5000");
                                                htpro.Add(htchild);
                                            }
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 1, null, htpro, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传过程数据成功");
                                            }

                                            isCsvAlive = "逐秒数据上传成功";

                                            DataTable dt = new DataTable();
                                            Hashtable ht2 = new Hashtable();
                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("linecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            if (!mainPanel.gxinterface.finishTest(ht2, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测失败,code=" + result + ",msg=" + errmsg);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测成功");
                                            }

                                            ht2.Clear();

                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("scenecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            ht2.Add("vlpn", carLogin.carbj.CLHP);
                                            ht2.Add("vin", carLogin.modelbj.CLSBM);
                                            ht2.Add("inspectionoperator", carLogin.carbj.CZY);
                                            ht2.Add("inspectiondriver", carLogin.carbj.JSY);
                                            ht2.Add("temperature", jzjsdata.WD);
                                            ht2.Add("pressure", jzjsdata.DQY);
                                            ht2.Add("humidity", jzjsdata.SD);
                                            ht2.Add("iutid", carLogin.carbj.JCBGBH);
                                            ht2.Add("vdct", pdjg);
                                            ht2.Add("iuidate", DateTime.Now.ToString("yyyy-MM-dd"));
                                            ht2.Add("detectstarttime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("detectendtime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("vinflag", "1");
                                            ht2.Add("enginenumflag", "1");
                                            ht2.Add("icheck", carLogin.carbj.CZY);
                                            ht2.Add("checktime", jzjsdata.JCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("el", jzjsdata.YDXZ);
                                            ht2.Add("er100", jzjsdata.HK);
                                            ht2.Add("er90", jzjsdata.NK);
                                            ht2.Add("er80", jzjsdata.EK);
                                            ht2.Add("mwpl", jzjsdata.GLXZ);
                                            ht2.Add("mwp", jzjsdata.MAXLBGL);
                                            ht2.Add("rotatespeedlu", jzjsdata.RATEREVUP);
                                            ht2.Add("rotatespeedld", jzjsdata.RATEREVDOWN);
                                            ht2.Add("rotatespeed", jzjsdata.MAXLBZS);
                                            ht2.Add("dynamometer", jzjsdata.CGJXH);
                                            ht2.Add("dprovider", jzjsdata.CGJZZC);
                                            ht2.Add("smokemeter", jzjsdata.YDJXH);
                                            ht2.Add("sprovider", jzjsdata.YDJZZC);
                                            ht2.Add("flowmeter", "");
                                            ht2.Add("fprovider", "");
                                            ht2.Add("tachometer", "");
                                            ht2.Add("tprovider", "");
                                            ht2.Add("otsensor", "");
                                            ht2.Add("oprovider", "");
                                            ht2.Add("weatherstationtype", "");
                                            ht2.Add("weatherstationprovider", "");
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 0, ht2, null, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传结果数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传结果数据成功");
                                            }
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：接收到平台判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：接收到平台判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HHZNNETMODE)
                                        {
                                            #region 红河州
                                            ini.INIIO.saveLogInf("红河州联网信息：结果判定");
                                            if (jzjsResultPd(jzjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            jzjsdata.JCBGBH = jcbgbh;
                                            jzjsdata.SHY = mainPanel.shy;
                                            jzjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            jzjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            System.Collections.Hashtable hthhz = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz1 = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz2 = new System.Collections.Hashtable();
                                            #region 基本信息
                                            //hthhz.Add("JCDJBM", carLogin.carbj.CLID);//检测登记编号
                                            //hthhz.Add("CLBM", carLogin.carbj.JCBGBH);
                                            //hthhz.Add("VIN", carLogin.modelbj.CLSBM);
                                            //hthhz.Add("HBXXKH", "2012");
                                            //hthhz.Add("CPHM", carLogin.carbj.CLHP);
                                            //hthhz.Add("CPLX", mainPanel.hhzinterface.HhzR_VEHICLE_CPYS.GetValue(carLogin.modelbj.CPYS, "0"));
                                            //hthhz.Add("CLLX", carLogin.modelbj.CLLX.Split('_')[0]);//5
                                            //hthhz.Add("CDRQ", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd"));
                                            //hthhz.Add("LXDZ", carLogin.modelbj.CZDZ);
                                            //hthhz.Add("CZDW", carLogin.modelbj.CZ);
                                            //hthhz.Add("LZDH", carLogin.modelbj.LXDH);//疑问，不是LXDH
                                            //hthhz.Add("SFJF", "1");
                                            //hthhz.Add("SFYXFB", "0");
                                            //hthhz.Add("BYXFBYY", "1");
                                            //hthhz.Add("JCDJRQ", carLogin.carbj.DLSJ.ToString("yyyy-MM-dd"));
                                            //hthhz.Add("FBYBM", "123456");//转换为编号 
                                            //hthhz.Add("BZLX", "1");
                                            //hthhz.Add("XZBM", "1234");
                                            //hthhz.Add("JCZQBM", "1");
                                            //hthhz.Add("SFFK", "0");
                                            //hthhz.Add("LCBDS", carLogin.carbj.XSLC);
                                            //hthhz.Add("SFMJC", "1");
                                            //hthhz.Add("SFYOBD", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.OBD, "0"));
                                            //hthhz.Add("CXH", carLogin.modelbj.XH);
                                            //hthhz.Add("CP", carLogin.modelbj.PP);//15
                                            //hthhz.Add("SFDK", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.DKGYYB, "0"));//25
                                            //hthhz.Add("CLZL", mainPanel.hhzinterface.HhzR_VEHICLE_CLZL.GetValue(carLogin.modelbj.CLZL, "0"));
                                            //hthhz.Add("JZZL", carLogin.modelbj.JZZL);
                                            //hthhz.Add("ZDZL", carLogin.modelbj.ZZL);
                                            //hthhz.Add("QDXX", mainPanel.hhzinterface.HhzR_VEHICLE_QDXS.GetValue(carLogin.modelbj.QDXS, "0"));
                                            //hthhz.Add("BSQXS", mainPanel.hhzinterface.HhzR_VEHICLE_BSQXS.GetValue(carLogin.modelbj.BSQXS, "0"));//20
                                            //hthhz.Add("RYZL", mainPanel.hhzinterface.HhzR_VEHICLE_RLZL.GetValue(carLogin.modelbj.RLZL, "0"));
                                            //hthhz.Add("GYFS", mainPanel.hhzinterface.HhzR_VEHICLE_GYFS.GetValue(carLogin.modelbj.GYFS, "0"));
                                            //hthhz.Add("KH", carLogin.modelbj.CLLX.StartsWith("K") ? "K" : "H");
                                            //hthhz.Add("ZW", carLogin.modelbj.HDZK);
                                            //hthhz.Add("FDJEDZS", carLogin.modelbj.EDZS);
                                            //hthhz.Add("FDJPL", carLogin.modelbj.FDJPL);
                                            //hthhz.Add("FDJEDGL", carLogin.modelbj.EDGL);
                                            //hthhz.Add("JQFS", mainPanel.hhzinterface.HhzR_VEHICLE_JQFS.GetValue(carLogin.modelbj.JQFS, "0"));//41
                                            //hthhz.Add("QGSL", carLogin.modelbj.QGS);
                                            //hthhz.Add("SFYJHZZ", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.JHZZ, "0"));
                                            //hthhz.Add("JCDJJG", "1");
                                            //hthhz.Add("JCSFHG", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.ZHPD, ""));
                                            //hthhz.Add("SFYJFB", "0");
                                            //hthhz.Add("SFCGXK", "1");
                                            //hthhz.Add("DJYBM",carLogin.hhzOperatorID);
                                            //hthhz.Add("WGJCRQ", carLogin.carbj.DLSJ.ToString("yyyy-MM-dd HH:mm:ss"));//?
                                            //hthhz.Add("JCZBM", mainPanel.stationid);
                                            //hthhz.Add("JCXBM", mainPanel.stationid + mainPanel.lineid);
                                            //hthhz.Add("WQJCRQ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            //hthhz.Add("SFYXSXJC", "1");
                                            //hthhz.Add("SFCJ", carLogin.carbj.JCCS == "1" ? "0" : "1");
                                            //hthhz.Add("FDJH", carLogin.modelbj.FDJHM);
                                            //hthhz.Add("ZZ", carLogin.modelbj.HDZZL);
                                            //hthhz.Add("JCLX", mainPanel.hhzinterface.HhzR_RESULT_JCLX.GetValue(carLogin.modelbj.JCLB, "0"));//检测类型
                                            //hthhz.Add("DPFS", mainPanel.hhzinterface.HhzR_VEHICLE_DPFS.GetValue(carLogin.modelbj.DPFS, "0"));
                                            //hthhz.Add("HBBZFBSFDY", "0");
                                            //hthhz.Add("SFDYHGZ", "0");
                                            //hthhz.Add("JCZQS", "2");
                                            //hthhz.Add("BZQJCCS", carLogin.carbj.JCCS);
                                            //hthhz.Add("FGKXZBH", "0");
                                            //hthhz.Add("SCSJ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            //hthhz.Add("JCFF", mainPanel.hhzinterface.HhzR_RESULT_JCFF.GetValue(carLogin.carbj.JCFF, ""));

                                            hthhz.Add("tsno", mainPanel.stationid);//检测登记编号
                                            hthhz.Add("testlineno", mainPanel.stationid + "0" + mainPanel.lineid);
                                            hthhz.Add("testpersonno", carLogin.hhzDriverID);
                                            hthhz.Add("testno", carLogin.carbj.JCBGBH);
                                            hthhz.Add("carno", carLogin.carbj.JYLSH);
                                            hthhz.Add("testtype", mainPanel.hhzinterface.HhzR_RESULT_JCFF.GetValue(carLogin.carbj.JCFF, "0"));
                                            hthhz.Add("testtimes", carLogin.carbj.JCCS);//5
                                            hthhz.Add("testdate", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hthhz.Add("testdateend", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hthhz.Add("result", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(jzjsdata.ZHPD, "0"));
                                            hthhz.Add("license", carLogin.modelbj.CLHP);//疑问，不是LXDH
                                            hthhz.Add("vin", carLogin.modelbj.CLSBM);
                                            hthhz.Add("registerdate", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd"));
                                            hthhz.Add("mdate", carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd"));
                                            hthhz.Add("vehiclemodel", carLogin.modelbj.XH);//转换为编号 
                                            hthhz.Add("engine", carLogin.modelbj.FDJXH);
                                            hthhz.Add("standard", mainPanel.hhzinterface.HhzR_VEHICLE_PFBZ.GetValue(carLogin.modelbj.ZXBZ, "0"));
                                            hthhz.Add("odometer", carLogin.carbj.XSLC);
                                            hthhz.Add("barometric", jzjsdata.DQY);
                                            hthhz.Add("humidity", jzjsdata.SD);
                                            hthhz.Add("temperature", jzjsdata.WD);
                                            hthhz.Add("exchangetime", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            #endregion
                                            #region 结果信息
                                            hthhz1.Add("testno", carLogin.carbj.JCBGBH);
                                            hthhz1.Add("smokeklimit", jzjsdata.YDXZ);
                                            hthhz1.Add("k100", jzjsdata.HK);
                                            hthhz1.Add("k90", jzjsdata.NK);
                                            hthhz1.Add("k80", jzjsdata.EK);
                                            hthhz1.Add("maxpowerlimit", jzjsdata.GLXZ);
                                            hthhz1.Add("maxpower", jzjsdata.MAXLBGL);
                                            hthhz1.Add("raterevup", jzjsdata.RATEREVUP);
                                            hthhz1.Add("raterevdown", jzjsdata.RATEREVDOWN);
                                            hthhz1.Add("rev100", jzjsdata.MAXLBZS);
                                            hthhz1.Add("k100judge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(jzjsdata.NKPD, ""));
                                            hthhz1.Add("k90judge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(jzjsdata.NKPD, ""));
                                            hthhz1.Add("k80judge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(jzjsdata.EKPD, ""));
                                            hthhz1.Add("powerjudge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(jzjsdata.GLPD, ""));
                                             hthhz1.Add("exchangetime", DateTime.Now.ToString("yyyy-MM-dd"));

                                           // hthhz2.Add("type", "UPLOAD");
                                            //hthhz2.Add("JCZBM", mainPanel.stationid);
                                            hthhz2.Add("jcff", "JZJS_RESULT");
                                            // hthhz2.Add("jcff", "DOUBLE_IDLE");
                                            // hthhz2.Add("CHECK_REGIST_TASK", hthhz);
                                            hthhz2.Add("jcjbxx", hthhz);
                                            //hthhz2.Add("DOUBLE_IDLE_TASK", hthhz1);
                                            hthhz2.Add("JZJS_RESULT", hthhz1);
                                            #endregion
                                            try
                                            {
                                                string hhz_jcbgbh = "";
                                                sendPicture(asmdata.ZHPD);
                                                string code, msg;
                                                Newtonsoft.Json.Linq.JObject queryJobject = new Newtonsoft.Json.Linq.JObject();
                                                if (mainPanel.hhzinterface.uploadJsonArray(mainPanel.stationid, hthhz2, HhzWebClient.Hhzclient.DATALX.JCXX, out code, out msg, out queryJobject))
                                                {
                                                    try
                                                    {
                                                        if (code == "0" || code == "051")
                                                        {
                                                            ini.INIIO.saveLogInf("上传成功,code=" + code);
                                                        }
                                                        else
                                                        {
                                                            string codemsg = mainPanel.hhzinterface.Hhz_AckCode.GetValue(code, "");
                                                            MessageBox.Show("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                            Msg(label1, panel4, "上传检测数据至联网平台失败");
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        ini.INIIO.saveLogInf("读取上传返回信息异常:" + er.Message);
                                                        //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                        Msg(label1, panel4, "读取上传返回信息异常:" + er.Message);
                                                        return;
                                                    }
                                                }
                                                else
                                                {

                                                    ini.INIIO.saveLogInf("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                    MessageBox.Show("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                    Msg(label1, panel4, "上传检测数据至联网平台失败");
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测数据失败,发生异常\r\n" + er.Message);
                                                MessageBox.Show("上传检测数据失败\r\n,发生异常\r\n" + er.Message);
                                                Msg(label1, panel4, "上传检测数据至联网平台失败,发生异常");
                                                return;
                                            }


                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("红河州联网信息：接收到平台判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("红河州联网信息：接收到平台判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);
                                            }
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(jzjsdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆");
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                autoPrint(carLogin.carbj.CLID);
                                                ini.INIIO.saveLogInf("自动打印报表完毕");
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                        {
                                            #region 中科宇图
                                            ini.INIIO.saveLogInf("中科宇图联网信息：结果判定");
                                            if (jzjsResultPd(jzjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            jzjsdata.JCBGBH = jcbgbh;
                                            jzjsdata.SHY = mainPanel.shy;
                                            jzjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            jzjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            if (!uploadStartSuccess)
                                            {
                                                #region 上传检测开始命令
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendStart);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测开始命令，time=" + jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        {
                                                        }
                                                        ini.INIIO.saveLogInf("上传检测开始失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));

                                                        MessageBox.Show("检测开传上传失败", "错误提示");
                                                        return;
                                                    }
                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStartSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测开始成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                                }
                                                #endregion
                                            }
                                            if (!uploadHCSuccess)
                                            {
                                                #region 上传HC
                                                
                                                #endregion
                                            }

                                            #region 上传过程数据
                                            if (dataseconds.Rows.Count > 0)
                                            {
                                                ini.INIIO.saveLogInf("过程数据记录有" + dataseconds.Rows.Count.ToString() + "数据");
                                                ini.INIIO.saveLogInf("开始上传检测过程数据，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                try
                                                {
                                                    int timecount = dataseconds.Rows.Count - 1;
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                        {
                                                            mainPanel.yichangInterface.loadDownLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                            DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                            dataseconds.Rows[i]["时序类别"].ToString(),
                                                            i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["转速"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["扭力"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["DCF"].ToString()), 3),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2));
                                                            ini.INIIO.saveLogInf("[过程数据" + i + "]:" + "loadDownLog(" + carLogin.carbj.JYLSH + "," +
                                                                mainPanel.zkytwebinf.regcode + "," +
                                                                DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss") + "," +
                                                                dataseconds.Rows[i]["时序类别"].ToString() + "," +
                                                                i.ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["转速"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["扭力"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["DCF"].ToString()), 3).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2).ToString() + ")");
                                                        }
                                                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                        {
                                                            mainPanel.yichangInterfaceOther.loadDownLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                               i,
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["转速"].ToString()), 0),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["DCF"].ToString()), 3),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2));
                                                            ini.INIIO.saveLogInf("[过程数据" + i + "]:" + "loadDownLog(" + carLogin.carbj.JYLSH + "," +
                                                                mainPanel.zkytwebinf.regcode + "," +
                                                                i.ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["转速"].ToString()), 0).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["DCF"].ToString()), 3).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2).ToString() + ")" );
                                                        }

                                                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                                        {
                                                            mainPanel.yichangInterfaceYnbs.jzjsGcsj(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                               DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                              dataseconds.Rows[i]["时序类别"].ToString(),
                                                              i,
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["转速"].ToString()), 0),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["扭力"].ToString()), 2),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2),
                                                              Math.Round(double.Parse(dataseconds.Rows[i]["DCF"].ToString()), 3),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2),
                                                             Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1),
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1));
                                                            ini.INIIO.saveLogInf("[过程数据" + i + "]:" + "jzjsGcsj(" + carLogin.carbj.JYLSH + "," +
                                                                mainPanel.zkytwebinf.regcode + "," +
                                                                DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss") + "," +
                                                              dataseconds.Rows[i]["时序类别"].ToString() + "," +
                                                              i.ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["光吸收系数K"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["车速"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["转速"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["扭力"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["DCF"].ToString()), 0).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["功率"].ToString()), 0).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["环境温度"].ToString()), 1).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["相对湿度"].ToString()), 1).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["大气压力"].ToString()), 1).ToString() + ")");
                                                        }
                                                        Thread.Sleep(10);
                                                    }
                                                    uploadProcessSuccess = true;
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    ini.INIIO.saveLogInf("上传检测过程数据完毕，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                }
                                                catch (Exception er)
                                                {
                                                    MessageBox.Show("上传过程数据失败\r\n" + "异常：" + er.Message);
                                                    Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                    return;
                                                }
                                            }
                                            #endregion
                                            #region 上传检测结束
                                            try
                                            {
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendFinish);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测结束命令，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        { }
                                                        ini.INIIO.saveLogInf("上传检测结束失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        MessageBox.Show("上传检测结束指令失败");
                                                        Msg(label1, panel4, "上传检测结束指令失败");
                                                        return;
                                                    }

                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStopSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测结束成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测结束指令异常:" + er.Message);
                                                //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                Msg(label1, panel4, "上传检测结束指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 上传检测结果
                                             try
                                            {
                                                ini.INIIO.saveLogInf("开始上传数据");
                                                string result, info;
                                                ini.INIIO.saveLogInf(carinidata.CarID + " loadDownData(" + carLogin.carbj.JYLSH + "," + mainPanel.zkytwebinf.regcode + "," + jzjs_data.Gxsxs_100 + ","
                                                        + jzjs_data.Gxsxs_90 + "," + jzjs_data.Gxsxs_80 + "," + jzjs_data.Lbgl + ",70," + jzjs_data.Rev100 + ",700," + jzjs_data.Wd + ","
                                                        + jzjs_data.Sd + "," + jzjs_data.Dqy + "," + jcsj.ToString("yyyy-MM-dd HH:mm:ss") + "," + jssj.ToString("yyyy-MM-dd HH:mm:ss"));

                                                    mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                    mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                    mainPanel.webthread.smokeK100 = double.Parse(jzjsdata.HK);
                                                    mainPanel.webthread.smokeK90 = double.Parse(jzjsdata.NK);
                                                    mainPanel.webthread.smokeK80 = double.Parse(jzjsdata.EK);
                                                    mainPanel.webthread.power = double.Parse(jzjsdata.MAXLBGL);
                                                    mainPanel.webthread.speed = double.Parse(jzjsdata.VELMAXHP);
                                                    mainPanel.webthread.mortorSpeed = double.Parse(jzjsdata.VELMAXHPZS);
                                                    mainPanel.webthread.idleRotateSpeed = 700;
                                                    mainPanel.webthread.tempreture = double.Parse(jzjsdata.WD);
                                                    mainPanel.webthread.humidity = double.Parse(jzjsdata.SD);
                                                    mainPanel.webthread.airPressure = double.Parse(jzjsdata.DQY);
                                                    mainPanel.webthread.timeStart = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.webthread.timeEnd = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendLugdownResult);
                                                    Thread thread = new Thread(threadstart);
                                                    ini.INIIO.saveLogInf("开始上传检测结果，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    int alivetimecount = 0;
                                                    int reSend = 0;
                                                    thread.Start();
                                                    bool isExcedTimeToUpload = false;
                                                    while (thread.IsAlive)
                                                    {
                                                        Thread.Sleep(10);
                                                        alivetimecount++;
                                                        if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                        {
                                                            uploadResultSuccess = true;
                                                            reSend++;
                                                            try
                                                            {
                                                                thread.Abort();
                                                            }
                                                            catch
                                                            { }
                                                            ini.INIIO.saveLogInf("上传检测结果失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                            ini.INIIO.saveLogInf("上传检测结果指令失败,超时");
                                                            Msg(label1, panel4, "上传检测结果指令失败,超时");
                                                            return;
                                                        }
                                                    }
                                                    if (!isExcedTimeToUpload)
                                                    {
                                                        uploadResultSuccess = true;
                                                        ini.INIIO.saveLogInf("上传检测结果成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                            mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                            ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);
                                                            if (result == "0")
                                                            {
                                                                ini.INIIO.saveLogInf("上传检测结果指令失败:" + info);
                                                                Msg(label1, panel4, "上传检测结果指令失败:" + info);
                                                                MessageBox.Show(info);
                                                                return;
                                                            }
                                                       
                                                    }
                                                }
                                                catch (Exception er)
                                                {
                                                    ini.INIIO.saveLogInf("上传检测结果指令异常:" + er.Message);
                                                    //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                    Msg(label1, panel4, "上传检测结果指令异常:" + er.Message);
                                                    return;
                                                }
                                            #endregion
                                            #region 读取平台判定结果   
                                            if (mainPanel.zkytwebinf.displayCheckResult)
                                                try
                                            {
                                                string result="", info="";

                                                string smokeK100 = ""; string smokeK90 = ""; string smokeK80 = ""; string power = ""; string mortorSpeed = ""; string smokeK100Limit = ""; string smokeK90Limit = "";
                                                string smokeK80Limit = ""; string powerLimit = ""; string mortorSpeedLimit = ""; string smokeK100Result = ""; string smokeK90Result = ""; string smokeK80Result = "";
                                                string powerResult = ""; string mortorSpeedResult = ""; string result2 = "";

                                                if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                {
                                                    mainPanel.xmlanalysis.ReadLudownCheckResultString(mainPanel.yichangInterface.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                    out smokeK100, out smokeK90, out smokeK80, out power, out mortorSpeed, out smokeK100Limit, out smokeK90Limit,
                                                    out smokeK80Limit, out powerLimit, out mortorSpeedLimit, out smokeK100Result, out smokeK90Result, out smokeK80Result,
                                                    out powerResult, out mortorSpeedResult, out result2);
                                                }
                                                    else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                    {
                                                    mainPanel.xmlanalysis.ReadLudownCheckResultString(mainPanel.yichangInterfaceOther.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                    out smokeK100, out smokeK90, out smokeK80, out power, out mortorSpeed, out smokeK100Limit, out smokeK90Limit,
                                                    out smokeK80Limit, out powerLimit, out mortorSpeedLimit, out smokeK100Result, out smokeK90Result, out smokeK80Result,
                                                    out powerResult, out mortorSpeedResult, out result2);
                                                    }
                                                    else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                                    {
                                                        result = "";
                                                        info = "该地区不支持该接口";
                                                    }
                                                    if (result == "1")
                                                {
                                                    jzjsdata.HK = smokeK100;
                                                    jzjsdata.NK = smokeK90;
                                                    jzjsdata.EK = smokeK80;
                                                    jzjsdata.MAXLBGL = power;
                                                    jzjsdata.YDXZ = smokeK100Limit;
                                                    jzjsdata.GLXZ = powerLimit;
                                                    jzjsdata.HKPD = smokeK100Result;
                                                    jzjsdata.NKPD = smokeK90Result;
                                                    jzjsdata.EKPD = smokeK80Result;
                                                    jzjsdata.GLPD = powerResult;
                                                    jzjsdata.ZHPD = result2;
                                                }
                                                else
                                                {
                                                    ini.INIIO.saveLogInf("读取平台结果指令失败:" + info);
                                                    Msg(label1, panel4, "读取平台结果指令失败:" + info);
                                                    MessageBox.Show(info);
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("读取平台结果指令异常:" + er.Message);
                                                Msg(label1, panel4, "读取平台结果指令异常:" + er.Message);
                                                MessageBox.Show("读取平台结果指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 显示结果
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (jzjsdata.ZHPD == "合格")
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult ? "车辆检测合格" : "车辆检测完毕";
                                                ini.INIIO.saveLogInf("红河州联网信息：接收到平台判定结果合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);

                                                //mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(vmasdata.CLPH);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕";
                                                ini.INIIO.saveLogInf("红河州联网信息：接收到平台判定结果不合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                jzjsdal.Save_JZJS(jzjsdata);
                                                enableButton(buttonOK, false);
                                                //mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(vmasdata.CLPH);
                                            }
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                            #endregion
                                        }
                                        else
                                        {
                                            #region 其他
                                            ini.INIIO.saveLogInf("判定检测结果");
                                            if (jzjsResultPd(jzjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("检测结果：合格");
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE||mainPanel.NetMode==mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE||mainPanel.NetMode==mainPanel.EZNETMODE||mainPanel.NetMode==mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测合格，" + isCsvAlive);
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("检测结果：不合格");
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE||mainPanel.NetMode==mainPanel.EZNETMODE || mainPanel.NetMode == mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测不合格，" + isCsvAlive);
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                            }
                                            ini.INIIO.saveLogInf("保存加载减速检测结果到数据库");
                                            jzjsdal.Save_JZJS(jzjsdata);
                                            ini.INIIO.saveLogInf("车辆检测结果保存成功");
                                            if (mainPanel.isNetUsed)
                                            {
                                                if (mainPanel.NetMode == mainPanel.WGNETMODE)
                                                {
                                                    #region 万国
                                                    carinfor.WGBasicTestData basicdata = new carinfor.WGBasicTestData();
                                                    basicdata.JCBGBH = jcbgbh;
                                                    basicdata.JCLXBH = thisjcff;
                                                    basicdata.JCLXMC = thisjcffmc;
                                                    basicdata.JCGWH = mainPanel.lineid;
                                                    basicdata.JCZBH = mainPanel.wgsocketinf.JCZBH;
                                                    basicdata.JCZMC = mainPanel.stationinfmodel.STATIONNAME;
                                                    basicdata.JCRQ = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    basicdata.JCLRY = carLogin.carbj.DLY;
                                                    basicdata.JCCZY = carLogin.carbj.CZY;
                                                    basicdata.JCJSY = carLogin.carbj.JSY;
                                                    basicdata.CPHM = carLogin.carbj.CLHP;
                                                    basicdata.SFCJ = (int.Parse(carLogin.carbj.JCCS) > 1) ? "复检" : "初检";
                                                    basicdata.JCCS = carLogin.carbj.JCCS;
                                                    basicdata.SFLJ = "否";
                                                    basicdata.SFCS = carLogin.carbj.SFCS;
                                                    basicdata.FWLX = "正常";
                                                    basicdata.PDJG = jzjsdata.ZHPD;
                                                    basicdata.BGJCFFYY = carLogin.bgffyy;
                                                    basicdata.WXBJ = carLogin.wxbj;
                                                    basicdata.WXCD = carLogin.wxcd;
                                                    basicdata.WXSJ = carLogin.wxsj;
                                                    basicdata.WXFY = carLogin.wxfy;
                                                    if (!mainPanel.wgsocket.SendBasicTestData(basicdata))
                                                    {
                                                        MessageBox.Show("基本结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    carinfor.WGCommonTestData comondata = new carinfor.WGCommonTestData();
                                                    carinfor.WGLUGDOWNresultData wgdata = new carinfor.WGLUGDOWNresultData();
                                                    comondata.SBRZBM = mainPanel.wgsocketinf.SBRZBH;
                                                    comondata.SBMC = mainPanel.equipmodel.SBMC;
                                                    comondata.SBXH = mainPanel.equipmodel.SBXH;
                                                    comondata.SBZZC = mainPanel.equipmodel.SBZZC;
                                                    comondata.DPCGJ = mainPanel.equipmodel.CGJXH;
                                                    comondata.PQFXY = mainPanel.equipmodel.YDJXH;
                                                    comondata.LLJ = "";
                                                    wgdata.JCBGBH = jcbgbh;
                                                    wgdata.WD = jzjsdata.WD;
                                                    wgdata.XDSD = jzjsdata.SD;
                                                    wgdata.DQY = jzjsdata.DQY;
                                                    wgdata.VELMAXHP = jzjs_data.Velmaxhp;
                                                    wgdata.VELMAXHPZS = jzjs_data.Velmaxhpzs;
                                                    wgdata.ZDLBGL = jzjsdata.MAXLBGL;
                                                    wgdata.ZDLBGLXZ = jzjsdata.GLXZ;
                                                    wgdata.ZDLBGLPDJG = jzjsdata.GLPD;
                                                    wgdata.VELMAXHPYDZ100 = jzjsdata.HK;
                                                    wgdata.VELMAXHPYDZ90 = jzjsdata.NK;
                                                    wgdata.VELMAXHPYDZ80 = jzjsdata.EK;
                                                    wgdata.YDXZ = jzjsdata.YDXZ;
                                                    wgdata.YDPDJG = (jzjsdata.NKPD == "合格" && jzjsdata.EKPD == "合格" && jzjsdata.HKPD == "合格") ? "合格" : "不合格";
                                                    wgdata.PDJG = jzjsdata.ZHPD;
                                                    wgdata.SHY = mainPanel.shy;
                                                    wgdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    wgdata.YW = fdjyw.ToString("0");
                                                    double edzs = 0;
                                                    if (double.TryParse(carLogin.modelbj.EDZS, out edzs))
                                                    {
                                                        wgdata.FDJEDZSSX = (edzs * 0.9).ToString("0");
                                                        wgdata.FDJEDZSXX = (edzs * 1.1).ToString("0");
                                                    }
                                                    else
                                                    {
                                                        wgdata.FDJEDZSSX = "";
                                                        wgdata.FDJEDZSXX = "";
                                                    }
                                                    if (!mainPanel.wgsocket.SendLugdwonresultData(comondata, wgdata))
                                                    {
                                                        MessageBox.Show("结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.CCNETMODE)
                                                {
                                                    #region 诚创
                                                    string code, message;

                                                    if (mainPanel.ccsocket.SendInspectionEnd(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message))
                                                    {
                                                        if (code != "1")
                                                        {
                                                            Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                            return;
                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息成功");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                        ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                        return;
                                                    }
                                                    carinfor.dataMainTxt datamaintxt = new carinfor.dataMainTxt();
                                                    datamaintxt.jcbh = carLogin.carbj.CLID;
                                                    datamaintxt.clhp = carLogin.carbj.CLHP;
                                                    datamaintxt.hpzl = carLogin.modelbj.CPYS;
                                                    datamaintxt.vin = carLogin.modelbj.CLSBM;
                                                    datamaintxt.czy = carLogin.carbj.CZY;
                                                    datamaintxt.jsy = carLogin.carbj.JSY;
                                                    datamaintxt.wd = jzjsdata.WD;
                                                    datamaintxt.sd = jzjsdata.SD;
                                                    datamaintxt.dqy = jzjsdata.DQY;
                                                    datamaintxt.jcsxh = jcsxh;
                                                    datamaintxt.cj = (jzjsdata.ZHPD == "合格") ? "1" : "0";
                                                    datamaintxt.jccs = carLogin.carbj.JCCS;
                                                    datamaintxt.ljsxlc = carLogin.carbj.XSLC;
                                                    datamaintxt.lsh = carLogin.carbj.JCBGBH;
                                                    datamaintxt.jckssj = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    datamaintxt.jcjssj = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    datamaintxt.jyr = mainPanel.shy;
                                                    datamaintxt.jcbgbh = carLogin.carbj.JCBGBH;
                                                    if (mainPanel.ccsocket.writeDataMainTxt(datamaintxt))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成失败");
                                                        Msg(label1, panel4, "写主检测信息数据成失败");
                                                        return;
                                                    }
                                                    carinfor.DataResultLugdown dataresult = new carinfor.DataResultLugdown();
                                                    dataresult.jcbh = carLogin.carbj.CLID;
                                                    dataresult.ydxz = jzjsdata.YDXZ;
                                                    dataresult.hk = jzjsdata.HK;
                                                    dataresult.nk = jzjsdata.NK;
                                                    dataresult.ek = jzjsdata.EK;
                                                    dataresult.lbgl = jzjsdata.MAXLBGL;
                                                    dataresult.pd = ((jzjsdata.ZHPD == "合格") ? "1" : "0");
                                                    if (mainPanel.ccsocket.writeDataResult(dataresult))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写加载减速法检测结果数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写加载减速法检测结果数据成失败");
                                                        Msg(label1, panel4, "写加载减速法检测结果数据成失败");
                                                        return;
                                                    }
                                                    bool uploadOK = false;
                                                    for (int i = 0; i < 3; i++)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）" + (i + 1).ToString() + "Upload");
                                                        if (mainPanel.ccsocket.WaitUploadFinish(out code, out message, out uploadOK))
                                                        {
                                                            if (code == "1")
                                                            {
                                                                if (uploadOK)
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload成功");
                                                                    break;
                                                                }
                                                                else
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload失败");
                                                                    //Msg(label1, panel4, "Upload失败");
                                                                    continue;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                                //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                                continue;
                                                            }

                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                            //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                            continue;
                                                        }
                                                    }
                                                    if (!uploadOK)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）Upload三次上传失败");
                                                        //return;
                                                    }
                                                    #endregion

                                                }
                                                else if (mainPanel.NetMode == mainPanel.ORTNETMODE)
                                                {
                                                    #region ort net mode
                                                    string code, message;
                                                    carinfor.OrtLDVehicleInfo vehicleinf = new carinfor.OrtLDVehicleInfo();
                                                    vehicleinf.License = carLogin.modelbj.CLHP;
                                                    vehicleinf.LicenseClass = carLogin.modelbj.CPYS;
                                                    vehicleinf.Fuel = carLogin.modelbj.RLZL;
                                                    vehicleinf.VLTID = carLogin.modelbj.ZZL;
                                                    vehicleinf.Mileage = carLogin.carbj.XSLC;
                                                    vehicleinf.OwnerName = carLogin.modelbj.CZ;
                                                    vehicleinf.OwnerAddr = carLogin.modelbj.CZDZ;
                                                    vehicleinf.BodyColor = carLogin.modelbj.CSYS;
                                                    vehicleinf.EngineID = carLogin.modelbj.FDJHM;
                                                    vehicleinf.VIN = carLogin.modelbj.CLSBM;
                                                    vehicleinf.Cleaners = carLogin.modelbj.GYFS;
                                                    vehicleinf.Brand = carLogin.modelbj.PP;
                                                    vehicleinf.Model = carLogin.modelbj.XH;
                                                    vehicleinf.GATypeCode = carLogin.modelbj.CLLX.Split('_')[0];
                                                    vehicleinf.UseType = mainPanel.ortsocket.ORT_UseTypeR.GetValue(carLogin.modelbj.SYXZ, "");
                                                    vehicleinf.Area = carLogin.modelbj.SSXQ;
                                                    vehicleinf.EngineModel = carLogin.modelbj.FDJXH;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JQFS.Contains("增压") ? "是" : "否";
                                                    vehicleinf.RegData = carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.FactoryDate = carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.DriveType = carLogin.modelbj.QDXS;
                                                    vehicleinf.IsClosedLoopEFI = carLogin.modelbj.DPFS == "闭环电喷" ? "是" : "否";
                                                    vehicleinf.Is3WCC = carLogin.modelbj.JHZZ;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JHZZ;
                                                    vehicleinf.RateSpeed = carLogin.modelbj.EDZS;
                                                    vehicleinf.NominalPower = carLogin.modelbj.EDGL;
                                                    vehicleinf.Passengers = carLogin.modelbj.HDZK;
                                                    vehicleinf.BaseWeight = carLogin.modelbj.JZZL;
                                                    vehicleinf.Cylinders = carLogin.modelbj.QGS;
                                                    vehicleinf.IfGoIntoCity = carLogin.modelbj.SFWDZR;
                                                    vehicleinf.Stage = mainPanel.ortsocket.ORT_PhaseR.GetValue(carLogin.modelbj.ZXBZ, "");

                                                    carinfor.OrtLDResult resultinf = new carinfor.OrtLDResult();

                                                    resultinf.TestID = carLogin.carbj.JCBGBH;
                                                    resultinf.License = carLogin.carbj.CLHP;
                                                    resultinf.LicenseClass = carLogin.carbj.CPYS;
                                                    if (int.Parse(carLogin.modelbj.ZZL) <= 3500)
                                                        resultinf.VehicleType = "轻型车辆";
                                                    else if (int.Parse(carLogin.modelbj.ZZL) > 10000)
                                                        resultinf.VehicleType = "重型车辆";
                                                    else
                                                        resultinf.VehicleType = "中型车辆";
                                                    resultinf.TestType = carLogin.carbj.SFCJ;
                                                    resultinf.Region = carLogin.modelbj.SSXQ;
                                                    resultinf.Phase = carLogin.modelbj.ZXBZ;
                                                    resultinf.StationID = mainPanel.stationid;
                                                    resultinf.EISID = mainPanel.stationinfmodel.StationCompany + mainPanel.lineid;
                                                    resultinf.OperatorID = carLogin.carbj.CZY;
                                                    resultinf.AmbientTemp = jzjsdata.WD;
                                                    resultinf.AmbientHum = jzjsdata.SD;
                                                    resultinf.Pressure = jzjsdata.DQY;
                                                    resultinf.TestStartTime = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    resultinf.TestEndTime = jssj.ToString("yyyy-MM-dd HH:mm:ss");

                                                    resultinf.PowerMax = jzjsdata.MAXLBGL;
                                                    resultinf.EngineSpeed = jzjsdata.VELMAXHPZS;
                                                    resultinf.EngineSpeedMax = ZSXZ_HIGH.ToString("0");
                                                    resultinf.EngineSpeedMin = ZSXZ_LOW.ToString("0");
                                                    resultinf.PowerSTD = jzjsdata.GLXZ;
                                                    resultinf.Smoke100Power = jzjsdata.HK;
                                                    resultinf.Smoke90Power = jzjsdata.NK;
                                                    resultinf.Smoke80Power = jzjsdata.EK;
                                                    resultinf.SmokeAve = ((double.Parse(jzjsdata.HK) + double.Parse(jzjsdata.NK) + double.Parse(jzjsdata.EK)) / 3.0).ToString("000");
                                                    resultinf.SmokeCutpoint = jzjsdata.YDXZ;
                                                    resultinf.Result = jzjsdata.ZHPD;
                                                    resultinf.CrucialTime0 = CrucialTime0;
                                                    resultinf.CrucialTime1 = CrucialTime1;
                                                    resultinf.CrucialTime2 = CrucialTime2;
                                                    resultinf.CrucialTime3 = CrucialTime3;
                                                    resultinf.OutlookResult = "合格";
                                                    resultinf.AbortReason = "";
                                                    if (mainPanel.ortsocket.UploadLDResult(vehicleinf, resultinf, out code, out message))
                                                    {

                                                        ini.INIIO.saveLogInf("（欧润特联网）写加载减速法检测结果数据成成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else if (mainPanel.ortsocket.UploadLDResult(vehicleinf, resultinf, out code, out message))
                                                    {

                                                        ini.INIIO.saveLogInf("（欧润特联网）写加载减速法检测结果数据第一次失败，第二次成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（欧润特联网）写加载减速法检测结果数据成失败");
                                                        Msg(label1, panel4, "写加载减速法检测结果数据成失败");
                                                        return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                                {
                                                    #region 通用
                                                    车辆检测状态 teststate = new 车辆检测状态();
                                                    teststate.JCZBH = mainPanel.stationid;
                                                    teststate.LINEID = mainPanel.lineid;
                                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                                    teststate.JYCS = carLogin.carbj.JCCS;
                                                    teststate.JCSJ = DateTime.Now;
                                                    teststate.CLHP = carLogin.carbj.CLHP;
                                                    teststate.HPZL = carLogin.carbj.HPZL;
                                                    teststate.ZT = mainPanel.finishTest;
                                                    teststate.JCFF = carLogin.carbj.JCFF;
                                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                                {
                                                    #region 江西
                                                    string code, msg;
                                                    
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        jxLugdownProcessData processdata = new jxLugdownProcessData(
                                                            dr["全程时序"].ToString(),
                                                            dr["时序类别"].ToString(),
                                                            i.ToString(),
                                                            dr["车速"].ToString(),
                                                             dr["扭力"].ToString(),
                                                             dr["转速"].ToString(),
                                                             dr["功率"].ToString(),
                                                             dr["光吸收系数K"].ToString());
                                                        if (!mainPanel.jxinterface.sendLugDownProcessData(carLogin.carbj.CLID, processdata, out code, out msg))
                                                        {
                                                            MessageBox.Show("sendLugDownProcessData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                            ini.INIIO.saveLogInf("江西联网信息：sendLugDownProcessData上传服务器失败");
                                                            return;
                                                        }
                                                    }
                                                    jxLugdownResultData resultdata = new jxLugdownResultData(
                                                        jzjsdata.CLID,
                                                        jzjsdata.WD,
                                                        jzjsdata.DQY,
                                                        jzjsdata.SD,
                                                        jzjsdata.YDXZ,
                                                        jzjsdata.HK,
                                                        jzjsdata.NK,
                                                        jzjsdata.EK,
                                                        jzjsdata.GLXZ,
                                                        jzjsdata.MAXLBGL,
                                                        jzjsdata.RATEREVUP,
                                                        jzjsdata.RATEREVDOWN,
                                                        jzjsdata.MAXLBZS,
                                                        jzjsdata.ZHPD == "不合格" ? "0" : "1",
                                                        Math.Round(((double.Parse(jzjsdata.MAXLBGL)*0.5)/double.Parse(jzjsdata.GLXZ)),3).ToString("0.000"),
                                                        jcsj.ToString("yyyy-MM-dd HH:mm:ss"),
                                                        jssj.ToString("yyyy-MM-dd HH:mm:ss")
                                                        );
                                                    if (!mainPanel.jxinterface.sendLugDownResultData(carLogin.carbj.CLID, resultdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("sendLugDownResultData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：sendLugDownResultData上传服务器失败");
                                                        return;
                                                    }
                                                    if (!mainPanel.jxinterface.finish(carLogin.carbj.CLID, out code, out msg))
                                                    {
                                                        MessageBox.Show("finish上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：finish上传服务器失败");
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + jzjsdata.ZHPD + ",上传完毕");
                                                    #endregion 
                                                }
                                                else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                                {
                                                    #region 湖南
                                                    string code, msg;
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    System.Collections.Hashtable htdata = new System.Collections.Hashtable();
                                                    ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", jzjsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    DataTable dtinf = new DataTable();
                                                    if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送开始检测命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送开始检测命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("xh", carLogin.modelbj.XH);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("clxh", carLogin.modelbj.PP);
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("fdjxh", carLogin.modelbj.FDJXH);
                                                    ht.Add("fdjh", carLogin.modelbj.FDJHM);
                                                    ht.Add("cllx", carLogin.modelbj.CLLX.Split('_')[0]);
                                                    ht.Add("csys", mainPanel.hninterface.RHN_CSYS.GetValue(carLogin.modelbj.CSYS, ""));
                                                    ht.Add("syxz", mainPanel.hninterface.RHN_SYXZ.GetValue(carLogin.modelbj.SYXZ, ""));
                                                    ht.Add("syr", carLogin.modelbj.CZ);
                                                    ht.Add("ccdjrq", carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("rlzl", mainPanel.hninterface.RHN_RLZL.GetValue(carLogin.modelbj.RLZL, ""));
                                                    ht.Add("pl", carLogin.modelbj.FDJPL);
                                                    ht.Add("gl", carLogin.modelbj.EDGL);
                                                    ht.Add("zs", "2");
                                                    ht.Add("zj", "2800");
                                                    ht.Add("qlj", "");
                                                    ht.Add("hlj", "");
                                                    ht.Add("zzl", carLogin.modelbj.ZZL);
                                                    ht.Add("zbzl", carLogin.modelbj.ZBZL);
                                                    ht.Add("ccrq", carLogin.modelbj.SCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("zsxzqh", "");
                                                    ht.Add("zzxzqh", "");
                                                    ht.Add("zt", "");
                                                    ht.Add("jqfs", mainPanel.hninterface.RHN_JQFS.GetValue(carLogin.modelbj.JQFS, ""));
                                                    ht.Add("gyxs", mainPanel.hninterface.RHN_GYXS.GetValue(carLogin.modelbj.GYFS, ""));
                                                    ht.Add("yxqz", "");
                                                    ht.Add("xslc", carLogin.carbj.XSLC);
                                                    ht.Add("chzhq", (carLogin.modelbj.JHZZ == "无" || carLogin.modelbj.JHZZ == "否") ? "0" : "1");
                                                    ht.Add("edzs", carLogin.modelbj.EDZS);
                                                    ht.Add("qdlqy", carLogin.modelbj.QDLTQY);
                                                    ht.Add("dczz", carLogin.modelbj.SSXQ);
                                                    ht.Add("rygg", carLogin.modelbj.RYPH);
                                                    ht.Add("bsqxs", mainPanel.hninterface.RHN_BSQXS.GetValue(carLogin.modelbj.BSQXS, ""));
                                                    ht.Add("dws", carLogin.modelbj.DWS);
                                                    ht.Add("qgs", carLogin.modelbj.QGS);
                                                    ht.Add("edzk", carLogin.modelbj.HDZK);
                                                    ht.Add("hbdbqk", "");
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", jzjsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    //htdata.Add("glkqxssx", "1.03");
                                                    //htdata.Add("glkqxsxx", "0.97");
                                                    htdata.Add("zdlbglxz", jzjsdata.GLXZ);
                                                    htdata.Add("sczdlbgl", jzjsdata.MAXLBGL);
                                                    htdata.Add("fdjedzssx", ZSXZ_HIGH.ToString("0"));
                                                    htdata.Add("fdjedzsxx", ZSXZ_LOW.ToString("0"));
                                                    htdata.Add("scfdjedzs", jzjsdata.MAXLBZS);
                                                    htdata.Add("ldpfxz", jzjsdata.YDXZ);
                                                    htdata.Add("pfjg100", jzjsdata.HK);
                                                    htdata.Add("pfjg90", jzjsdata.NK);
                                                    htdata.Add("pfjg80", jzjsdata.EK);
                                                    
                                                    htdata.Add("ldhjwd", jzjsdata.WD);
                                                    htdata.Add("ldhjsd", jzjsdata.SD);
                                                    htdata.Add("ldhjdqy", jzjsdata.DQY);
                                                    htdata.Add("ldfdjyw", fdjyw.ToString("0.0"));
                                                    if (!mainPanel.hninterface.writeTestResult(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送结果数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    htdata.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    //ht.Add("xh", carLogin.modelbj.XH);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", jzjsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    string HCGCSJ = "", COGCSJ = "", CO2GCSJ = "", O2GCSJ = "", NOXGCSJ = "", GLKQXSSJ = "", HCPFZLGCSJ = "", COPFZLGCSJ = "",
                                                        NOXPFZLGCSJ = "", LLJO2GCSJ = "", LLJSJLLGCSJ = "", LLJBZLLGCSJ = "", LLJWDGCSJ = "", QCWQLLGCSJ = "", LLJQYGCSJ = "", ZSGCSJ = "", YWGCSJ = "",
                                                        CSGCSJ = "", XSBGCSJ = "", XSXZGCSJ = "", SDXZGCSJ = "", JSGLGCSJ = "", ZSGLGCSJ = "", HJWDGCSJ = "", HJSDGCSJ = "", HJDQYGCSJ = "", YDZGCSJ = "",
                                                        GXSXSGCSJ = "";
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        CSGCSJ += dr["车速"].ToString() + ",";
                                                        GXSXSGCSJ += dr["光吸收系数K"].ToString() + ",";
                                                        ZSGCSJ += dr["转速"].ToString() + ",";
                                                        ZSGLGCSJ += dr["指示功率"].ToString() + ",";
                                                        JSGLGCSJ += dr["寄生功率"].ToString() + ",";
                                                        YDZGCSJ += dr["不透光度"].ToString() + ",";
                                                        HJDQYGCSJ += dr["大气压力"].ToString() + ",";
                                                        HJSDGCSJ += dr["相对湿度"].ToString() + ",";
                                                        HJWDGCSJ += dr["环境温度"].ToString() + ",";
                                                        YWGCSJ += dr["油温"].ToString() + ",";
                                                    }
                                                    CSGCSJ.Remove(CSGCSJ.Length - 1, 1);
                                                    GXSXSGCSJ.Remove(GXSXSGCSJ.Length - 1, 1);
                                                    ZSGCSJ.Remove(ZSGCSJ.Length - 1, 1);
                                                    ZSGLGCSJ.Remove(ZSGLGCSJ.Length - 1, 1);
                                                    JSGLGCSJ.Remove(JSGLGCSJ.Length - 1, 1);
                                                    YDZGCSJ.Remove(YDZGCSJ.Length - 1, 1);
                                                    HJDQYGCSJ.Remove(HJDQYGCSJ.Length - 1, 1);
                                                    HJSDGCSJ.Remove(HJSDGCSJ.Length - 1, 1);
                                                    HJWDGCSJ.Remove(HJWDGCSJ.Length - 1, 1);
                                                    YWGCSJ.Remove(YWGCSJ.Length - 1, 1);

                                                    htdata.Add("HCGCSJ", HCGCSJ);
                                                    htdata.Add("COGCSJ", COGCSJ);
                                                    htdata.Add("CO2GCSJ", CO2GCSJ);
                                                    htdata.Add("O2GCSJ", O2GCSJ);
                                                    htdata.Add("NOXGCSJ", NOXGCSJ);
                                                    htdata.Add("GLKQXSSJ", GLKQXSSJ);
                                                    htdata.Add("HCPFZLGCSJ", HCPFZLGCSJ);
                                                    htdata.Add("COPFZLGCSJ", COPFZLGCSJ);
                                                    htdata.Add("NOXPFZLGCSJ", NOXPFZLGCSJ);
                                                    htdata.Add("LLJO2GCSJ", LLJO2GCSJ);
                                                    htdata.Add("LLJSJLLGCSJ", LLJSJLLGCSJ);
                                                    htdata.Add("LLJBZLLGCSJ", LLJBZLLGCSJ);
                                                    htdata.Add("LLJWDGCSJ", LLJWDGCSJ);
                                                    htdata.Add("QCWQLLGCSJ", QCWQLLGCSJ);
                                                    htdata.Add("LLJQYGCSJ", LLJQYGCSJ);
                                                    htdata.Add("ZSGCSJ", ZSGCSJ);
                                                    htdata.Add("YWGCSJ", YWGCSJ);
                                                    htdata.Add("CSGCSJ", CSGCSJ);
                                                    htdata.Add("XSBGCSJ", XSBGCSJ);
                                                    htdata.Add("XSXZGCSJ", XSXZGCSJ);
                                                    htdata.Add("SDXZGCSJ", SDXZGCSJ);
                                                    htdata.Add("JSGLGCSJ", JSGLGCSJ);
                                                    htdata.Add("ZSGLGCSJ", ZSGLGCSJ);
                                                    htdata.Add("HJWDGCSJ", HJWDGCSJ);
                                                    htdata.Add("HJSDGCSJ", HJSDGCSJ);
                                                    htdata.Add("HJDQYGCSJ", HJDQYGCSJ);
                                                    htdata.Add("YDZGCSJ", YDZGCSJ);
                                                    htdata.Add("GXSXSGCSJ", GXSXSGCSJ);

                                                    if (!mainPanel.hninterface.writeTestDataSeconds(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送过程数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送过程数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + jzjsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.DALINETMODE)
                                                {
                                                    #region 大理
                                                    string code, msg;
                                                    string reportID;
                                                    sendPicture(jzjsdata.ZHPD);
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "VMAS": ht.Add("检测类别", "1"); break;
                                                        case "ASM": ht.Add("检测类别", "2"); break;
                                                        case "SDS": ht.Add("检测类别", "3"); break;
                                                        case "JZJS": ht.Add("检测类别", "4"); break;
                                                        case "ZYJS": ht.Add("检测类别", "5"); break;
                                                        case "LZ": ht.Add("检测类别", "6"); break;
                                                    }
                                                    ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                                    ht.Add("温度", jzjsdata.WD);
                                                    ht.Add("大气压", jzjsdata.DQY);
                                                    ht.Add("相对湿度", jzjsdata.SD);
                                                    ht.Add("VELMAXHP车速", jzjsdata.VELMAXHP);
                                                    ht.Add("VELMAXHP转速", jzjsdata.VELMAXHPZS);
                                                    ht.Add("最大轮边功率", jzjsdata.MAXLBGL);
                                                    ht.Add("最大轮边功率限值", jzjsdata.GLXZ);
                                                    ht.Add("最大轮边功率判定结果", jzjsdata.GLPD);
                                                    ht.Add("P100VELMAXHP烟度值", jzjsdata.HK);
                                                    ht.Add("P90VELMAXHP烟度值", jzjsdata.NK);
                                                    ht.Add("P80VELMAXHP烟度值", jzjsdata.EK);
                                                    ht.Add("烟度限值", jzjsdata.YDXZ);
                                                    ht.Add("烟度判定结果", (jzjsdata.HKPD=="不合格"|| jzjsdata.NKPD == "不合格"|| jzjsdata.EKPD == "不合格")? "不合格":"合格");
                                                    ht.Add("判定结果", jzjsdata.ZHPD);
                                                    ht.Add("审核员", mainPanel.shy);
                                                    ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    //DataTable dt = new DataTable();
                                                    if (!mainPanel.daliinterface.sendTestData(ht, 4, dataseconds, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送检测数据失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送检测数据失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + jzjsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                                {
                                                    #region 安车
                                                    Thread.Sleep(1000);
                                                    if (!saveLugdownResult2Net())
                                                    {
                                                        Thread.Sleep(1000);
                                                        if (!saveLugdownResult2Net())
                                                        {
                                                            MessageBox.Show("结果数据上传安车服务器失败", "错误提示");
                                                            ini.INIIO.saveLogInf("安车联网信息：结果数据上传服务器失败");
                                                            return;
                                                        }
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.EZNETMODE)
                                                {
                                                    #region 鄂州
                                                    string code, msg;
                                                    try
                                                    {
                                                        EzWebClient.InspectionInformation data = new EzWebClient.InspectionInformation(
                                                            jzjsdata.ZHPD == "合格" ? "1" : "0",
                                                            jzjsdata.JCBGBH,
                                                            jssj.ToString("yyyyMMddHHmmss"),
                                                            mainPanel.ezinterface.EZR_inspectionmethod.GetValue(carLogin.carbj.JCFF, ""),
                                                            carLogin.carbj.JSY,
                                                            jzjsdata.JCBGBH,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            carLogin.carbj.JCCS,
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            mainPanel.stationid,
                                                            carLogin.modelbj.JCLB,
                                                            carLogin.modelbj.CLHP,
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.SCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJSCQY,
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.EDGL,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.modelbj.JZZL,
                                                             carLogin.carbj.XSLC,
                                                             carLogin.modelbj.QGS,
                                                             "Y",
                                                             "N",
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             DateTime.Now.ToString("yyyyMMddHHmmss"),
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "",
                                                             carLogin.carbj.CZY
                                                            );
                                                        if (!mainPanel.ezinterface.uploadInspectionInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("发送检测信息命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                            ini.INIIO.saveLogInf("发送检测信息命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        EzWebClient.ExternalLoginInformation data = new EzWebClient.ExternalLoginInformation(
                                                             mainPanel.stationid,
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             "N",
                                                             carLogin.modelbj.QGS,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             "Y",
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJHM,
                                                             "N",
                                                             "N",
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             carLogin.carbj.JCBGBH,
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.carbj.JCBGBH,
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             carLogin.modelbj.CLHP,
                                                             "N",
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.carbj.XSLC,

                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             "Y",
                                                             "N",
                                                             "",
                                                             carLogin.modelbj.CZDZ,
                                                             carLogin.modelbj.LXDH,
                                                             "Y",
                                                             carLogin.modelbj.EDGL,
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.JZZL,
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             carLogin.modelbj.CZ,

                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "1"
                                                            );
                                                        if (!mainPanel.ezinterface.uploadExternalLoginInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("新增外检登录信息失败,不能开始检测\r\ncode:" + code + "\r\nmessage:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("新增外检登录信息发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        EzWebClient.EzIfaJcLoaddowndata data = new EzWebClient.EzIfaJcLoaddowndata(
                                                            jzjsdata.JCBGBH,
                                                            jssj.ToString("yyyyMMddHHmmss"),
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            mainPanel.stationid,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            jzjsdata.DQY,
                                                            jzjsdata.ZHPD == "合格" ? "1" : "0",
                                                            jzjsdata.YDXZ,
                                                            jzjsdata.RATEREVDOWN,
                                                            jzjsdata.RATEREVUP,
                                                            jzjsdata.SD,
                                                            jzjsdata.JCBGBH,
                                                            DateTime.Now.ToString("yyyyMMddHHmmss"),
                                                            jzjsdata.GLXZ,
                                                            jzjsdata.MAXLBGL,
                                                            jzjsdata.MAXLBZS,
                                                            "",
                                                            jzjsdata.HK,
                                                            jzjsdata.EK,
                                                            jzjsdata.NK,
                                                            jzjsdata.WD,
                                                            carLogin.carbj.CZY
                                                            );
                                                        if (!mainPanel.ezinterface.uploadEzIfaJcLoaddowndata(data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    try
                                                    {
                                                        for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                        {
                                                            DataRow dr = dataseconds.Rows[i];
                                                            EzWebClient.EzIfaJcLoaddownlog data = new EzWebClient.EzIfaJcLoaddownlog(
                                                                mainPanel.stationid+mainPanel.lineid,
                                                                 dr["大气压力"].ToString(),
                                                                 dr["相对湿度"].ToString(),
                                                                 dr["环境温度"].ToString(),
                                                                jzjsdata.JCBGBH,
                                                                dr["功率"].ToString(),
                                                                dr["DCF"].ToString(),
                                                                mainPanel.stationid,
                                                                dr["时序类别"].ToString(),
                                                                dr["功率"].ToString(),
                                                                jzjsdata.JCBGBH,
                                                                i.ToString(),
                                                                dr["光吸收系数K"].ToString(),
                                                                "",
                                                                dr["转速"].ToString(),
                                                                dr["车速"].ToString(),
                                                                 dr["扭力"].ToString(),
                                                                DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyyMMddHHmmss")
                                                                );
                                                            if (!mainPanel.ezinterface.uploadEzIfaJcLoaddownlog(data, out code, out msg))
                                                            {
                                                                ini.INIIO.saveLogInf("发送过程数据[" + i.ToString() + "]命令失败,code" + code + ",msg:" + msg);
                                                            }
                                                            //else
                                                            //{
                                                            //    Thread.Sleep(50);
                                                            //}
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    sendPicture(jzjsdata.ZHPD);
                                                    Msg(label1, panel4, "车辆检测" + asmdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if(mainPanel.NetMode==mainPanel.XBNETMODE)
                                                {
                                                    #region 喜邦
                                                    string code, msg;
                                                    double velmaxhp100xslc = 0, velmaxhp90xslc = 0, velmaxhp80xslc = 0;
                                                    int glsmds = 0, velmaxhp100ds = 0, velmaxhp90ds = 0, velmaxhp80ds = 0;
                                                    List<string> klist_glsm = new List<string>();
                                                    List<string> cslist_glsm = new List<string>();
                                                    List<string> nllist_glsm = new List<string>();
                                                    List<string> gllist_glsm = new List<string>();
                                                    List<string> jsgllist_glsm = new List<string>();
                                                    List<string> zslist_glsm = new List<string>();
                                                    List<string> wdlist_glsm = new List<string>();
                                                    List<string> sdlist_glsm = new List<string>();
                                                    List<string> dqylist_glsm = new List<string>();
                                                    List<string> nondlist_glsm = new List<string>();
                                                    List<string> nozllist_glsm = new List<string>();
                                                    List<string> dcflist_glsm = new List<string>();

                                                    List<string> klist_100 = new List<string>();
                                                    List<string> cslist_100 = new List<string>();
                                                    List<string> nllist_100 = new List<string>();
                                                    List<string> gllist_100 = new List<string>();
                                                    List<string> jsgllist_100 = new List<string>();
                                                    List<string> zslist_100 = new List<string>();
                                                    List<string> wdlist_100 = new List<string>();
                                                    List<string> sdlist_100 = new List<string>();
                                                    List<string> dqylist_100 = new List<string>();
                                                    List<string> nondlist_100 = new List<string>();
                                                    List<string> nozllist_100 = new List<string>();
                                                    List<string> dcflist_100 = new List<string>();

                                                    List<string> klist_90 = new List<string>();
                                                    List<string> cslist_90 = new List<string>();
                                                    List<string> nllist_90 = new List<string>();
                                                    List<string> gllist_90 = new List<string>();
                                                    List<string> jsgllist_90 = new List<string>();
                                                    List<string> zslist_90 = new List<string>();
                                                    List<string> wdlist_90 = new List<string>();
                                                    List<string> sdlist_90 = new List<string>();
                                                    List<string> dqylist_90 = new List<string>();
                                                    List<string> nondlist_90 = new List<string>();
                                                    List<string> nozllist_90 = new List<string>();
                                                    List<string> dcflist_90 = new List<string>();

                                                    List<string> klist_80 = new List<string>();
                                                    List<string> cslist_80 = new List<string>();
                                                    List<string> nllist_80 = new List<string>();
                                                    List<string> gllist_80 = new List<string>();
                                                    List<string> jsgllist_80 = new List<string>();
                                                    List<string> zslist_80 = new List<string>();
                                                    List<string> wdlist_80 = new List<string>();
                                                    List<string> sdlist_80 = new List<string>();
                                                    List<string> dqylist_80 = new List<string>();
                                                    List<string> nondlist_80 = new List<string>();
                                                    List<string> nozllist_80 = new List<string>();
                                                    List<string> dcflist_80 = new List<string>();
                                                    try
                                                    {
                                                        int index = 0;
                                                        

                                                        for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                        {
                                                            DataRow dr = dataseconds.Rows[i];
                                                            carinfo.XB_LUGDOWN_PROCESS_DATA data = new carinfo.XB_LUGDOWN_PROCESS_DATA();
                                                            if (dr["时序类别"].ToString() == "0") continue;
                                                            index++;
                                                            data.JCFFBH = carLogin.carbj.JCFF;
                                                            data.JCLSH = carLogin.carbj.JYLSH;
                                                            data.SJXL = index.ToString();
                                                            data.State = dr["时序类别"].ToString();
                                                            data.Sorb = dr["光吸收系数K"].ToString();
                                                            data.Speed = dr["车速"].ToString();
                                                            data.Force = dr["扭力"].ToString();
                                                            data.Power = dr["功率"].ToString();
                                                            data.IHP = dr["指示功率"].ToString();
                                                            data.PLHP = dr["寄生功率"].ToString();
                                                            data.LTMCLP = "0";
                                                            data.WD = dr["环境温度"].ToString();
                                                            data.SD = dr["相对湿度"].ToString();
                                                            data.DQY = dr["大气压力"].ToString();
                                                            data.PCof = dr["DCF"].ToString();
                                                            data.Rpm = dr["转速"].ToString();
                                                            data.JYWD = dr["油温"].ToString();
                                                            if (data.State=="1")
                                                            {
                                                                glsmds++;
                                                                klist_glsm.Add(data.Sorb);
                                                                cslist_glsm.Add(data.Speed);
                                                                nllist_glsm.Add(data.Force);
                                                                gllist_glsm.Add(data.Power);
                                                                jsgllist_glsm.Add(data.PLHP);
                                                                zslist_glsm.Add(data.Rpm);
                                                                wdlist_glsm.Add(data.WD);
                                                                sdlist_glsm.Add(data.SD);
                                                                dqylist_glsm.Add(data.DQY);
                                                                nondlist_glsm.Add("0");
                                                                nozllist_glsm.Add("0");
                                                                dcflist_glsm.Add(data.PCof);

                                                            }
                                                            else if (data.State == "2")
                                                            {
                                                                velmaxhp100ds++;
                                                                double speed = double.Parse(data.Speed) / 3.6;
                                                                double xslc = speed * 0.001;
                                                                velmaxhp100xslc += xslc;
                                                                klist_100.Add(data.Sorb);
                                                                cslist_100.Add(data.Speed);
                                                                nllist_100.Add(data.Force);
                                                                gllist_100.Add(data.Power);
                                                                jsgllist_100.Add(data.PLHP);
                                                                zslist_100.Add(data.Rpm);
                                                                wdlist_100.Add(data.WD);
                                                                sdlist_100.Add(data.SD);
                                                                dqylist_100.Add(data.DQY);
                                                                nondlist_100.Add("0");
                                                                nozllist_100.Add("0");
                                                                dcflist_100.Add(data.PCof);
                                                            }
                                                            else if(data.State == "3")
                                                            {
                                                                velmaxhp90ds++;
                                                                double speed = double.Parse(data.Speed) / 3.6;
                                                                double xslc = speed * 0.001;
                                                                velmaxhp90xslc += xslc;
                                                                klist_90.Add(data.Sorb);
                                                                cslist_90.Add(data.Speed);
                                                                nllist_90.Add(data.Force);
                                                                gllist_90.Add(data.Power);
                                                                jsgllist_90.Add(data.PLHP);
                                                                zslist_90.Add(data.Rpm);
                                                                wdlist_90.Add(data.WD);
                                                                sdlist_90.Add(data.SD);
                                                                dqylist_90.Add(data.DQY);
                                                                nondlist_90.Add("0");
                                                                nozllist_90.Add("0");
                                                                dcflist_90.Add(data.PCof);
                                                            }
                                                            else if (data.State == "4")
                                                            {
                                                                velmaxhp80ds++;
                                                                double speed = double.Parse(data.Speed) / 3.6;
                                                                double xslc = speed * 0.001;
                                                                velmaxhp80xslc += xslc;
                                                                klist_80.Add(data.Sorb);
                                                                cslist_80.Add(data.Speed);
                                                                nllist_80.Add(data.Force);
                                                                gllist_80.Add(data.Power);
                                                                jsgllist_80.Add(data.PLHP);
                                                                zslist_80.Add(data.Rpm);
                                                                wdlist_80.Add(data.WD);
                                                                sdlist_80.Add(data.SD);
                                                                dqylist_80.Add(data.DQY);
                                                                nondlist_80.Add("0");
                                                                nozllist_80.Add("0");
                                                                dcflist_80.Add(data.PCof);
                                                            }
                                                            if (!mainPanel.xbsocket.Send_LUGDOWN_PROCESS_DATA(data, out code, out msg))
                                                            {
                                                                ini.INIIO.saveLogInf("发送过程数据[" + i.ToString() + "]命令失败,code" + code + ",msg:" + msg);
                                                            }
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送过程数据命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        carinfo.XB_RESULT_PUBLIC_DATA pdata = new carinfo.XB_RESULT_PUBLIC_DATA();
                                                        carinfo.XB_LUGDOWN_RESULT_DATA data = new carinfo.XB_LUGDOWN_RESULT_DATA();
                                                        pdata.JCFFBH = carLogin.carbj.JCFF;
                                                        pdata.JCLSH = carLogin.carbj.JYLSH;
                                                        pdata.DLY = carLogin.carbj.DLY;
                                                        pdata.YCY = carLogin.carbj.JSY;
                                                        pdata.JCY = carLogin.carbj.CZY;
                                                        pdata.WD = sdsdata.WD;
                                                        pdata.SD = sdsdata.SD;
                                                        pdata.DQY = sdsdata.DQY;
                                                        data.SFZSKZ = "0";
                                                        data.LugTime = glsmds.ToString();
                                                        data.VelLugTime = (velmaxhp100ds+velmaxhp90ds+velmaxhp80ds).ToString();
                                                        data.CalcVelMaxHP = jzjsdata.VELMAXHP;
                                                        data.RealVelMaxHP = jzjsdata.REALVELMAXHP;
                                                        data.RealMaxPower = jzjsdata.ACTMAXHP;
                                                        data.CalcMaxPower = jzjsdata.MAXLBGL;
                                                        data.RealVelFDJRpm = jzjsdata.MAXLBZS;
                                                        data.DSFDJRpm = (800 + DateTime.Now.Second).ToString();
                                                        data.Sorb0 = jzjsdata.HK;
                                                        data.Sorb1 = jzjsdata.NK;
                                                        data.Sorb2 = jzjsdata.EK;
                                                        data.NOND0 = "0";
                                                        data.NOND1 = "0";
                                                        data.NOND2 = "0";
                                                        data.NOZL0 = "0";
                                                        data.NOZL1 = "0";
                                                        data.NOZL2 = "0";
                                                        data.Kilometer0 = velmaxhp100xslc.ToString("0.00");
                                                        data.Kilometer1 = velmaxhp90xslc.ToString("0.00");
                                                        data.Kilometer2 = velmaxhp80xslc.ToString("0.00");
                                                        data.CurveCount = glsmds.ToString();
                                                        data.VelCurveCount0 = velmaxhp100ds.ToString();
                                                        data.VelCurveCount1 = velmaxhp90ds.ToString();
                                                        data.VelCurveCount2 = velmaxhp80ds.ToString();
                                                        data.SorbCurve = string.Join(",", klist_glsm);
                                                        data.SpeedCurve = string.Join(",", cslist_glsm);
                                                        data.ForceCurve = string.Join(",", nllist_glsm);
                                                        data.PowerCurve = string.Join(",", gllist_glsm);
                                                        data.PLHPCurve = string.Join(",", jsgllist_glsm);
                                                        data.RpmCurve = string.Join(",", zslist_glsm);
                                                        data.WDCurve = string.Join(",", wdlist_glsm);
                                                        data.SDCurve = string.Join(",", sdlist_glsm);
                                                        data.DQYCurve = string.Join(",", dqylist_glsm);
                                                        data.NONDCurve = string.Join(",", nondlist_glsm);
                                                        data.NOZLCurve = string.Join(",", nozllist_glsm);
                                                        data.PCofCurve = string.Join(",", dcflist_glsm);

                                                        data.VelSorbCurve0 = string.Join(",", klist_100);
                                                        data.VelSpeedCurve0 = string.Join(",", cslist_100);
                                                        data.VelForceCurve0 = string.Join(",", nllist_100);
                                                        data.VelPowerCurve0 = string.Join(",", gllist_100);
                                                        data.VelPLHPCurve0 = string.Join(",", jsgllist_100);
                                                        data.VelRpmCurve0 = string.Join(",", zslist_100);
                                                        data.VelWDCurve0 = string.Join(",", wdlist_100);
                                                        data.VelSDCurve0 = string.Join(",", sdlist_100);
                                                        data.VelDQYCurve0 = string.Join(",", dqylist_100);
                                                        data.VelNONDCurve0 = string.Join(",", nondlist_100);
                                                        data.VelNOZLCurve0 = string.Join(",", nozllist_100);
                                                        data.VelPCofCurve0 = string.Join(",", dcflist_100);

                                                        data.VelSorbCurve1 = string.Join(",", klist_90);
                                                        data.VelSpeedCurve1 = string.Join(",", cslist_90);
                                                        data.VelForceCurve1 = string.Join(",", nllist_90);
                                                        data.VelPowerCurve1 = string.Join(",", gllist_90);
                                                        data.VelPLHPCurve1 = string.Join(",", jsgllist_90);
                                                        data.VelRpmCurve1 = string.Join(",", zslist_90);
                                                        data.VelWDCurve1 = string.Join(",", wdlist_90);
                                                        data.VelSDCurve1 = string.Join(",", sdlist_90);
                                                        data.VelDQYCurve1 = string.Join(",", dqylist_90);
                                                        data.VelNONDCurve1 = string.Join(",", nondlist_90);
                                                        data.VelNOZLCurve1 = string.Join(",", nozllist_90);
                                                        data.VelPCofCurve1 = string.Join(",", dcflist_90);

                                                        data.VelSorbCurve2 = string.Join(",", klist_80);
                                                        data.VelSpeedCurve2 = string.Join(",", cslist_80);
                                                        data.VelForceCurve2 = string.Join(",", nllist_80);
                                                        data.VelPowerCurve2 = string.Join(",", gllist_80);
                                                        data.VelPLHPCurve2 = string.Join(",", jsgllist_80);
                                                        data.VelRpmCurve2 = string.Join(",", zslist_80);
                                                        data.VelWDCurve2 = string.Join(",", wdlist_80);
                                                        data.VelSDCurve2 = string.Join(",", sdlist_80);
                                                        data.VelDQYCurve2 = string.Join(",", dqylist_80);
                                                        data.VelNONDCurve2 = string.Join(",", nondlist_80);
                                                        data.VelNOZLCurve2 = string.Join(",", nozllist_80);
                                                        data.VelPCofCurve2 = string.Join(",", dcflist_80);
                                                        
                                                        if (!mainPanel.xbsocket.Send_TEST_RESULT_DATA(pdata, data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    jxLugdownResultData resultdata = new jxLugdownResultData(
                                                        jzjsdata.CLID,
                                                        jzjsdata.WD,
                                                        jzjsdata.DQY,
                                                        jzjsdata.SD,
                                                        jzjsdata.YDXZ,
                                                        jzjsdata.HK,
                                                        jzjsdata.NK,
                                                        jzjsdata.EK,
                                                        jzjsdata.GLXZ,
                                                        jzjsdata.MAXLBGL,
                                                        jzjsdata.RATEREVUP,
                                                        jzjsdata.RATEREVDOWN,
                                                        jzjsdata.MAXLBZS,
                                                        jzjsdata.ZHPD == "不合格" ? "0" : "1",
                                                        Math.Round(((double.Parse(jzjsdata.MAXLBGL) * 0.5) / double.Parse(jzjsdata.GLXZ)), 3).ToString("0.000"),
                                                        jcsj.ToString("yyyy-MM-dd HH:mm:ss"),
                                                        jssj.ToString("yyyy-MM-dd HH:mm:ss")
                                                        );
                                                    if (!mainPanel.jxinterface.sendLugDownResultData(carLogin.carbj.CLID, resultdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("sendLugDownResultData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：sendLugDownResultData上传服务器失败");
                                                        return;
                                                    }
                                                    if (!mainPanel.jxinterface.finish(carLogin.carbj.CLID, out code, out msg))
                                                    {
                                                        MessageBox.Show("finish上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：finish上传服务器失败");
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + jzjsdata.ZHPD + ",上传完毕");
                                                    #endregion 
                                                }
                                            }
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(jzjsdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆");
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                autoPrint(carLogin.carbj.CLID);
                                                ini.INIIO.saveLogInf("自动打印报表完毕");
                                            }
                                            #endregion
                                        }
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("逐秒数据读取失败");
                                        isCsvAlive = "逐秒数据上传失败";
                                        Msg(label1, panel4, "未找到过程数据，检测无效");
                                    }
                                    #endregion 
                                }
                                File.Delete(newPath);
                                break;
                                #endregion
                            case "ZYJS":
                                #region 自由加速
                                ini.INIIO.saveLogInf("将结果文件复制到位置：" + "D://dataseconds/" + carLogin.carbj.CLID + ".ini");
                                string btginifileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                if (ini.INIIO.createDir(btginifileDir))
                                    File.Copy(newPath, btginifileDir + "/" + carLogin.carbj.CLID + ".ini", true);
                                zyjs_data = zyjsdatacontrol.readZyjsData(newPath);
                                if (zyjs_data.FirstData == "-1")
                                {
                                    #region 检测终止
                                    ini.INIIO.saveLogInf("设备未完成检测退出,无检测结果数据");
                                    mainPanel.ts1 = "设备未完成检测退出";
                                    mainPanel.ts2 = "无检测结果数据";
                                    Msg(label1, panel4, "设备未完成检测退出,无检测结果数据");
                                    Msg(labelStatus, panelStatus, "故障");
                                    mainPanel.worklogdata.ProjectID = mainPanel.stationid + mainPanel.lineid + DateTime.Now.ToString("yyMMddHHmmss");//线号“00”代表为登录机进行的操作
                                    mainPanel.worklogdata.ProjectName = "操作日志";
                                    mainPanel.worklogdata.Stationid = mainPanel.stationid;
                                    mainPanel.worklogdata.Lineid = mainPanel.lineid;
                                    mainPanel.worklogdata.Czy = mainPanel.nowUser.userName;
                                    mainPanel.worklogdata.Data = "车辆" + carLogin.carbj.CLHP + "检测中止" + ",驾控员:" + carLogin.carbj.JSY + ",检测方法：" + carLogin.carbj.JCFF;
                                    mainPanel.worklogdata.State = "中止";
                                    mainPanel.worklogdata.Result = "";
                                    mainPanel.worklogdata.Date = DateTime.Now;
                                    mainPanel.worklogdata.Bzsm = "";
                                    mainPanel.demarcatecontrol.saveWordLogByIni(mainPanel.worklogdata);
                                    if (mainPanel.isNetUsed)
                                    {
                                        if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                        {
                                            carinfor.equipmentStatus equipmentcontrol = new carinfor.equipmentStatus();
                                            equipmentcontrol.JCBGBH = jcbgbh;
                                            equipmentcontrol.JCGWH = mainPanel.lineid;
                                            equipmentcontrol.SJXL = zyjs_data.Yw;
                                            equipmentcontrol.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            equipmentcontrol.writeEquipmentStatus('F');
                                            ini.INIIO.saveLogInf("安车联网信息：发送检测失败指令");
                                        }
                                        else if(mainPanel.NetMode==mainPanel.NEUSOFTNETMODE)
                                        {
                                            NeusoftUtil.UploadDieselFAResult vmasresult = new NeusoftUtil.UploadDieselFAResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = "";
                                            vmasresult.AirPressure = "";
                                            vmasresult.Humidity = "";
                                            vmasresult.SmokeK1 = "";
                                            vmasresult.SmokeK2 = "";
                                            vmasresult.SmokeK3 = "";
                                            vmasresult.Rev1 = "";
                                            vmasresult.Rev2 = "";
                                            vmasresult.Rev3 = "";
                                            vmasresult.SmokeAvg = "";
                                            vmasresult.IdleRev = "";
                                            vmasresult.StartTime = "";
                                            vmasresult.StopReason = "9";
                                            vmasresult.Result = "2";
                                            
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadDieselFAResultRequest(vmasresult, null, out result, out inf, out dtack);
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                mainPanel.neusoftsocket.UploadDieselFAResultRequest(vmasresult, null, out ackresult, out errormessage);
                                            }
                                            ini.INIIO.saveLogInf("东软联网信息：发送检测失败指令");
                                        }
                                        else if (mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.StopInspect(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("StopInspect\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送StopInspect指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            ini.INIIO.saveLogInf("南华联网信息：发送检测终止命令");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                        {
                                            车辆检测状态 teststate = new 车辆检测状态();
                                            teststate.JCZBH = mainPanel.stationid;
                                            teststate.LINEID = mainPanel.lineid;
                                            teststate.JYLSH = carLogin.carbj.JYLSH;
                                            teststate.JYCS = carLogin.carbj.JCCS;
                                            teststate.JCSJ = DateTime.Now;
                                            teststate.CLHP = carLogin.carbj.CLHP;
                                            teststate.HPZL = carLogin.carbj.HPZL;
                                            teststate.ZT = mainPanel.stopTest;
                                            teststate.JCFF = carLogin.carbj.JCFF;
                                            mainPanel.logininfcontrol.Save_TestState(teststate);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                        {
                                            string code, msg;
                                            mainPanel.jxinterface.stop(carLogin.jxthiscarinf.detectionId, out code, out msg);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                        {
                                            string code, msg;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                            ht.Add("jclsh", carLogin.carbj.CLID);
                                            ht.Add("hphm", carLogin.carbj.CLHP);
                                            ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                            ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                            ht.Add("jccs", carLogin.carbj.JCCS);
                                            ht.Add("ycy", carLogin.carbj.JSY);
                                            ht.Add("dly", carLogin.carbj.DLY);
                                            ht.Add("czy", carLogin.carbj.CZY);
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "ASM":
                                                    ht.Add("jcffid", "2"); break;
                                                case "VMAS":
                                                    ht.Add("jcffid", "3"); break;
                                                case "JZJS":
                                                    ht.Add("jcffid", "6"); break;
                                                case "ZYJS":
                                                    ht.Add("jcffid", "4"); break;
                                                case "SDS":
                                                    ht.Add("jcffid", "1"); break;
                                                case "LZ":
                                                    ht.Add("jcffid", "5"); break;

                                            }
                                            ht.Add("jczt", "2");
                                            ht.Add("jcbz", "3");
                                            ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                            ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                            DataTable dtinf = new DataTable();
                                            if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                            {
                                                MessageBox.Show("发送检测结束命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送检测结束命令失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                        {
                                            if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                            {
                                                mainPanel.yichangInterface.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                            {
                                                mainPanel.yichangInterfaceOther.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                            {
                                                mainPanel.yichangInterfaceYnbs.xxtz(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            try
                                            {
                                                ini.INIIO.saveLogInf(carinidata.CarID + " sendMessage(" + carLogin.carbj.JYLSH + "," + mainPanel.zkytwebinf.regcode + ",04,)");
                                            }
                                            catch
                                            { }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                                        {
                                            string code, msg;
                                            if (!mainPanel.xbsocket.Send_TEST_STOP(carLogin.carbj.JYLSH, carLogin.carbj.JCCS, "用户主动终止", out code, out msg))
                                            {
                                                //MessageBox.Show("车辆检测开始失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送车辆检测终止失败,code" + code + ",msg:" + msg);
                                                //return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                        {
                                            string result;
                                            string errmsg = "";
                                            DataTable dt = new DataTable();
                                            Hashtable ht2 = new Hashtable();
                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("linecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            if (!mainPanel.gxinterface.finishTest(ht2, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测失败,code=" + result + ",msg=" + errmsg);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测成功");
                                            }
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                            mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                            mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                            mainPanel.opratormode.STATUS = "已中止";
                                            mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                            mainPanel.opratormode.YL1 = "";
                                            mainPanel.opratormode.YL2 = "";
                                            mainPanel.opratormode.YL3 = "";
                                            mainPanel.opratormode.YL4 = "";
                                            mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                        }
                                    }
                                    #endregion
                                }
                                else
                                {
                                    #region 检测有效
                                    ini.INIIO.saveLogInf("检测完成，检测结果数据有效");
                                    mainPanel.ts1 = "检测完成";
                                    Msg(labelStatus, panelStatus, "检测完成");
                                    string isCsvAlive = "";
                                    double fdjyw = 0;
                                    string pdjg = "";
                                    DataTable dataseconds = csvreader.readCsv(newCsvPath);
                                    if (dataseconds != null)
                                    {
                                        string fileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                        if (ini.INIIO.createDir(fileDir))
                                            File.Copy(newCsvPath, fileDir + "/" + carLogin.carbj.CLID + ".csv", true);
                                        ini.INIIO.saveLogInf("过程数据复制到位置：" + fileDir + "/" + carLogin.carbj.CLID + ".csv");
                                        isCsvAlive = saveZyjsDataSeconds(dataseconds, carLogin.carbj.CLID, carLogin.carbj.CLHP, jcsj, out fdjyw);
                                        ini.INIIO.saveLogInf("过程数据保存到数据库成功");
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                        {
                                            #region 大理联网时上传报告单基本信息并获取分配的检测报告编号
                                            string code, msg;
                                            string reportID;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "VMAS": ht.Add("检测类别", "1"); break;
                                                case "ASM": ht.Add("检测类别", "2"); break;
                                                case "SDS": ht.Add("检测类别", "3"); break;
                                                case "JZJS": ht.Add("检测类别", "4"); break;
                                                case "ZYJS": ht.Add("检测类别", "5"); break;
                                                case "LZ": ht.Add("检测类别", "6"); break;
                                            }
                                            ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                            ht.Add("检测站编号", mainPanel.stationid);
                                            ht.Add("检测工位号", mainPanel.daliwebinf.LINEID);
                                            ht.Add("检测日期", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("录入员", carLogin.carbj.DLY);
                                            ht.Add("操作员", carLogin.carbj.CZY);
                                            ht.Add("引车员", carLogin.carbj.JSY);
                                            ht.Add("检测开始日期", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("检测结束日期", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车牌号码", carLogin.carbj.CLHP);
                                            ht.Add("车牌颜色", carLogin.carbj.CPYS);
                                            ht.Add("车辆种类", carLogin.modelbj.CLZL);
                                            ht.Add("车辆类型", carLogin.modelbj.CLLX);
                                            ht.Add("车主类别", carLogin.modelbj.OBD);
                                            ht.Add("车主身份证号码", carLogin.modelbj.JSSZK);
                                            ht.Add("车主名称", carLogin.modelbj.CZ);
                                            ht.Add("联系地址", carLogin.modelbj.CZDZ);
                                            ht.Add("联系电话", carLogin.modelbj.LXDH);
                                            ht.Add("厂牌型号", carLogin.modelbj.PP);
                                            ht.Add("车辆品牌", carLogin.modelbj.PP);
                                            ht.Add("车辆型号", carLogin.modelbj.XH);
                                            ht.Add("使用性质", carLogin.modelbj.SYXZ);
                                            ht.Add("车辆营运性质", carLogin.modelbj.SFSRL);
                                            ht.Add("车辆运载种类", carLogin.modelbj.DLSP);
                                            ht.Add("车辆生产日期", carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车辆识别码", carLogin.modelbj.CLSBM);
                                            ht.Add("生产企业", carLogin.modelbj.SCQY);
                                            ht.Add("最大总质量", carLogin.modelbj.ZZL);
                                            ht.Add("基准质量", carLogin.modelbj.JZZL);
                                            ht.Add("初次登记日期", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("单车轴重", carLogin.modelbj.HDZZL);
                                            ht.Add("底盘型号", carLogin.modelbj.DKGYYB);

                                            ht.Add("驱动方式", carLogin.modelbj.QDXS);
                                            ht.Add("驱动轮胎气压", carLogin.modelbj.QDLTQY);
                                            ht.Add("变速器型式", carLogin.modelbj.BSQXS);
                                            ht.Add("档位数", carLogin.modelbj.DWS);
                                            ht.Add("发动机型号", carLogin.modelbj.FDJXH);
                                            ht.Add("发动机编号", carLogin.modelbj.FDJHM);
                                            ht.Add("发动机生产企业", carLogin.modelbj.FDJSCQY);
                                            ht.Add("汽缸数", carLogin.modelbj.QGS);
                                            ht.Add("发动机排量", carLogin.modelbj.FDJPL);
                                            ht.Add("供油方式", carLogin.modelbj.GYFS);
                                            ht.Add("燃油类型", carLogin.modelbj.RLZL);
                                            ht.Add("进气方式", carLogin.modelbj.JQFS);
                                            ht.Add("催化转化器", carLogin.modelbj.JHZZ);
                                            ht.Add("供油系统类型", carLogin.modelbj.DPFS);
                                            ht.Add("排气处理装置", carLogin.modelbj.JHZZ);
                                            ht.Add("燃油标号", carLogin.modelbj.RYPH);
                                            ht.Add("累计行驶里程", carLogin.carbj.XSLC);
                                            ht.Add("检测状态", carLogin.carbj.JCCS == "1" ? "初检" : "复检");
                                            ht.Add("检测次数", carLogin.carbj.JCCS);
                                            ht.Add("转入标志", carLogin.modelbj.SFWDZR);
                                            ht.Add("延期报废", carLogin.modelbj.SFYQBF);
                                            ht.Add("设计乘员数", carLogin.modelbj.HDZK);
                                            ht.Add("检测系统名称", mainPanel.equipmodel.SBMC);
                                            ht.Add("检测设备认证编码", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("检测系统型号", mainPanel.equipmodel.SBXH);
                                            ht.Add("检测系统编号", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("底盘测功机名称", mainPanel.equipmodel.CGJXH);
                                            ht.Add("气体分析仪名称", mainPanel.equipmodel.YDJXH);
                                            ht.Add("所属区域", carLogin.modelbj.SSXQ);
                                            ht.Add("是否路检", "否");
                                            ht.Add("生产地", carLogin.modelbj.HPZL);
                                            ht.Add("监测目的", carLogin.modelbj.JCLB);
                                            ht.Add("达标标准", carLogin.modelbj.ZXBZ);
                                            ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                            ht.Add("设备制造厂", mainPanel.equipmodel.SBZZC);
                                            if (!mainPanel.daliinterface.sendReportInf(ht, out reportID, out code, out msg))
                                            {
                                                MessageBox.Show("发送报告单基本信息失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送报告单基本信息失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                            dalijcbgbh = reportID;
                                            #endregion
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                                        {
                                            #region 东软
                                            ini.INIIO.saveLogInf("东软联网信息：结果判定");
                                            if (zyjsResultPd(zyjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            NeusoftUtil.UploadDieselFAResult vmasresult = new NeusoftUtil.UploadDieselFAResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = zyjs_data.Wd;
                                            vmasresult.AirPressure = zyjs_data.Dqy;
                                            vmasresult.Humidity = zyjs_data.Sd;
                                            vmasresult.SmokeK1 = zyjs_data.FirstData;
                                            vmasresult.SmokeK2 = zyjs_data.SecondData;
                                            vmasresult.SmokeK3 = zyjs_data.ThirdData;
                                            vmasresult.Rev1 = zyjs_data.Rev1;
                                            vmasresult.Rev2 = zyjs_data.Rev2;
                                            vmasresult.Rev3 = zyjs_data.Rev3;
                                            vmasresult.SmokeAvg = zyjs_data.SmokeAvg;
                                            vmasresult.IdleRev = zyjs_data.Dszs;
                                            vmasresult.StartTime = zyjs_data.StartTime;
                                            vmasresult.StopReason = zyjs_data.StopReason;
                                            vmasresult.Result = pdjg;
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadDieselFAResultRequest(vmasresult, dataseconds, out result, out inf, out dtack);
                                                if (result == "1")
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    ini.INIIO.saveSocketLogInf("接收到返回结果");
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    zyjsdata.JCBGBH = jcbgbh;
                                                    zyjsdata.SHY = mainPanel.shy;
                                                    zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    zyjsdata.JCFF = "GB3847-2005";
                                                    if (vmasresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                        pdjg = "1";
                                                        zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                        ini.INIIO.saveSocketLogInf("保存检测信息");
                                                        //vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (vmasresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = "车辆检测不合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                        pdjg = "0";
                                                        zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                        ini.INIIO.saveSocketLogInf("保存检测信息");
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                        ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + result + "errormessage:" + inf, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                ini.INIIO.saveLogInf("东软联网信息：上传结果信息");
                                                DataTable dtresult = mainPanel.neusoftsocket.UploadDieselFAResultRequest(vmasresult, dataseconds, out ackresult, out errormessage);
                                                if (dtresult != null)
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    vmasresult.SmokeK1 = dtresult.Rows[1]["SmokeK1"].ToString();
                                                    vmasresult.SmokeK2 = dtresult.Rows[1]["SmokeK2"].ToString();
                                                    vmasresult.SmokeK3 = dtresult.Rows[1]["SmokeK3"].ToString();
                                                    vmasresult.SmokeAvg = dtresult.Rows[1]["SmokeAvg"].ToString();
                                                    vmasresult.IdleRev = dtresult.Rows[1]["IdleRev"].ToString();
                                                    vmasresult.Result = dtresult.Rows[1]["TestResult"].ToString();
                                                    ini.INIIO.saveSocketLogInf("接收到返回结果");
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    zyjsdata.JCBGBH = jcbgbh;
                                                    zyjsdata.SHY = mainPanel.shy;
                                                    zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    zyjsdata.JCFF = "GB3847-2005";
                                                    if (vmasresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";// "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                        pdjg = "1";
                                                        zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                        ini.INIIO.saveSocketLogInf("保存检测信息");
                                                        //vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (vmasresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";// "车辆检测不合格";
                                                        if (vmasresult.Result != pdjg)
                                                        {
                                                            mainPanel.ts1 = "评判结果不一致";
                                                            MessageBox.Show("平台判定结果与本地判定不一致:" + errormessage, "提示");
                                                        }
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                        pdjg = "0";
                                                        zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                        ini.INIIO.saveSocketLogInf("保存检测信息");
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                        ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + ackresult + "errormessage:" + errormessage, "");
                                                    ini.INIIO.saveSocketLogInf("未收到返回结果数据");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                }
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            #region 南华
                                            ini.INIIO.saveLogInf("南华联网信息：结果判定");
                                            if (zyjsResultPd(zyjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            System.Collections.Hashtable hs = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hs_p = new System.Collections.Hashtable();
                                            hs.Add("ReportNumber", jcbgbh);
                                            hs.Add("Judge", pdjg);
                                            hs.Add("Operator", carLogin.carbj.CZY);
                                            hs.Add("Driver", carLogin.carbj.JSY);
                                            hs.Add("BeginTime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EndTime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EnvironmentalTemperature", zyjs_data.Wd);
                                            hs.Add("AtmosphericPressure", zyjs_data.Dqy);
                                            hs.Add("RelativeHumidity", zyjs_data.Sd);
                                            hs.Add("Value1", zyjs_data.FirstData);
                                            hs.Add("Value2", zyjs_data.SecondData);
                                            hs.Add("Value3", zyjs_data.ThirdData);
                                            //hs.Add("Lambda5025", carLogin.carbj.JSY);
                                            hs.Add("Average", zyjs_data.SmokeAvg);
                                            hs.Add("IdleRev", zyjs_data.Dszs);
                                            hs.Add("KLimit", zyjsdata.YDXZ);
                                            ini.INIIO.saveLogInf("南华联网信息：上传自由加速数据");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendUploadFAOPAData(carLogin.carbj.JYLSH, hs, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                            if (startflag)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：接收到结果信息");
                                                isCsvAlive = "逐秒数据上传成功";
                                                zyjsdata.JCBGBH = jcbgbh;
                                                zyjsdata.SHY = mainPanel.shy;
                                                zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                zyjsdata.JCFF = "GB3847-2005";
                                                if (pdjg=="1")
                                                {
                                                    mainPanel.ts2 = "车辆检测合格";
                                                    Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                    ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                    pdjg = "1";
                                                    zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                    ini.INIIO.saveSocketLogInf("保存检测信息");
                                                    //vmasdal.Save_VMAS(vmasdata);
                                                    enableButton(buttonOK, false);
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "车辆检测不合格";
                                                    Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                    ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                    pdjg = "0";
                                                    zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                    ini.INIIO.saveSocketLogInf("保存检测信息");
                                                    enableButton(buttonOK, false);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "上传结果失败";
                                                MessageBox.Show("ackresult:" + nhcode + "errormessage:" + nhmsg, "");
                                                mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                                ini.INIIO.saveSocketLogInf("未收到返回结果数据");
                                                isCsvAlive = "未收到返回结果数据";
                                                Msg(label1, panel4, "未收到返回结果数据");
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
                                        {
                                            #region 江苏
                                            ini.INIIO.saveLogInf("江苏联网信息：结果判定");
                                            if (zyjsResultPd(zyjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            carinfor.JsBtgResultData asmresult = new carinfor.JsBtgResultData();
                                            asmresult.check_id = carLogin.carbj.JCBGBH;
                                            asmresult.check_type = carLogin.modelbj.JCLB;
                                            asmresult.citycode = mainPanel.stationid.Substring(0, 6);
                                            asmresult.unit_id = mainPanel.stationid; 
                                            asmresult.device_id = mainPanel.stationid + mainPanel.lineid;
                                            asmresult.vhicleid = mainPanel.jsvehiclemodel.vehicleid;
                                            asmresult.odo_meter = mainPanel.jsvehiclemodel.odo_meter;
                                            asmresult.check_data = DateTime.Now.ToString("yyyy-MM-dd");
                                            asmresult.starttime = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                            asmresult.end_time = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                            asmresult.temperature = zyjsdata.WD;
                                            asmresult.pressure = zyjsdata.DQY;
                                            asmresult.humidity = zyjsdata.SD;
                                            asmresult.idle_rev = zyjsdata.DSZS;
                                            asmresult.smoke_b1 = zyjsdata.FIRSTDATA;
                                            asmresult.smoke_b2 = zyjsdata.SECONDDATA;
                                            asmresult.smoke_b3 = zyjsdata.THIRDDATA;
                                            asmresult.smoke_avg = zyjsdata.AVERAGEDATA;
                                            asmresult.smoke_limit = zyjsdata.YDXZ;
                                            asmresult.passed = pdjg;
                                            bool jsstatus;
                                            string jserrMsg = "";
                                            string finalresult;
                                            bool cardwritestatus;
                                            string jsackstring = mainPanel.jsinterface.uploadInspectionResult(asmresult, out finalresult, out jsstatus, out cardwritestatus, out jserrMsg);
                                            if (jsackstring != "")
                                            {
                                                MessageBox.Show(jsackstring, "上传结果失败");
                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                if(mainPanel.jsinterface.CHECK_TYPE[carLogin.modelbj.JCLB]!="抽检")
                                                    return;
                                            }
                                            else
                                            {
                                                if (!jsstatus)
                                                {
                                                    MessageBox.Show(jserrMsg, "上传结果失败");
                                                    ini.INIIO.saveLogInf("上传结果失败：" + jserrMsg);
                                                    return;
                                                }
                                                if (!cardwritestatus)
                                                {
                                                    MessageBox.Show("电子卡写卡失败");
                                                    ini.INIIO.saveLogInf("电子卡写卡失败");
                                                }
                                            }
                                            ini.INIIO.saveLogInf("江苏联网信息：接收到结果信息");
                                            zyjsdata.JCBGBH = jcbgbh;
                                            zyjsdata.SHY = mainPanel.shy;
                                            zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCFF = "GB3847-2005";
                                            isCsvAlive = "逐秒数据上传成功";

                                            if (pdjg == "1")
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：接收到平台判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：接收到平台判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            #region 安徽
                                            ini.INIIO.saveLogInf("安徽联网信息：结果判定");
                                            if (zyjsResultPd(zyjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            AhWebClient.AhBtgResult asmresult = new AhWebClient.AhBtgResult();
                                            asmresult.Result = (pdjg == "1" ? "1" : "2");
                                            asmresult.CrucialTime0 = CrucialTime0;
                                            asmresult.Temperature = zyjsdata.WD;
                                            asmresult.Humidity = zyjsdata.SD; ;
                                            asmresult.Baro = zyjsdata.DQY;
                                            asmresult.YD0 = "";
                                            asmresult.YD1 = zyjsdata.FIRSTDATA;
                                            asmresult.YD2 = zyjsdata.SECONDDATA;
                                            asmresult.YD3 = zyjsdata.THIRDDATA;
                                            asmresult.YDAV = zyjsdata.AVERAGEDATA;
                                            asmresult.YDLimit = zyjsdata.YDXZ;
                                            asmresult.IdleSpeed = zyjsdata.DSZS;
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            DataTable datasecondsah = csvreader.readCsv(newAhCsvPath);
                                            if (datasecondsah != null)
                                            {
                                                if (!mainPanel.ahinterface.UploadBtgRealtimeData(carLogin.carbj.CLID, datasecondsah, out ahresult, out ahErrMsg))
                                                {
                                                    ini.INIIO.saveLogInf("UploadBtgRealtimeData\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                    MessageBox.Show("上传过程数据发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                    Msg(label1, panel4, "上传过程数据发生错误");
                                                    return;
                                                }
                                                else
                                                {
                                                    ahisStopInspect = true;
                                                    ini.INIIO.saveLogInf("安徽联网信息：发送UploadBtgRealtimeData指令");
                                                }
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("安徽联网信息：没有找到安徽需要的过程数据");
                                                Msg(label1, panel4, "上传过程数据发生错误：没有找到安徽需要的过程数据");
                                                return;
                                            }
                                            if (!mainPanel.ahinterface.EndInspectBtg(carLogin.carbj.CLID, asmresult, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndInspectBtg\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                MessageBox.Show("上传检测结果发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndInspectBtg指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                            zyjsdata.JCBGBH = jcbgbh;
                                            zyjsdata.SHY = mainPanel.shy;
                                            zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCFF = "GB3847-2005";
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            #region 金华
                                            ini.INIIO.saveLogInf("金华联网信息：结果判定");
                                            if (zyjsResultPd(zyjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            zyjsdata.JCBGBH = jcbgbh;
                                            zyjsdata.SHY = mainPanel.shy;
                                            zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCFF = "GB3847-2005";
                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            for (int i = 0; i < 3; i++)
                                            {
                                                if (!mainPanel.jhoracle.insertBtgdown(mainPanel.jhwebinf.stationid, mainPanel.jhwebinf.lineid, carLogin.carbj.CZY, carLogin.carbj.JSY, pdjg, zyjsdata, carLogin.carbjJh, jcsj.ToString("yyyy-MM-dd HH:mm:ss"), jssj.ToString("yyyy-MM-dd HH:mm:ss"), out jhtestingid))
                                                {
                                                    if (i == 2)
                                                    {
                                                        Msg(label1, panel4, "上传过程数据发生错误");
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    carLogin.carbj.ECRYPT = jhtestingid;
                                                    ini.INIIO.saveLogInf("金华联网信息：上传过程数据成功");
                                                    break;
                                                }
                                            }
                                            if (!mainPanel.jhoracle.insertBtgDataSeconds(jhtestingid, pdjg, zyjsdata, carLogin.carbjJh, dataseconds))
                                            {
                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息上传过程数据成功");
                                            }
                                            if (mainPanel.jhwebinf.checkprint)
                                            {
                                                string resultno;
                                                string resultdesc;
                                                string testno;
                                                JHWebClient.checkResultModel checkmodel = new JHWebClient.checkResultModel();
                                                mainPanel.jhinterface.CheckPrintIsEffective(mainPanel.jhwebinf.serverIP, jhtestingid, out testno, out resultno, out resultdesc, out checkmodel);
                                                if (int.Parse(resultno) > 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    zyjsdata.FIRSTDATA = checkmodel.value01;
                                                    zyjsdata.SECONDDATA = checkmodel.value02;
                                                    zyjsdata.THIRDDATA = checkmodel.value03;
                                                    zyjsdata.AVERAGEDATA = checkmodel.value04;
                                                    zyjsdata.YDXZ = checkmodel.limit01;
                                                    zyjsdata.ZHPD = (checkmodel.judge01 == "1" ? "合格" : "不合格");
                                                    pdjg = checkmodel.judge01;
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印,但结果有不一致");
                                                }
                                                else if (int.Parse(resultno) == 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印");
                                                }
                                                else
                                                {
                                                    Msg(label1, panel4, "验证未通过:" + resultdesc);
                                                    mainPanel.ts2 = "验证未通过";
                                                    MessageBox.Show("验证未通过:" + resultdesc + "\r\n该车不能打印报告");
                                                    return;
                                                }
                                                zyjsdata.CLID = testno;
                                            }
                                            else
                                            {
                                                zyjsdata.CLID = jhtestingid;
                                            }
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "不合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                        {
                                            #region 桂林
                                            ini.INIIO.saveLogInf("桂林联网信息：结果判定");
                                            if (zyjsResultPd(zyjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            zyjsdata.JCBGBH = jcbgbh;
                                            zyjsdata.SHY = mainPanel.shy;
                                            zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCFF = "GB3847-2005";
                                            string result;
                                            string errmsg = "";

                                            List<Hashtable> htpro = new List<Hashtable>();
                                            for (int i = 1; i < dataseconds.Rows.Count; i++)
                                            {
                                                Hashtable htchild = new Hashtable();
                                                DataRow dr = dataseconds.Rows[i];
                                                htchild.Add("stationcode", mainPanel.stationid);
                                                htchild.Add("inspectionnum", carLogin.carbj.JYLSH);
                                                htchild.Add("processtime", DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyy-MM-dd HH:mm:ss"));
                                                htchild.Add("gklx", dr["时序类别"].ToString());
                                                htchild.Add("second_no", i.ToString());
                                                htchild.Add("er", dr["烟度值读数"].ToString());
                                                htchild.Add("rotatespeed", dr["发动机转速"].ToString());
                                                htpro.Add(htchild);
                                            }
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 1, null, htpro, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传过程数据成功");
                                            }

                                            isCsvAlive = "逐秒数据上传成功";

                                            DataTable dt = new DataTable();
                                            Hashtable ht2 = new Hashtable();
                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("linecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            if (!mainPanel.gxinterface.finishTest(ht2, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测失败,code=" + result + ",msg=" + errmsg);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测成功");
                                            }
                                            ht2.Clear();
                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("scenecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            ht2.Add("vlpn", carLogin.carbj.CLHP);
                                            ht2.Add("vin", carLogin.modelbj.CLSBM);
                                            ht2.Add("inspectionoperator", carLogin.carbj.CZY);
                                            ht2.Add("inspectiondriver", carLogin.carbj.JSY);
                                            ht2.Add("temperature", zyjsdata.WD);
                                            ht2.Add("pressure", zyjsdata.DQY);
                                            ht2.Add("humidity", zyjsdata.SD);
                                            ht2.Add("iutid", carLogin.carbj.JCBGBH);
                                            ht2.Add("vdct", pdjg);
                                            ht2.Add("iuidate", DateTime.Now.ToString("yyyy-MM-dd"));
                                            ht2.Add("detectstarttime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("detectendtime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("vinflag", "1");
                                            ht2.Add("enginenumflag", "1");
                                            ht2.Add("icheck", carLogin.carbj.CZY);
                                            ht2.Add("checktime", zyjsdata.JCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("irs", zyjsdata.DSZS);
                                            ht2.Add("el", zyjsdata.YDXZ);
                                            ht2.Add("er1", zyjsdata.FIRSTDATA);
                                            ht2.Add("er2", zyjsdata.SECONDDATA);
                                            ht2.Add("er3", zyjsdata.THIRDDATA);

                                            ht2.Add("er4", zyjsdata.FOURTHDATA);
                                            ht2.Add("era", zyjsdata.AVERAGEDATA);
                                            ht2.Add("rotatespeedlu", zyjsdata.DSZS);

                                            ht2.Add("rotatespeedld", zyjsdata.DSZS);
                                            ht2.Add("rotatespeed", zyjsdata.DSZS);
                                            ht2.Add("flowmeter", "");
                                            ht2.Add("fprovider", "");
                                            ht2.Add("smokemeter", zyjsdata.YDJXH);
                                            ht2.Add("sprovider", zyjsdata.YDJZZC);
                                            ht2.Add("tachometer", zyjsdata.ZSJXH);
                                            ht2.Add("tprovider", zyjsdata.ZSJZZC);
                                            ht2.Add("otsensor", "");
                                            ht2.Add("oprovider", "");
                                            ht2.Add("weatherstationtype", "");
                                            ht2.Add("weatherstationprovider", "");
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 0, ht2, null, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传结果数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传结果数据成功");
                                            }
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HHZNNETMODE)
                                        {
                                            #region 红河州
                                            ini.INIIO.saveLogInf("红河州联网信息：结果判定");
                                            if (zyjsResultPd(zyjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            zyjsdata.JCBGBH = jcbgbh;
                                            zyjsdata.SHY = mainPanel.shy;
                                            zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCFF = "GB3847-2005";
                                            System.Collections.Hashtable hthhz = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz1 = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz2 = new System.Collections.Hashtable();
                                            #region 基本信息
                                            //hthhz.Add("JCDJBM", carLogin.carbj.CLID);//检测登记编号
                                            //hthhz.Add("CLBM", carLogin.carbj.JCBGBH);
                                            //hthhz.Add("VIN", carLogin.modelbj.CLSBM);
                                            //hthhz.Add("HBXXKH", "2012");
                                            //hthhz.Add("CPHM", carLogin.carbj.CLHP);
                                            //hthhz.Add("CPLX", mainPanel.hhzinterface.HhzR_VEHICLE_CPYS.GetValue(carLogin.modelbj.CPYS, "0"));
                                            //hthhz.Add("CLLX", carLogin.modelbj.CLLX.Split('_')[0]);//5
                                            //hthhz.Add("CDRQ", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd"));
                                            //hthhz.Add("LXDZ", carLogin.modelbj.CZDZ);
                                            //hthhz.Add("CZDW", carLogin.modelbj.CZ);
                                            //hthhz.Add("LZDH", carLogin.modelbj.LXDH);//疑问，不是LXDH
                                            //hthhz.Add("SFJF", "1");
                                            //hthhz.Add("SFYXFB", "0");
                                            //hthhz.Add("BYXFBYY", "1");
                                            //hthhz.Add("JCDJRQ", carLogin.carbj.DLSJ.ToString("yyyy-MM-dd"));
                                            //hthhz.Add("FBYBM", "123456");//转换为编号 
                                            //hthhz.Add("BZLX", "1");
                                            //hthhz.Add("XZBM", "1234");
                                            //hthhz.Add("JCZQBM", "1");
                                            //hthhz.Add("SFFK", "0");
                                            //hthhz.Add("LCBDS", carLogin.carbj.XSLC);
                                            //hthhz.Add("SFMJC", "1");
                                            //hthhz.Add("SFYOBD", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.OBD, "0"));
                                            //hthhz.Add("CXH", carLogin.modelbj.XH);
                                            //hthhz.Add("CP", carLogin.modelbj.PP);//15
                                            //hthhz.Add("SFDK", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.DKGYYB, "0"));//25
                                            //hthhz.Add("CLZL", mainPanel.hhzinterface.HhzR_VEHICLE_CLZL.GetValue(carLogin.modelbj.CLZL, "0"));
                                            //hthhz.Add("JZZL", carLogin.modelbj.JZZL);
                                            //hthhz.Add("ZDZL", carLogin.modelbj.ZZL);
                                            //hthhz.Add("QDXX", mainPanel.hhzinterface.HhzR_VEHICLE_QDXS.GetValue(carLogin.modelbj.QDXS, "0"));
                                            //hthhz.Add("BSQXS", mainPanel.hhzinterface.HhzR_VEHICLE_BSQXS.GetValue(carLogin.modelbj.BSQXS, "0"));//20
                                            //hthhz.Add("RYZL", mainPanel.hhzinterface.HhzR_VEHICLE_RLZL.GetValue(carLogin.modelbj.RLZL, "0"));
                                            //hthhz.Add("GYFS", mainPanel.hhzinterface.HhzR_VEHICLE_GYFS.GetValue(carLogin.modelbj.GYFS, "0"));
                                            //hthhz.Add("KH", carLogin.modelbj.CLLX.StartsWith("K") ? "K" : "H");
                                            //hthhz.Add("ZW", carLogin.modelbj.HDZK);
                                            //hthhz.Add("FDJEDZS", carLogin.modelbj.EDZS);
                                            //hthhz.Add("FDJPL", carLogin.modelbj.FDJPL);
                                            //hthhz.Add("FDJEDGL", carLogin.modelbj.EDGL);
                                            //hthhz.Add("JQFS", mainPanel.hhzinterface.HhzR_VEHICLE_JQFS.GetValue(carLogin.modelbj.JQFS, "0"));//41
                                            //hthhz.Add("QGSL", carLogin.modelbj.QGS);
                                            //hthhz.Add("SFYJHZZ", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.JHZZ, "0"));
                                            //hthhz.Add("JCDJJG", "1");
                                            //hthhz.Add("JCSFHG", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.ZHPD, ""));
                                            //hthhz.Add("SFYJFB", "0");
                                            //hthhz.Add("SFCGXK", "1");
                                            //hthhz.Add("DJYBM",carLogin.hhzOperatorID);
                                            //hthhz.Add("WGJCRQ", carLogin.carbj.DLSJ.ToString("yyyy-MM-dd HH:mm:ss"));//?
                                            //hthhz.Add("JCZBM", mainPanel.stationid);
                                            //hthhz.Add("JCXBM", mainPanel.stationid + mainPanel.lineid);
                                            //hthhz.Add("WQJCRQ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            //hthhz.Add("SFYXSXJC", "1");
                                            //hthhz.Add("SFCJ", carLogin.carbj.JCCS == "1" ? "0" : "1");
                                            //hthhz.Add("FDJH", carLogin.modelbj.FDJHM);
                                            //hthhz.Add("ZZ", carLogin.modelbj.HDZZL);
                                            //hthhz.Add("JCLX", mainPanel.hhzinterface.HhzR_RESULT_JCLX.GetValue(carLogin.modelbj.JCLB, "0"));//检测类型
                                            //hthhz.Add("DPFS", mainPanel.hhzinterface.HhzR_VEHICLE_DPFS.GetValue(carLogin.modelbj.DPFS, "0"));
                                            //hthhz.Add("HBBZFBSFDY", "0");
                                            //hthhz.Add("SFDYHGZ", "0");
                                            //hthhz.Add("JCZQS", "2");
                                            //hthhz.Add("BZQJCCS", carLogin.carbj.JCCS);
                                            //hthhz.Add("FGKXZBH", "0");
                                            //hthhz.Add("SCSJ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            //hthhz.Add("JCFF", mainPanel.hhzinterface.HhzR_RESULT_JCFF.GetValue(carLogin.carbj.JCFF, ""));

                                            hthhz.Add("tsno", mainPanel.stationid);//检测登记编号
                                            hthhz.Add("testlineno", mainPanel.stationid + "0" + mainPanel.lineid);
                                            hthhz.Add("testpersonno", carLogin.hhzDriverID);
                                            hthhz.Add("testno", carLogin.carbj.JCBGBH);
                                            hthhz.Add("carno", carLogin.carbj.JYLSH);
                                            hthhz.Add("testtype", mainPanel.hhzinterface.HhzR_RESULT_JCFF.GetValue(carLogin.carbj.JCFF, "0"));
                                            hthhz.Add("testtimes", carLogin.carbj.JCCS);//5
                                            hthhz.Add("testdate", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hthhz.Add("testdateend", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hthhz.Add("result", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(zyjsdata.ZHPD, "0"));
                                            hthhz.Add("license", carLogin.modelbj.CLHP);//疑问，不是LXDH
                                            hthhz.Add("vin", carLogin.modelbj.CLSBM);
                                            hthhz.Add("registerdate", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd"));
                                            hthhz.Add("mdate", carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd"));
                                            hthhz.Add("vehiclemodel", carLogin.modelbj.XH);//转换为编号 
                                            hthhz.Add("engine", carLogin.modelbj.FDJXH);
                                            hthhz.Add("standard", mainPanel.hhzinterface.HhzR_VEHICLE_PFBZ.GetValue(carLogin.modelbj.ZXBZ, "0"));
                                            hthhz.Add("odometer", carLogin.carbj.XSLC);
                                            hthhz.Add("barometric", zyjsdata.DQY);
                                            hthhz.Add("humidity", zyjsdata.SD);
                                            hthhz.Add("temperature", zyjsdata.WD);
                                            hthhz.Add("exchangetime", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            #endregion
                                            #region 结果信息
                                            hthhz1.Add("testno", carLogin.carbj.JCBGBH);
                                            hthhz1.Add("idlerev", zyjsdata.DSZS);
                                            hthhz1.Add("smokeklimit", zyjsdata.YDXZ);
                                            hthhz1.Add("smokek", zyjsdata.FOURTHDATA);
                                            hthhz1.Add("smokek2", zyjsdata.FIRSTDATA);
                                            hthhz1.Add("smokek3", zyjsdata.SECONDDATA);
                                            hthhz1.Add("smokek4", zyjsdata.THIRDDATA);
                                            hthhz1.Add("smokeavg", zyjsdata.AVERAGEDATA);
                                            hthhz1.Add("smokejudge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(zyjsdata.ZHPD, ""));
                                            hthhz1.Add("exchangetime", DateTime.Now.ToString("yyyy-MM-dd"));

                                            //hthhz2.Add("type", "UPLOAD");
                                            //hthhz2.Add("JCZBM", mainPanel.stationid);
                                            hthhz2.Add("jcff", "BTGYD_RESULT");
                                            // hthhz2.Add("jcff", "DOUBLE_IDLE");
                                            // hthhz2.Add("CHECK_REGIST_TASK", hthhz);
                                            hthhz2.Add("jcjbxx", hthhz);
                                            //hthhz2.Add("DOUBLE_IDLE_TASK", hthhz1);
                                            hthhz2.Add("BTGYD_RESULT", hthhz1);
                                            #endregion
                                            try
                                            {
                                                string hhz_jcbgbh = "";
                                                sendPicture(asmdata.ZHPD);
                                                string code, msg;
                                                Newtonsoft.Json.Linq.JObject queryJobject = new Newtonsoft.Json.Linq.JObject();
                                                if (mainPanel.hhzinterface.uploadJsonArray(mainPanel.stationid, hthhz2, HhzWebClient.Hhzclient.DATALX.JCXX, out code, out msg, out queryJobject))
                                                {
                                                    try
                                                    {
                                                        if (code == "0" || code == "051")
                                                        {
                                                            ini.INIIO.saveLogInf("上传成功,code=" + code);
                                                        }
                                                        else
                                                        {
                                                            string codemsg = mainPanel.hhzinterface.Hhz_AckCode.GetValue(code, "");
                                                            MessageBox.Show("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                            Msg(label1, panel4, "上传检测数据至联网平台失败");
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        ini.INIIO.saveLogInf("读取上传返回信息异常:" + er.Message);
                                                        //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                        Msg(label1, panel4, "读取上传返回信息异常:" + er.Message);
                                                        return;
                                                    }
                                                }
                                                else
                                                {

                                                    ini.INIIO.saveLogInf("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                    MessageBox.Show("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                    Msg(label1, panel4, "上传检测数据至联网平台失败");
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测数据失败,发生异常\r\n" + er.Message);
                                                MessageBox.Show("上传检测数据失败\r\n,发生异常\r\n" + er.Message);
                                                Msg(label1, panel4, "上传检测数据至联网平台失败,发生异常");
                                                return;
                                            }
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("红河州联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("红河州联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                            }
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(zyjsdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆：" + zyjsdata.CLPH);
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                        {
                                            #region 中科宇图
                                            ini.INIIO.saveLogInf("中科宇图联网信息：结果判定");
                                            if (zyjsResultPd(zyjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            zyjsdata.JCBGBH = jcbgbh;
                                            zyjsdata.SHY = mainPanel.shy;
                                            zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCFF = "GB3847-2005";
                                            System.Collections.Hashtable hthhz = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz1 = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz2 = new System.Collections.Hashtable();
                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            if (!uploadStartSuccess)
                                            {
                                                #region 上传检测开始命令
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendStart);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测开始命令，time=" + jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        {
                                                        }
                                                        ini.INIIO.saveLogInf("上传检测开始失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));

                                                        MessageBox.Show("检测开传上传失败", "错误提示");
                                                        return;
                                                    }
                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStartSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测开始成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                                }
                                                #endregion
                                            }
                                            if (!uploadHCSuccess)
                                            {
                                                #region 上传HC

                                                #endregion
                                            }

                                            #region 上传过程数据
                                            if (dataseconds.Rows.Count > 0)
                                            {
                                                ini.INIIO.saveLogInf("过程数据记录有" + dataseconds.Rows.Count.ToString() + "数据");
                                                ini.INIIO.saveLogInf("开始上传检测过程数据，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                try
                                                {
                                                    int timecount = dataseconds.Rows.Count - 1;
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                        {
                                                            mainPanel.yichangInterface.lightproofSmokeLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                            DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                            dataseconds.Rows[i]["时序类别"].ToString(),
                                                            i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["烟度值读数"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["发动机转速"].ToString()), 0));
                                                        }
                                                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                        {//其他地方协议里未要求上传自由加速过程数据
                                                            /*mainPanel.yichangInterfaceOther.lightproofSmokeLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                            DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                            dataseconds.Rows[i]["时序类别"].ToString(),
                                                            i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["烟度值读数"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["发动机转速"].ToString()), 0));*/
                                                        }
                                                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                                        {
                                                            mainPanel.yichangInterfaceYnbs.btgGcsj(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                            DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                            dataseconds.Rows[i]["时序类别"].ToString(),
                                                            i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["烟度值读数"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["发动机转速"].ToString()), 0));
                                                        }
                                                        ini.INIIO.saveLogInf("[过程数据" + i + "]:" + "lightproofSmokeLog(" + carLogin.carbj.JYLSH + "," +
                                                            mainPanel.zkytwebinf.regcode + "," +
                                                            DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss")+","+
                                                            dataseconds.Rows[i]["时序类别"].ToString()+ "," +
                                                            i.ToString() + "," +
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["烟度值读数"].ToString()), 2).ToString() + "," +
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["发动机转速"].ToString()), 0).ToString()+")");
                                                        Thread.Sleep(10);
                                                    }
                                                    uploadProcessSuccess = true;
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    ini.INIIO.saveLogInf("上传检测过程数据完毕，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                }
                                                catch (Exception er)
                                                {
                                                    MessageBox.Show("上传过程数据失败\r\n" + "异常：" + er.Message);
                                                    Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                    return;
                                                }
                                            }
                                            #endregion
                                            #region 上传检测结束
                                            try
                                            {
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendFinish);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测结束命令，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        { }
                                                        ini.INIIO.saveLogInf("上传检测结束失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        MessageBox.Show("上传检测结束指令失败");
                                                        Msg(label1, panel4, "上传检测结束指令失败");
                                                        return;
                                                    }

                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStopSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测结束成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测结束指令异常:" + er.Message);
                                                //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                Msg(label1, panel4, "上传检测结束指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 上传检测结果
                                            try
                                            {
                                                ini.INIIO.saveLogInf("开始上传数据");
                                                string result, info;
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                mainPanel.webthread.smokeValue1 = double.Parse(zyjsdata.FIRSTDATA);
                                                mainPanel.webthread.smokeValue2 = double.Parse(zyjsdata.SECONDDATA);
                                                mainPanel.webthread.smokeValue3 = double.Parse(zyjsdata.THIRDDATA);
                                                mainPanel.webthread.tempreture = double.Parse(zyjsdata.WD);
                                                mainPanel.webthread.humidity = double.Parse(zyjsdata.SD);
                                                mainPanel.webthread.airPressure = double.Parse(zyjsdata.DQY);
                                                mainPanel.webthread.timeStart = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                mainPanel.webthread.timeEnd = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendBtgResult);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测结果，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        reSend++;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        { }
                                                        ini.INIIO.saveLogInf("上传检测结果失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        ini.INIIO.saveLogInf("上传检测结果指令失败,超时");
                                                        Msg(label1, panel4, "上传检测结果指令失败,超时");
                                                        return;
                                                    }
                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadResultSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测结果成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);
                                                    if (result == "0")
                                                    {
                                                        ini.INIIO.saveLogInf("上传检测结果指令失败:" + info);
                                                        Msg(label1, panel4, "上传检测结果指令失败:" + info);
                                                        MessageBox.Show(info);
                                                        return;
                                                    }

                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测结果指令异常:" + er.Message);
                                                //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                Msg(label1, panel4, "上传检测结果指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 读取平台判定结果   
                                            if (mainPanel.zkytwebinf.displayCheckResult)
                                                try
                                            {
                                                string result="", info="";


                                                string smokeValue1 = ""; string smokeValue2 = ""; string smokeValue3 = ""; string avgSmoke = ""; string smokeLimit = ""; string result4 = "";

                                                if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                {
                                                    mainPanel.xmlanalysis.ReadBtgCheckResultString(mainPanel.yichangInterface.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                    out smokeValue1, out smokeValue2, out smokeValue3, out avgSmoke, out smokeLimit, out result4);
                                                }
                                                    else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                    {
                                                    mainPanel.xmlanalysis.ReadBtgCheckResultString(mainPanel.yichangInterfaceOther.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                      out smokeValue1, out smokeValue2, out smokeValue3, out avgSmoke, out smokeLimit, out result4);
                                                    }
                                                else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                                    {
                                                        result = "";
                                                        info = "该地区不支持该接口";
                                                    }
                                                    if (result == "1")
                                                {
                                                    zyjsdata.FIRSTDATA = smokeValue1;
                                                    zyjsdata.SECONDDATA = smokeValue2;
                                                    zyjsdata.THIRDDATA = smokeValue3;
                                                    zyjsdata.AVERAGEDATA = avgSmoke;
                                                    zyjsdata.YDXZ = smokeLimit;
                                                    zyjsdata.YDPD = result4;
                                                    zyjsdata.ZHPD = result4;
                                                }
                                                else
                                                {
                                                    ini.INIIO.saveLogInf("读取平台结果指令失败:" + info);
                                                    Msg(label1, panel4, "读取平台结果指令失败:" + info);
                                                    MessageBox.Show(info);
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("读取平台结果指令异常:" + er.Message);
                                                Msg(label1, panel4, "读取平台结果指令异常:" + er.Message);
                                                MessageBox.Show("读取平台结果指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 显示结果
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (zyjsdata.ZHPD == "合格")
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult ? "车辆检测合格" : "车辆检测完毕";
                                                ini.INIIO.saveLogInf("联网信息：判定结果合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕";
                                                ini.INIIO.saveLogInf("联网信息：判定结果不合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                            }
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                            #endregion
                                        }
                                        else
                                        {
                                            #region 其他
                                            ini.INIIO.saveLogInf("判定检测结果");
                                            if (zyjsResultPd(zyjs_data) == true)
                                            {
                                                ini.INIIO.saveLogInf("检测结果：合格");
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE||mainPanel.NetMode==mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE || mainPanel.NetMode == mainPanel.EZNETMODE||mainPanel.NetMode==mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测合格");
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("检测结果：不合格");
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE || mainPanel.NetMode == mainPanel.EZNETMODE || mainPanel.NetMode == mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测不合格");
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                            }
                                            zyjsdata.JCBGBH = jcbgbh;
                                            zyjsdata.SHY = mainPanel.shy;
                                            zyjsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            zyjsdata.JCFF = "GB3847-2005";
                                            ini.INIIO.saveLogInf("保存BTG检测结果到数据库");
                                            zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                            ini.INIIO.saveLogInf("车辆检测结果保存成功");
                                            if (mainPanel.isNetUsed)
                                            {
                                                if (mainPanel.NetMode == mainPanel.WGNETMODE)
                                                {
                                                    #region 万国
                                                    carinfor.WGBasicTestData basicdata = new carinfor.WGBasicTestData();
                                                    basicdata.JCBGBH = jcbgbh;
                                                    basicdata.JCLXBH = thisjcff;
                                                    basicdata.JCLXMC = thisjcffmc;
                                                    basicdata.JCGWH = mainPanel.lineid;
                                                    basicdata.JCZBH = mainPanel.wgsocketinf.JCZBH;
                                                    basicdata.JCZMC = mainPanel.stationinfmodel.STATIONNAME;
                                                    basicdata.JCRQ = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    basicdata.JCLRY = carLogin.carbj.DLY;
                                                    basicdata.JCCZY = carLogin.carbj.CZY;
                                                    basicdata.JCJSY = carLogin.carbj.JSY;
                                                    basicdata.CPHM = carLogin.carbj.CLHP;
                                                    basicdata.SFCJ = (int.Parse(carLogin.carbj.JCCS) > 1) ? "复检" : "初检";
                                                    basicdata.JCCS = carLogin.carbj.JCCS;
                                                    basicdata.SFLJ = "否";
                                                    basicdata.SFCS = carLogin.carbj.SFCS;
                                                    basicdata.FWLX = "正常";
                                                    basicdata.PDJG = zyjsdata.ZHPD;
                                                    basicdata.BGJCFFYY = carLogin.bgffyy;
                                                    basicdata.WXBJ = carLogin.wxbj;
                                                    basicdata.WXCD = carLogin.wxcd;
                                                    basicdata.WXSJ = carLogin.wxsj;
                                                    basicdata.WXFY = carLogin.wxfy;
                                                    if (!mainPanel.wgsocket.SendBasicTestData(basicdata))
                                                    {
                                                        MessageBox.Show("基本结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    carinfor.WGCommonTestData comondata = new carinfor.WGCommonTestData();
                                                    carinfor.WGBTGresultData wgdata = new carinfor.WGBTGresultData();
                                                    comondata.SBRZBM = mainPanel.wgsocketinf.SBRZBH;
                                                    comondata.SBMC = mainPanel.equipmodel.SBMC;
                                                    comondata.SBXH = mainPanel.equipmodel.SBXH;
                                                    comondata.SBZZC = mainPanel.equipmodel.SBZZC;
                                                    comondata.DPCGJ = "--";
                                                    comondata.PQFXY = mainPanel.equipmodel.YDJXH;
                                                    comondata.LLJ = "";
                                                    wgdata.JCBGBH = jcbgbh;
                                                    wgdata.WD = zyjsdata.WD;
                                                    wgdata.XDSD = zyjsdata.SD;
                                                    wgdata.DQY = zyjsdata.DQY;
                                                    wgdata.FDJDSZS = zyjsdata.DSZS;
                                                    wgdata.ZHDSCCSZ = zyjsdata.THIRDDATA;
                                                    wgdata.ZHDECCSZ = zyjsdata.SECONDDATA;
                                                    wgdata.ZHDYCCSZ = zyjsdata.FIRSTDATA;
                                                    wgdata.PJZ = zyjsdata.AVERAGEDATA;
                                                    wgdata.XZ = zyjsdata.YDXZ;
                                                    wgdata.PDJG = zyjsdata.ZHPD;
                                                    wgdata.SHY = mainPanel.shy;
                                                    wgdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    wgdata.YW = fdjyw.ToString("0");
                                                    if (!mainPanel.wgsocket.SendBtgresultData(comondata, wgdata))
                                                    {
                                                        MessageBox.Show("结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.CCNETMODE)
                                                {
                                                    #region 诚创
                                                    string code, message;

                                                    if (mainPanel.ccsocket.SendInspectionEnd(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message))
                                                    {
                                                        if (code != "1")
                                                        {
                                                            Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                            return;
                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息成功");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                        ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                        return;
                                                    }
                                                    carinfor.dataMainTxt datamaintxt = new carinfor.dataMainTxt();
                                                    datamaintxt.jcbh = carLogin.carbj.CLID;
                                                    datamaintxt.clhp = carLogin.carbj.CLHP;
                                                    datamaintxt.hpzl = carLogin.modelbj.CPYS;
                                                    datamaintxt.vin = carLogin.modelbj.CLSBM;
                                                    datamaintxt.czy = carLogin.carbj.CZY;
                                                    datamaintxt.jsy = carLogin.carbj.JSY;
                                                    datamaintxt.wd = zyjsdata.WD;
                                                    datamaintxt.sd = zyjsdata.SD;
                                                    datamaintxt.dqy = zyjsdata.DQY;
                                                    datamaintxt.jcsxh = jcsxh;
                                                    datamaintxt.cj = (zyjsdata.ZHPD == "合格") ? "1" : "0";
                                                    datamaintxt.jccs = carLogin.carbj.JCCS;
                                                    datamaintxt.ljsxlc = carLogin.carbj.XSLC;
                                                    datamaintxt.lsh = carLogin.carbj.JCBGBH;
                                                    datamaintxt.jckssj = zyjsdata.JCKSSJ;
                                                    datamaintxt.jcjssj = zyjsdata.JCJSSJ;
                                                    datamaintxt.jyr = zyjsdata.SHY;
                                                    datamaintxt.jcbgbh = carLogin.carbj.JCBGBH;
                                                    if (mainPanel.ccsocket.writeDataMainTxt(datamaintxt))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成失败");
                                                        Msg(label1, panel4, "写主检测信息数据成失败");
                                                        return;
                                                    }
                                                    carinfor.DataResultBtg dataresult = new carinfor.DataResultBtg();
                                                    dataresult.jcbh = carLogin.carbj.CLID;
                                                    dataresult.dszs = zyjsdata.DSZS;
                                                    dataresult.ydxz = zyjsdata.YDXZ;
                                                    dataresult.firstdata = zyjsdata.FIRSTDATA;
                                                    dataresult.seconddata = zyjsdata.SECONDDATA;
                                                    dataresult.thirddata = zyjsdata.THIRDDATA;
                                                    dataresult.averagedata = zyjsdata.AVERAGEDATA;
                                                    dataresult.pd = ((zyjsdata.ZHPD == "合格") ? "1" : "0");
                                                    if (mainPanel.ccsocket.writeDataResult(dataresult))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写不透光烟度法检测结果数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写不透光烟度法检测结果数据成失败");
                                                        Msg(label1, panel4, "写不透光烟度法检测结果数据成失败");
                                                        return;
                                                    }
                                                    bool uploadOK = false;
                                                    for (int i = 0; i < 3; i++)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）" + (i + 1).ToString() + "Upload");
                                                        if (mainPanel.ccsocket.WaitUploadFinish(out code, out message, out uploadOK))
                                                        {
                                                            if (code == "1")
                                                            {
                                                                if (uploadOK)
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload成功");
                                                                    break;
                                                                }
                                                                else
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload失败");
                                                                    //Msg(label1, panel4, "Upload失败");
                                                                    continue;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                                //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                                continue;
                                                            }

                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                            //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                            continue;
                                                        }
                                                    }
                                                    if (!uploadOK)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）Upload三次上传失败");
                                                        //return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.ORTNETMODE)
                                                {
                                                    #region ort net mode
                                                    string code, message;
                                                    carinfor.OrtFreeACCVehicleInfo vehicleinf = new carinfor.OrtFreeACCVehicleInfo();
                                                    vehicleinf.License = carLogin.modelbj.CLHP;
                                                    vehicleinf.LicenseClass = carLogin.modelbj.CPYS;
                                                    vehicleinf.Fuel = carLogin.modelbj.RLZL;
                                                    vehicleinf.VLTID = carLogin.modelbj.ZZL;
                                                    vehicleinf.Mileage = carLogin.carbj.XSLC;
                                                    vehicleinf.OwnerName = carLogin.modelbj.CZ;
                                                    vehicleinf.OwnerAddr = carLogin.modelbj.CZDZ;
                                                    vehicleinf.BodyColor = carLogin.modelbj.CSYS;
                                                    vehicleinf.EngineID = carLogin.modelbj.FDJHM;
                                                    vehicleinf.VIN = carLogin.modelbj.CLSBM;
                                                    vehicleinf.Cleaners = carLogin.modelbj.GYFS;
                                                    vehicleinf.Brand = carLogin.modelbj.PP;
                                                    vehicleinf.Model = carLogin.modelbj.XH;
                                                    vehicleinf.GATypeCode = carLogin.modelbj.CLLX.Split('_')[0];
                                                    vehicleinf.UseType = mainPanel.ortsocket.ORT_UseTypeR.GetValue(carLogin.modelbj.SYXZ, "");
                                                    vehicleinf.Area = carLogin.modelbj.SSXQ;
                                                    vehicleinf.EngineModel = carLogin.modelbj.FDJXH;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JQFS.Contains("增压") ? "是" : "否";
                                                    vehicleinf.RegData = carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.FactoryDate = carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.DriveType = carLogin.modelbj.QDXS;
                                                    vehicleinf.IsClosedLoopEFI = carLogin.modelbj.DPFS == "闭环电喷" ? "是" : "否";
                                                    vehicleinf.Is3WCC = carLogin.modelbj.JHZZ;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JHZZ;
                                                    vehicleinf.RateSpeed = carLogin.modelbj.EDZS;
                                                    vehicleinf.NominalPower = carLogin.modelbj.EDGL;
                                                    vehicleinf.Passengers = carLogin.modelbj.HDZK;
                                                    vehicleinf.BaseWeight = carLogin.modelbj.JZZL;
                                                    vehicleinf.Cylinders = carLogin.modelbj.QGS;
                                                    vehicleinf.IfGoIntoCity = carLogin.modelbj.SFWDZR;
                                                    vehicleinf.Stage = mainPanel.ortsocket.ORT_PhaseR.GetValue(carLogin.modelbj.ZXBZ, "");

                                                    carinfor.OrtFreeACCResult resultinf = new carinfor.OrtFreeACCResult();

                                                    resultinf.TestID = carLogin.carbj.JCBGBH;
                                                    resultinf.License = carLogin.carbj.CLHP;
                                                    resultinf.LicenseClass = carLogin.carbj.CPYS;
                                                    if (int.Parse(carLogin.modelbj.ZZL) <= 3500)
                                                        resultinf.VehicleType = "轻型车辆";
                                                    else if (int.Parse(carLogin.modelbj.ZZL) > 10000)
                                                        resultinf.VehicleType = "重型车辆";
                                                    else
                                                        resultinf.VehicleType = "中型车辆";
                                                    resultinf.TestType = carLogin.carbj.SFCJ;
                                                    resultinf.Region = carLogin.modelbj.SSXQ;
                                                    resultinf.Phase = carLogin.modelbj.ZXBZ;
                                                    resultinf.StationID = mainPanel.stationid;
                                                    resultinf.EISID = mainPanel.stationinfmodel.StationCompany + mainPanel.lineid;
                                                    resultinf.OperatorID = carLogin.carbj.CZY;
                                                    resultinf.AmbientTemp = zyjsdata.WD;
                                                    resultinf.AmbientHum = zyjsdata.SD;
                                                    resultinf.Pressure = zyjsdata.DQY;
                                                    resultinf.TestStartTime = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    resultinf.TestEndTime = jssj.ToString("yyyy-MM-dd HH:mm:ss");

                                                    resultinf.IdleSpeed = zyjsdata.DSZS;
                                                    resultinf.Smoke1 = zyjsdata.FIRSTDATA;
                                                    resultinf.Smoke2 = zyjsdata.SECONDDATA;
                                                    resultinf.Smoke3 = zyjsdata.THIRDDATA;
                                                    resultinf.SmokeAve = zyjsdata.AVERAGEDATA;
                                                    resultinf.SmokeCutpoint = zyjsdata.YDXZ;
                                                    resultinf.Result = zyjsdata.ZHPD;
                                                    resultinf.CrucialTime0 = CrucialTime0;
                                                    resultinf.CrucialTime1 = "";
                                                    resultinf.CrucialTime2 = "";
                                                    resultinf.CrucialTime3 = "";
                                                    resultinf.OutlookResult = "合格";
                                                    resultinf.AbortReason = "";
                                                    if (mainPanel.ortsocket.UploadFreeAccResult(vehicleinf, resultinf, out code, out message))
                                                    {

                                                        ini.INIIO.saveLogInf("（欧润特联网）写自由加速法检测结果数据成成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else if (mainPanel.ortsocket.UploadFreeAccResult(vehicleinf, resultinf, out code, out message))
                                                    {

                                                        ini.INIIO.saveLogInf("（欧润特联网）写自由加速法检测结果数据第一次失败，第二次成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（欧润特联网）写自由加速法检测结果数据成失败");
                                                        Msg(label1, panel4, "写自由加速法检测结果数据成失败");
                                                        return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                                {
                                                    #region 安车
                                                    if (mainPanel.isNetUsed)
                                                    {
                                                        if (!saveBtgResult2Net())
                                                        {
                                                            Thread.Sleep(1000);
                                                            if (!saveBtgResult2Net())
                                                            {
                                                                MessageBox.Show("结果数据上传服务器失败", "错误提示");
                                                                ini.INIIO.saveLogInf("联网信息：结果数据上传服务器失败");
                                                                return;
                                                            }
                                                        }
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                                {
                                                    车辆检测状态 teststate = new 车辆检测状态();
                                                    teststate.JCZBH = mainPanel.stationid;
                                                    teststate.LINEID = mainPanel.lineid;
                                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                                    teststate.JYCS = carLogin.carbj.JCCS;
                                                    teststate.JCSJ = DateTime.Now;
                                                    teststate.CLHP = carLogin.carbj.CLHP;
                                                    teststate.HPZL = carLogin.carbj.HPZL;
                                                    teststate.ZT = mainPanel.finishTest;
                                                    teststate.JCFF = carLogin.carbj.JCFF;
                                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                                }
                                                else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                                {
                                                    #region 江西
                                                    string code, msg;
                                                    
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        jxBtgProcessData processdata = new jxBtgProcessData(
                                                            dr["全程时序"].ToString(),
                                                            dr["时序类别"].ToString(),
                                                            i.ToString(),
                                                            dr["烟度值读数"].ToString(),
                                                             dr["发动机转速"].ToString());
                                                        if (!mainPanel.jxinterface.sendLightSmokeProcessData(carLogin.carbj.CLID, processdata, out code, out msg))
                                                        {
                                                            MessageBox.Show("sendLightSmokeProcessData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                            ini.INIIO.saveLogInf("江西联网信息：sendLightSmokeProcessData上传服务器失败");
                                                            return;
                                                        }
                                                    }
                                                    jxBtgResultData resultdata = new jxBtgResultData(
                                                        zyjsdata.CLID,
                                                        zyjsdata.WD,
                                                        zyjsdata.SD,
                                                        zyjsdata.DQY,
                                                        zyjsdata.DSZS,
                                                        zyjsdata.YDXZ,
                                                        zyjsdata.FOURTHDATA,
                                                        zyjsdata.FIRSTDATA,
                                                        zyjsdata.SECONDDATA,
                                                        zyjsdata.THIRDDATA,
                                                        zyjsdata.AVERAGEDATA,
                                                        zyjsdata.YDPD == "不合格" ? "0" : "1",
                                                        jcsj.ToString("yyyy-MM-dd HH:mm:ss"),
                                                        jssj.ToString("yyyy-MM-dd HH:mm:ss")
                                                        );
                                                    if (!mainPanel.jxinterface.sendLightSmokeResultData(carLogin.carbj.CLID, resultdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("sendLightSmokeResultData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：sendLightSmokeResultData上传服务器失败");
                                                        return;
                                                    }
                                                    if (!mainPanel.jxinterface.finish(carLogin.carbj.CLID, out code, out msg))
                                                    {
                                                        MessageBox.Show("finish上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：finish上传服务器失败");
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + zyjsdata.ZHPD + ",上传完毕");
                                                    #endregion 
                                                }
                                                else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                                {
                                                    #region 湖南
                                                    string code, msg;
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    System.Collections.Hashtable htdata = new System.Collections.Hashtable();
                                                    ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", zyjsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    DataTable dtinf = new DataTable();
                                                    if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送开始检测命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送开始检测命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("xh", carLogin.modelbj.XH);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("clxh", carLogin.modelbj.PP);
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("fdjxh", carLogin.modelbj.FDJXH);
                                                    ht.Add("fdjh", carLogin.modelbj.FDJHM);
                                                    ht.Add("cllx", carLogin.modelbj.CLLX.Split('_')[0]);
                                                    ht.Add("csys", mainPanel.hninterface.RHN_CSYS.GetValue(carLogin.modelbj.CSYS, ""));
                                                    ht.Add("syxz", mainPanel.hninterface.RHN_SYXZ.GetValue(carLogin.modelbj.SYXZ, ""));
                                                    ht.Add("syr", carLogin.modelbj.CZ);
                                                    ht.Add("ccdjrq", carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("rlzl", mainPanel.hninterface.RHN_RLZL.GetValue(carLogin.modelbj.RLZL, ""));
                                                    ht.Add("pl", carLogin.modelbj.FDJPL);
                                                    ht.Add("gl", carLogin.modelbj.EDGL);
                                                    ht.Add("zs", "2");
                                                    ht.Add("zj", "2800");
                                                    ht.Add("qlj", "");
                                                    ht.Add("hlj", "");
                                                    ht.Add("zzl", carLogin.modelbj.ZZL);
                                                    ht.Add("zbzl", carLogin.modelbj.ZBZL);
                                                    ht.Add("ccrq", carLogin.modelbj.SCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("zsxzqh", "");
                                                    ht.Add("zzxzqh", "");
                                                    ht.Add("zt", "");
                                                    ht.Add("jqfs", mainPanel.hninterface.RHN_JQFS.GetValue(carLogin.modelbj.JQFS, ""));
                                                    ht.Add("gyxs", mainPanel.hninterface.RHN_GYXS.GetValue(carLogin.modelbj.GYFS, ""));
                                                    ht.Add("yxqz", "");
                                                    ht.Add("xslc", carLogin.carbj.XSLC);
                                                    ht.Add("chzhq", (carLogin.modelbj.JHZZ == "无" || carLogin.modelbj.JHZZ == "否") ? "0" : "1");
                                                    ht.Add("edzs", carLogin.modelbj.EDZS);
                                                    ht.Add("qdlqy", carLogin.modelbj.QDLTQY);
                                                    ht.Add("dczz", carLogin.modelbj.SSXQ);
                                                    ht.Add("rygg", carLogin.modelbj.RYPH);
                                                    ht.Add("bsqxs", mainPanel.hninterface.RHN_BSQXS.GetValue(carLogin.modelbj.BSQXS, ""));
                                                    ht.Add("dws", carLogin.modelbj.DWS);
                                                    ht.Add("qgs", carLogin.modelbj.QGS);
                                                    ht.Add("edzk", carLogin.modelbj.HDZK);
                                                    ht.Add("hbdbqk", "");
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", zyjsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    //htdata.Add("glkqxssx", "1.03");
                                                    //htdata.Add("glkqxsxx", "0.97");
                                                    htdata.Add("btgpfxz", zyjsdata.YDXZ);
                                                    htdata.Add("btgpfjg1", zyjsdata.FIRSTDATA);
                                                    htdata.Add("btgpfjg2", zyjsdata.SECONDDATA);
                                                    htdata.Add("btgpfjg3", zyjsdata.THIRDDATA);
                                                    htdata.Add("btgpfpjz", zyjsdata.AVERAGEDATA);
                                                    htdata.Add("btgdszs", zyjsdata.DSZS);
                                                    htdata.Add("snaphjwd", zyjsdata.WD);
                                                    htdata.Add("snaphjsd", zyjsdata.SD);
                                                    htdata.Add("snaphjdqy", zyjsdata.DQY);
                                                    htdata.Add("snapfdjyw", zyjsdata.YW);
                                                    if (!mainPanel.hninterface.writeTestResult(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送结果数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    htdata.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", zyjsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    string HCGCSJ = "", COGCSJ = "", CO2GCSJ = "", O2GCSJ = "", NOXGCSJ = "", GLKQXSSJ = "", HCPFZLGCSJ = "", COPFZLGCSJ = "",
                                                        NOXPFZLGCSJ = "", LLJO2GCSJ = "", LLJSJLLGCSJ = "", LLJBZLLGCSJ = "", LLJWDGCSJ = "", QCWQLLGCSJ = "", LLJQYGCSJ = "", ZSGCSJ = "", YWGCSJ = "",
                                                        CSGCSJ = "", XSBGCSJ = "", XSXZGCSJ = "", SDXZGCSJ = "", JSGLGCSJ = "", ZSGLGCSJ = "", HJWDGCSJ = "", HJSDGCSJ = "", HJDQYGCSJ = "", YDZGCSJ = "",
                                                        GXSXSGCSJ = "";
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        GXSXSGCSJ += dr["烟度值读数"].ToString() + "#";
                                                        ZSGCSJ += dr["发动机转速"].ToString() + "#";
                                                        YDZGCSJ += dr["烟度值读数"].ToString() + "#";
                                                        HJDQYGCSJ += dr["大气压力"].ToString() + "#";
                                                        HJSDGCSJ += dr["相对湿度"].ToString() + "#";
                                                        HJWDGCSJ += dr["环境温度"].ToString() + "#";
                                                        YWGCSJ += dr["油温"].ToString() + "#";
                                                    }
                                                    GXSXSGCSJ.Remove(GXSXSGCSJ.Length - 1, 1);
                                                    ZSGCSJ.Remove(ZSGCSJ.Length - 1, 1);
                                                    YDZGCSJ.Remove(YDZGCSJ.Length - 1, 1);
                                                    HJDQYGCSJ.Remove(HJDQYGCSJ.Length - 1, 1);
                                                    HJSDGCSJ.Remove(HJSDGCSJ.Length - 1, 1);
                                                    HJWDGCSJ.Remove(HJWDGCSJ.Length - 1, 1);
                                                    YWGCSJ.Remove(YWGCSJ.Length - 1, 1);

                                                    htdata.Add("HCGCSJ", HCGCSJ);
                                                    htdata.Add("COGCSJ", COGCSJ);
                                                    htdata.Add("CO2GCSJ", CO2GCSJ);
                                                    htdata.Add("O2GCSJ", O2GCSJ);
                                                    htdata.Add("NOXGCSJ", NOXGCSJ);
                                                    htdata.Add("GLKQXSSJ", GLKQXSSJ);
                                                    htdata.Add("HCPFZLGCSJ", HCPFZLGCSJ);
                                                    htdata.Add("COPFZLGCSJ", COPFZLGCSJ);
                                                    htdata.Add("NOXPFZLGCSJ", NOXPFZLGCSJ);
                                                    htdata.Add("LLJO2GCSJ", LLJO2GCSJ);
                                                    htdata.Add("LLJSJLLGCSJ", LLJSJLLGCSJ);
                                                    htdata.Add("LLJBZLLGCSJ", LLJBZLLGCSJ);
                                                    htdata.Add("LLJWDGCSJ", LLJWDGCSJ);
                                                    htdata.Add("QCWQLLGCSJ", QCWQLLGCSJ);
                                                    htdata.Add("LLJQYGCSJ", LLJQYGCSJ);
                                                    htdata.Add("ZSGCSJ", ZSGCSJ);
                                                    htdata.Add("YWGCSJ", YWGCSJ);
                                                    htdata.Add("CSGCSJ", CSGCSJ);
                                                    htdata.Add("XSBGCSJ", XSBGCSJ);
                                                    htdata.Add("XSXZGCSJ", XSXZGCSJ);
                                                    htdata.Add("SDXZGCSJ", SDXZGCSJ);
                                                    htdata.Add("JSGLGCSJ", JSGLGCSJ);
                                                    htdata.Add("ZSGLGCSJ", ZSGLGCSJ);
                                                    htdata.Add("HJWDGCSJ", HJWDGCSJ);
                                                    htdata.Add("HJSDGCSJ", HJSDGCSJ);
                                                    htdata.Add("HJDQYGCSJ", HJDQYGCSJ);
                                                    htdata.Add("YDZGCSJ", YDZGCSJ);
                                                    htdata.Add("GXSXSGCSJ", GXSXSGCSJ);

                                                    if (!mainPanel.hninterface.writeTestDataSeconds(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送过程数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送过程数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + zyjsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.DALINETMODE)
                                                {
                                                    #region 大理
                                                    string code, msg;
                                                    string reportID;
                                                    sendPicture(zyjsdata.ZHPD);
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "VMAS": ht.Add("检测类别", "1"); break;
                                                        case "ASM": ht.Add("检测类别", "2"); break;
                                                        case "SDS": ht.Add("检测类别", "3"); break;
                                                        case "JZJS": ht.Add("检测类别", "4"); break;
                                                        case "ZYJS": ht.Add("检测类别", "5"); break;
                                                        case "LZ": ht.Add("检测类别", "6"); break;
                                                    }
                                                    ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                                    ht.Add("温度", zyjsdata.WD);
                                                    ht.Add("大气压", zyjsdata.DQY);
                                                    ht.Add("相对湿度", zyjsdata.SD);
                                                    ht.Add("发动机怠速转速", zyjsdata.DSZS);
                                                    ht.Add("最后第三次测量值", zyjsdata.FIRSTDATA);
                                                    ht.Add("最后第二次测量值", zyjsdata.SECONDDATA);
                                                    ht.Add("最后第一次测量值", zyjsdata.THIRDDATA);
                                                    ht.Add("平均值", zyjsdata.AVERAGEDATA);
                                                    ht.Add("限值", zyjsdata.YDXZ);
                                                    ht.Add("判定结果", zyjsdata.ZHPD);
                                                    ht.Add("审核员", mainPanel.shy);
                                                    ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    //DataTable dt = new DataTable();
                                                    if (!mainPanel.daliinterface.sendTestData(ht, 5, null, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送检测数据失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送检测数据失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + zyjsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.EZNETMODE)
                                                {
                                                    #region 鄂州
                                                    string code, msg;
                                                    try
                                                    {
                                                        EzWebClient.InspectionInformation data = new EzWebClient.InspectionInformation(
                                                            zyjsdata.ZHPD == "合格" ? "1" : "0",
                                                            zyjsdata.JCBGBH,
                                                            jssj.ToString("yyyyMMddHHmmss"),
                                                            mainPanel.ezinterface.EZR_inspectionmethod.GetValue(carLogin.carbj.JCFF, ""),
                                                            carLogin.carbj.JSY,
                                                            zyjsdata.JCBGBH,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            carLogin.carbj.JCCS,
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            mainPanel.stationid,
                                                            carLogin.modelbj.JCLB,
                                                            carLogin.modelbj.CLHP,
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.SCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJSCQY,
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.EDGL,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.modelbj.JZZL,
                                                             carLogin.carbj.XSLC,
                                                             carLogin.modelbj.QGS,
                                                             "Y",
                                                             "N",
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             DateTime.Now.ToString("yyyyMMddHHmmss"),
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "",
                                                             carLogin.carbj.CZY
                                                            );
                                                        if (!mainPanel.ezinterface.uploadInspectionInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("发送检测信息命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                            ini.INIIO.saveLogInf("发送检测信息命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        EzWebClient.ExternalLoginInformation data = new EzWebClient.ExternalLoginInformation(
                                                             mainPanel.stationid,
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             "N",
                                                             carLogin.modelbj.QGS,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             "Y",
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJHM,
                                                             "N",
                                                             "N",
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             carLogin.carbj.JCBGBH,
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.carbj.JCBGBH,
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             carLogin.modelbj.CLHP,
                                                             "N",
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.carbj.XSLC,

                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             "Y",
                                                             "N",
                                                             "",
                                                             carLogin.modelbj.CZDZ,
                                                             carLogin.modelbj.LXDH,
                                                             "Y",
                                                             carLogin.modelbj.EDGL,
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.JZZL,
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             carLogin.modelbj.CZ,

                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "1"
                                                            );
                                                        if (!mainPanel.ezinterface.uploadExternalLoginInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("新增外检登录信息失败,不能开始检测\r\ncode:" + code + "\r\nmessage:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("新增外检登录信息发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        EzWebClient.LightProofSmokeLog data = new EzWebClient.LightProofSmokeLog(
                                                            zyjsdata.AVERAGEDATA,
                                                            zyjsdata.YDXZ,
                                                            zyjsdata.JCBGBH,
                                                            zyjsdata.DSZS,
                                                            DateTime.Now.ToString("yyyyMMddHHmmss"),
                                                            "",
                                                            zyjsdata.ZHPD == "合格" ? "0" : "1",
                                                            carLogin.carbj.CZY,
                                                            zyjsdata.FOURTHDATA,
                                                            zyjsdata.FIRSTDATA,
                                                            zyjsdata.SECONDDATA,
                                                            zyjsdata.THIRDDATA,
                                                            mainPanel.stationid,
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            zyjsdata.JCBGBH,
                                                            zyjsdata.WD,
                                                            zyjsdata.SD,
                                                            zyjsdata.DQY,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            jssj.ToString("yyyyMMddHHmmss")
                                                            );
                                                        if (!mainPanel.ezinterface.uploadLightProofSmokeLog(data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    try
                                                    {
                                                        for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                        {
                                                            DataRow dr = dataseconds.Rows[i];
                                                            EzWebClient.EzIfaJcLightproofdata data = new EzWebClient.EzIfaJcLightproofdata(
                                                                mainPanel.stationid,
                                                                mainPanel.stationid + mainPanel.lineid,
                                                                jcsj.ToString("yyyyMMddHHmmss"),
                                                                jssj.ToString("yyyyMMddHHmmss"),
                                                                DateTime.Now.ToString("yyyyMMddHHmmss"),
                                                                zyjsdata.JCBGBH,
                                                                DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                                dr["发动机转速"].ToString(),
                                                                zyjsdata.JCBGBH,
                                                                dr["烟度值读数"].ToString(),
                                                                i.ToString(),
                                                                carLogin.carbj.CZY,
                                                                dr["时序类别"].ToString()
                                                                );
                                                            if (!mainPanel.ezinterface.uploadEzIfaJcLightproofdata(data, out code, out msg))
                                                            {
                                                                ini.INIIO.saveLogInf("发送过程数据[" + i.ToString() + "]命令失败,code" + code + ",msg:" + msg);
                                                            }
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    sendPicture(zyjsdata.ZHPD);
                                                    Msg(label1, panel4, "车辆检测" + asmdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.XBNETMODE)
                                                {
                                                    #region 喜邦
                                                    string code, msg;
                                                   
                                                    try
                                                    {
                                                        carinfo.XB_RESULT_PUBLIC_DATA pdata = new carinfo.XB_RESULT_PUBLIC_DATA();
                                                        carinfo.XB_BTG_RESULT_DATA data = new carinfo.XB_BTG_RESULT_DATA();
                                                        pdata.JCFFBH = carLogin.carbj.JCFF;
                                                        pdata.JCLSH = carLogin.carbj.JYLSH;
                                                        pdata.DLY = carLogin.carbj.DLY;
                                                        pdata.YCY = carLogin.carbj.JSY;
                                                        pdata.JCY = carLogin.carbj.CZY;
                                                        pdata.WD = zyjsdata.WD;
                                                        pdata.SD = zyjsdata.SD;
                                                        pdata.DQY = zyjsdata.DQY;
                                                        data.JCCS = carLogin.carbj.JCCS;
                                                        data.AshSorb1 = zyjs_data.prepareData1;
                                                        data.AshSorb2 = zyjs_data.prepareData2;
                                                        data.AshSorb3 = zyjs_data.prepareData3;
                                                        data.AshSorb4 = zyjsdata.FIRSTDATA;
                                                        data.AshSorb5 = zyjsdata.SECONDDATA;
                                                        data.AshSorb6 = zyjsdata.THIRDDATA;
                                                        data.AshSorbAge = zyjsdata.AVERAGEDATA;
                                                        data.AshSorbRpm = zyjsdata.DSZS;
                                                        
                                                        if (!mainPanel.xbsocket.Send_TEST_RESULT_DATA(pdata, data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                ini.INIIO.saveLogInf("联网信息：结果数据上传服务器成功");
                                                
                                            }
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(zyjsdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆：" + zyjsdata.CLPH);
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                        }
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("逐秒数据读取失败");
                                        isCsvAlive = "逐秒数据读取失败";
                                        Msg(label1, panel4, "未找到过程数据，检测无效");
                                    }
                                    #endregion 
                                }
                                File.Delete(newPath);
                                ini.INIIO.saveLogInf("删除结果文件：" + newPath);
                                break;
                                 #endregion
                            case "LZ":
                                #region 滤纸
                                zyjs_data = zyjsdatacontrol.readZyjsData(newPath);
                                if (zyjs_data.FirstData == "-1")
                                {
                                    Msg(label1, panel4, "设备未完成检测退出,无检测结果数据");
                                    Msg(labelStatus, panelStatus, "故障");
                                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                                    {
                                        string code, msg;
                                        if (!mainPanel.xbsocket.Send_TEST_STOP(carLogin.carbj.JYLSH, carLogin.carbj.JCCS, "用户主动终止", out code, out msg))
                                        {
                                            //MessageBox.Show("车辆检测开始失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                            ini.INIIO.saveLogInf("发送车辆检测终止失败,code" + code + ",msg:" + msg);
                                            //return;
                                        }
                                    }
                                    else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                    {
                                        string result;
                                        string errmsg = "";
                                        DataTable dt = new DataTable();
                                        Hashtable ht2 = new Hashtable();
                                        ht2.Add("stationcode", mainPanel.stationid);
                                        ht2.Add("linecode", mainPanel.lineid);
                                        ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                        ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                        if (!mainPanel.gxinterface.finishTest(ht2, out result, out errmsg))
                                        {
                                            ini.INIIO.saveLogInf("发送桂林联网结束检测失败,code=" + result + ",msg=" + errmsg);
                                        }
                                        else
                                        {
                                            ini.INIIO.saveLogInf("发送桂林联网结束检测成功");
                                        }
                                    }
                                    mainPanel.worklogdata.ProjectID = mainPanel.stationid + mainPanel.lineid + DateTime.Now.ToString("yyMMddHHmmss");//线号“00”代表为登录机进行的操作
                                    mainPanel.worklogdata.ProjectName = "操作日志";
                                    mainPanel.worklogdata.Stationid = mainPanel.stationid;
                                    mainPanel.worklogdata.Lineid = mainPanel.lineid;
                                    mainPanel.worklogdata.Czy = mainPanel.nowUser.userName;
                                    mainPanel.worklogdata.Data = "车辆" + carLogin.carbj.CLHP + "检测中止" + ",驾控员:" + carLogin.carbj.JSY + ",检测方法：" + carLogin.carbj.JCFF;
                                    mainPanel.worklogdata.State = "中止";
                                    mainPanel.worklogdata.Result = "";
                                    mainPanel.worklogdata.Date = DateTime.Now;
                                    mainPanel.worklogdata.Bzsm = "";
                                    mainPanel.demarcatecontrol.saveWordLogByIni(mainPanel.worklogdata);

                                }
                                else
                                {
                                    Msg(labelStatus, panelStatus, "检测完成");
                                    if (lzResultPd(zyjs_data) == true)
                                    {
                                        if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE|| mainPanel.NetMode == mainPanel.XBNETMODE))
                                        {
                                            Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                        }
                                        else
                                            Msg(label1, panel4, "车辆检测合格");
                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                    }
                                    else
                                    {
                                        if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE|| mainPanel.NetMode == mainPanel.XBNETMODE))
                                        {
                                            Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                        }
                                        else
                                            Msg(label1, panel4, "车辆检测不合格");
                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                    }
                                    zyjsdata.JCBGBH = jcbgbh;
                                    zyjsdata.SHY = mainPanel.shy;
                                    zyjsdata.SYNCHDATE = DateTime.Now.ToString();
                                    zyjsdata.JCKSSJ = jcsj.ToString();
                                    zyjsdata.JCJSSJ = jssj.ToString();
                                    zyjsdata.JCFF = lzbz;
                                    zyjsdal.Save_Zyjs_Btg(zyjsdata);
                                    if (mainPanel.isNetUsed)
                                    {
                                        if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                        {
                                            if (!saveBtgResult2Net())
                                            {
                                                MessageBox.Show("结果数据上传服务器失败", "错误提示");
                                                return;
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                        {
                                            string code, msg;
                                           
                                            
                                            jxLzResultData resultdata = new jxLzResultData(
                                                zyjsdata.CLID,
                                                zyjsdata.YDXZ,
                                                zyjsdata.FIRSTDATA,
                                                zyjsdata.SECONDDATA,
                                                zyjsdata.THIRDDATA,
                                                zyjsdata.AVERAGEDATA,
                                                zyjsdata.YDPD == "不合格" ? "0" : "1",
                                                jcsj.ToString("yyyy-MM-dd HH:mm:ss"),
                                                jssj.ToString("yyyy-MM-dd HH:mm:ss")
                                                );
                                            if (!mainPanel.jxinterface.sendFilterSmokeResultData(carLogin.carbj.CLID, resultdata, out code, out msg))
                                            {
                                                MessageBox.Show("sendFilterSmokeResultData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                ini.INIIO.saveLogInf("江西联网信息：sendFilterSmokeResultData上传服务器失败");
                                                return;
                                            }
                                            if (!mainPanel.jxinterface.finish(carLogin.carbj.CLID, out code, out msg))
                                            {
                                                MessageBox.Show("finish上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                ini.INIIO.saveLogInf("江西联网信息：finish上传服务器失败");
                                                return;
                                            }
                                            Msg(label1, panel4, "车辆检测" + zyjsdata.ZHPD + ",上传完毕");
                                        }
                                        else if (mainPanel.NetMode == mainPanel.XBNETMODE)
                                        {
                                            #region 喜邦
                                            string code, msg;

                                            try
                                            {
                                                carinfo.XB_RESULT_PUBLIC_DATA pdata = new carinfo.XB_RESULT_PUBLIC_DATA();
                                                carinfo.XB_LZ_RESULT_DATA data = new carinfo.XB_LZ_RESULT_DATA();
                                                pdata.JCFFBH = carLogin.carbj.JCFF;
                                                pdata.JCLSH = carLogin.carbj.JYLSH;
                                                pdata.DLY = carLogin.carbj.DLY;
                                                pdata.YCY = carLogin.carbj.JSY;
                                                pdata.JCY = carLogin.carbj.CZY;
                                                pdata.WD = zyjsdata.WD;
                                                pdata.SD = zyjsdata.SD;
                                                pdata.DQY = zyjsdata.DQY;
                                                data.AshTray1 = zyjsdata.FIRSTDATA;
                                                data.AshTray2 = zyjsdata.SECONDDATA;
                                                data.AshTray3 = zyjsdata.THIRDDATA;
                                                data.AshTray4 = "";
                                                data.AshTrayAge = zyjsdata.AVERAGEDATA;
                                                data.AshSorbRpm = zyjsdata.DSZS;

                                                if (!mainPanel.xbsocket.Send_TEST_RESULT_DATA(pdata, data, out code, out msg))
                                                {
                                                    ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                    MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                return;
                                            }
                                            Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                            #endregion
                                        }
                                    }
                                    if (mainPanel.useHyDatabase)
                                    {
                                        hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                    }
                                    else
                                    {
                                        mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(zyjsdata.CLPH);
                                    }
                                    enableButton(buttonOK, false);
                                    //buttonOK.Enabled = false;
                                    if (mainPanel.linemodel.AUTOPRINT == "Y")
                                        autoPrint(carLogin.carbj.CLID);
                                }
                                File.Delete(newPath);
                                break;
                            #endregion
                            case "SDS":
                                #region 双怠速
                                ini.INIIO.saveLogInf("将结果文件复制到位置：" + "D://dataseconds/" + carLogin.carbj.CLID + ".ini");
                                string sdsinifileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                if (ini.INIIO.createDir(sdsinifileDir))
                                    File.Copy(newPath, sdsinifileDir + "/"+ carLogin.carbj.CLID + ".ini", true);
                                sds_data = sdsdatacontrol.readSdsData(newPath);
                                if (sds_data.Co_low == "-1")
                                {
                                    #region 检测中止
                                    ini.INIIO.saveLogInf("设备未完成检测退出,无检测结果数据");
                                    mainPanel.ts1 = "设备未完成检测退出";
                                    mainPanel.ts2 = "无检测结果数据";
                                    if (mainPanel.isNetUsed)
                                    {
                                        if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                        {
                                            carinfor.equipmentStatus equipmentcontrol = new carinfor.equipmentStatus();
                                            equipmentcontrol.JCBGBH = jcbgbh;
                                            equipmentcontrol.JCGWH = mainPanel.lineid;
                                            equipmentcontrol.SJXL = sds_data.λ_value;
                                            equipmentcontrol.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            equipmentcontrol.writeEquipmentStatus('F');
                                            ini.INIIO.saveLogInf("安车联网信息：发送检测失败指令");
                                        }
                                        else if(mainPanel.NetMode==mainPanel.NEUSOFTNETMODE)
                                        {
                                            NeusoftUtil.UploadDIdleResult vmasresult = new NeusoftUtil.UploadDIdleResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = "";
                                            vmasresult.AirPressure = "";
                                            vmasresult.Humidity = "";
                                            vmasresult.LowIdleCO = "";
                                            vmasresult.LowIdleHC = "";
                                            vmasresult.HighIdleCO = "";
                                            vmasresult.HighIdleHC = "";
                                            vmasresult.LowIdleRev = "";
                                            vmasresult.HighIdleRev = "";
                                            vmasresult.Lambda = "";
                                            vmasresult.StartTime = "";
                                            vmasresult.StopReason = "9";
                                            vmasresult.Result = "2";
                                            vmasresult.LowRev = "";
                                            vmasresult.HighRev = "";
                                            vmasresult.AdjustZero = "";
                                            vmasresult.OilTemperature = "";
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadDIdleResultRequest(vmasresult, null, out result, out inf, out dtack);
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                mainPanel.neusoftsocket.UploadDIdleResultRequest(vmasresult, null, out ackresult, out errormessage);
                                            }
                                            ini.INIIO.saveLogInf("东软联网信息：发送检测失败指令");
                                        }
                                        else if (mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.StopInspect(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("StopInspect\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送StopInspect指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            ini.INIIO.saveLogInf("南华联网信息：发送检测终止命令");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                        {
                                            车辆检测状态 teststate = new 车辆检测状态();
                                            teststate.JCZBH = mainPanel.stationid;
                                            teststate.LINEID = mainPanel.lineid;
                                            teststate.JYLSH = carLogin.carbj.JYLSH;
                                            teststate.JYCS = carLogin.carbj.JCCS;
                                            teststate.JCSJ = DateTime.Now;
                                            teststate.CLHP = carLogin.carbj.CLHP;
                                            teststate.HPZL = carLogin.carbj.HPZL;
                                            teststate.ZT = mainPanel.stopTest;
                                            teststate.JCFF = carLogin.carbj.JCFF;
                                            mainPanel.logininfcontrol.Save_TestState(teststate);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                        {
                                            string code, msg;
                                            mainPanel.jxinterface.stop(carLogin.jxthiscarinf.detectionId, out code, out msg);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                        {
                                            string code, msg;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                            ht.Add("jclsh", carLogin.carbj.CLID);
                                            ht.Add("hphm", carLogin.carbj.CLHP);
                                            ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                            ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                            ht.Add("jccs", carLogin.carbj.JCCS);
                                            ht.Add("ycy", carLogin.carbj.JSY);
                                            ht.Add("dly", carLogin.carbj.DLY);
                                            ht.Add("czy", carLogin.carbj.CZY);
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "ASM":
                                                    ht.Add("jcffid", "2"); break;
                                                case "VMAS":
                                                    ht.Add("jcffid", "3"); break;
                                                case "JZJS":
                                                    ht.Add("jcffid", "6"); break;
                                                case "ZYJS":
                                                    ht.Add("jcffid", "4"); break;
                                                case "SDS":
                                                    ht.Add("jcffid", "1"); break;
                                                case "LZ":
                                                    ht.Add("jcffid", "5"); break;

                                            }
                                            ht.Add("jczt", "2");
                                            ht.Add("jcbz", "3");
                                            ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                            ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                            DataTable dtinf = new DataTable();
                                            if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                            {
                                                MessageBox.Show("发送开始检测命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送开始检测命令失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                        {
                                            if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                            {
                                                mainPanel.yichangInterface.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                            {
                                                mainPanel.yichangInterfaceOther.sendMessage(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                            {
                                                mainPanel.yichangInterfaceYnbs.xxtz(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode, "04", "");
                                            }
                                            try
                                            {
                                                ini.INIIO.saveLogInf(carinidata.CarID + " sendMessage(" + carLogin.carbj.JYLSH + "," + mainPanel.zkytwebinf.regcode + ",04,)");
                                            }
                                            catch
                                            { }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                                        {
                                            string code, msg;
                                            if (!mainPanel.xbsocket.Send_TEST_STOP(carLogin.carbj.JYLSH, carLogin.carbj.JCCS, "用户主动终止", out code, out msg))
                                            {
                                                //MessageBox.Show("车辆检测开始失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送车辆检测终止失败,code" + code + ",msg:" + msg);
                                                //return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                        {
                                            string result;
                                            string errmsg = "";
                                            DataTable dt = new DataTable();
                                            Hashtable ht2 = new Hashtable();
                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("linecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            if (!mainPanel.gxinterface.finishTest(ht2, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测失败,code=" + result + ",msg=" + errmsg);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测成功");
                                            }
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                            mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                            mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                            mainPanel.opratormode.STATUS = "已中止";
                                            mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                            mainPanel.opratormode.YL1 = "";
                                            mainPanel.opratormode.YL2 = "";
                                            mainPanel.opratormode.YL3 = "";
                                            mainPanel.opratormode.YL4 = "";
                                            mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                        }
                                    }
                                    Msg(label1, panel4, "设备未完成检测退出,无检测结果数据");
                                    Msg(labelStatus, panelStatus, "故障");
                                    mainPanel.worklogdata.ProjectID = mainPanel.stationid + mainPanel.lineid + DateTime.Now.ToString("yyMMddHHmmss");//线号“00”代表为登录机进行的操作
                                    mainPanel.worklogdata.ProjectName = "操作日志";
                                    mainPanel.worklogdata.Stationid = mainPanel.stationid;
                                    mainPanel.worklogdata.Lineid = mainPanel.lineid;
                                    mainPanel.worklogdata.Czy = mainPanel.nowUser.userName;
                                    mainPanel.worklogdata.Data = "车辆" + carLogin.carbj.CLHP + "检测中止" + ",驾控员:" + carLogin.carbj.JSY + ",检测方法：" + carLogin.carbj.JCFF;
                                    mainPanel.worklogdata.State = "中止";
                                    mainPanel.worklogdata.Result = "";
                                    mainPanel.worklogdata.Date = DateTime.Now;
                                    mainPanel.worklogdata.Bzsm = "";
                                    mainPanel.demarcatecontrol.saveWordLogByIni(mainPanel.worklogdata);
                                    #endregion
                                }
                                else
                                {
                                    #region 检测有效
                                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                    {
                                        mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 4);
                                    }
                                    ini.INIIO.saveLogInf("检测完成，检测结果数据有效");
                                    mainPanel.ts1 = "检测完成";
                                    Msg(labelStatus, panelStatus, "检测完成");
                                    string isCsvAlive = "";
                                    DataTable dataseconds = csvreader.readCsv(newCsvPath);
                                    string fdjdszs = "0";
                                    string ddsjywd = "0";
                                    string gdszs = "0";
                                    string gdsjywd = "0";
                                    string yw = "0";
                                    string pdjg = "";
                                    string nhlambdapd = "";
                                    if (dataseconds != null)
                                    {
                                        ini.INIIO.saveLogInf("查询到过程数据");
                                        string fileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                        if (ini.INIIO.createDir(fileDir))
                                            File.Copy(newCsvPath, fileDir + "/" + carLogin.carbj.CLID + ".csv", true);
                                        ini.INIIO.saveLogInf("过程数据复制到位置：" + fileDir + "/" + carLogin.carbj.CLID + ".csv");
                                        isCsvAlive = saveSdsDataSeconds(dataseconds, carLogin.carbj.CLID, carLogin.carbj.CLHP, jcsj, out fdjdszs, out ddsjywd, out gdszs, out gdsjywd, out yw);
                                        ini.INIIO.saveLogInf("过程数据保存到数据库成功");
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                        {
                                            #region 大理联网时上传报告单基本信息并获取分配的检测报告编号
                                            string code, msg;
                                            string reportID;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "VMAS": ht.Add("检测类别", "1"); break;
                                                case "ASM": ht.Add("检测类别", "2"); break;
                                                case "SDS": ht.Add("检测类别", "3"); break;
                                                case "JZJS": ht.Add("检测类别", "4"); break;
                                                case "ZYJS": ht.Add("检测类别", "5"); break;
                                                case "LZ": ht.Add("检测类别", "6"); break;
                                            }
                                            ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                            ht.Add("检测站编号", mainPanel.stationid);
                                            ht.Add("检测工位号", mainPanel.daliwebinf.LINEID);
                                            ht.Add("检测日期", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("录入员", carLogin.carbj.DLY);
                                            ht.Add("操作员", carLogin.carbj.CZY);
                                            ht.Add("引车员", carLogin.carbj.JSY);
                                            ht.Add("检测开始日期", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("检测结束日期", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车牌号码", carLogin.carbj.CLHP);
                                            ht.Add("车牌颜色", carLogin.carbj.CPYS);
                                            ht.Add("车辆种类", carLogin.modelbj.CLZL);
                                            ht.Add("车辆类型", carLogin.modelbj.CLLX);
                                            ht.Add("车主类别", carLogin.modelbj.OBD);
                                            ht.Add("车主身份证号码", carLogin.modelbj.JSSZK);
                                            ht.Add("车主名称", carLogin.modelbj.CZ);
                                            ht.Add("联系地址", carLogin.modelbj.CZDZ);
                                            ht.Add("联系电话", carLogin.modelbj.LXDH);
                                            ht.Add("厂牌型号", carLogin.modelbj.PP);
                                            ht.Add("车辆品牌", carLogin.modelbj.PP);
                                            ht.Add("车辆型号", carLogin.modelbj.XH);
                                            ht.Add("使用性质", carLogin.modelbj.SYXZ);
                                            ht.Add("车辆营运性质", carLogin.modelbj.SFSRL);
                                            ht.Add("车辆运载种类", carLogin.modelbj.DLSP);
                                            ht.Add("车辆生产日期", carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车辆识别码", carLogin.modelbj.CLSBM);
                                            ht.Add("生产企业", carLogin.modelbj.SCQY);
                                            ht.Add("最大总质量", carLogin.modelbj.ZZL);
                                            ht.Add("基准质量", carLogin.modelbj.JZZL);
                                            ht.Add("初次登记日期", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("单车轴重", carLogin.modelbj.HDZZL);
                                            ht.Add("底盘型号", carLogin.modelbj.DKGYYB);

                                            ht.Add("驱动方式", carLogin.modelbj.QDXS);
                                            ht.Add("驱动轮胎气压", carLogin.modelbj.QDLTQY);
                                            ht.Add("变速器型式", carLogin.modelbj.BSQXS);
                                            ht.Add("档位数", carLogin.modelbj.DWS);
                                            ht.Add("发动机型号", carLogin.modelbj.FDJXH);
                                            ht.Add("发动机编号", carLogin.modelbj.FDJHM);
                                            ht.Add("发动机生产企业", carLogin.modelbj.FDJSCQY);
                                            ht.Add("汽缸数", carLogin.modelbj.QGS);
                                            ht.Add("发动机排量", carLogin.modelbj.FDJPL);
                                            ht.Add("供油方式", carLogin.modelbj.GYFS);
                                            ht.Add("燃油类型", carLogin.modelbj.RLZL);
                                            ht.Add("进气方式", carLogin.modelbj.JQFS);
                                            ht.Add("催化转化器", carLogin.modelbj.JHZZ);
                                            ht.Add("供油系统类型", carLogin.modelbj.DPFS);
                                            ht.Add("排气处理装置", carLogin.modelbj.JHZZ);
                                            ht.Add("燃油标号", carLogin.modelbj.RYPH);
                                            ht.Add("累计行驶里程", carLogin.carbj.XSLC);
                                            ht.Add("检测状态", carLogin.carbj.JCCS == "1" ? "初检" : "复检");
                                            ht.Add("检测次数", carLogin.carbj.JCCS);
                                            ht.Add("转入标志", carLogin.modelbj.SFWDZR);
                                            ht.Add("延期报废", carLogin.modelbj.SFYQBF);
                                            ht.Add("设计乘员数", carLogin.modelbj.HDZK);
                                            ht.Add("检测系统名称", mainPanel.equipmodel.SBMC);
                                            ht.Add("检测设备认证编码", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("检测系统型号", mainPanel.equipmodel.SBXH);
                                            ht.Add("检测系统编号", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("底盘测功机名称", mainPanel.equipmodel.CGJXH);
                                            ht.Add("气体分析仪名称", mainPanel.equipmodel.FXYXH);
                                            ht.Add("所属区域", carLogin.modelbj.SSXQ);
                                            ht.Add("是否路检", "否");
                                            ht.Add("生产地", carLogin.modelbj.HPZL);
                                            ht.Add("监测目的", carLogin.modelbj.JCLB);
                                            ht.Add("达标标准", carLogin.modelbj.ZXBZ);
                                            ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                            ht.Add("设备制造厂", mainPanel.equipmodel.SBZZC);
                                            if (!mainPanel.daliinterface.sendReportInf(ht, out reportID, out code, out msg))
                                            {
                                                MessageBox.Show("发送报告单基本信息失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送报告单基本信息失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                            dalijcbgbh = reportID;
                                            #endregion
                                        }
                                        if (mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.NEUSOFTNETMODE)
                                        {
                                            #region 东软
                                            ini.INIIO.saveLogInf("东软联网信息：结果判定");
                                            if (sdsResultPd(sds_data,out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            NeusoftUtil.UploadDIdleResult vmasresult = new NeusoftUtil.UploadDIdleResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = sds_data.Wd;
                                            vmasresult.AirPressure = sds_data.Dqy;
                                            vmasresult.Humidity = sds_data.Sd;
                                            vmasresult.LowIdleCO = sds_data.Co_low;
                                            vmasresult.LowIdleHC = sds_data.Hc_low;
                                            vmasresult.HighIdleCO = sds_data.Co_high;
                                            vmasresult.HighIdleHC = sds_data.Hc_high;
                                            vmasresult.LowIdleRev = fdjdszs;
                                            vmasresult.HighIdleRev = gdszs;
                                            vmasresult.Lambda = sds_data.λ_value;
                                            vmasresult.StartTime = sds_data.StartTime;
                                            vmasresult.IdleReason = carLogin.neusoft_idlereason;
                                            vmasresult.StopReason = sds_data.StopReason;
                                            vmasresult.Result = pdjg;
                                            vmasresult.LowRev = fdjdszs;
                                            vmasresult.HighRev = gdszs;
                                            vmasresult.AdjustZero = "1";
                                            vmasresult.OilTemperature =yw;
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadDIdleResultRequest(vmasresult, dataseconds, out result, out inf, out dtack);
                                                if (result=="1")
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    isCsvAlive = "逐秒数据上传成功";

                                                    sdsdata.ZSLOW = fdjdszs;
                                                    sdsdata.ZSHIGH = gdszs;
                                                    sdsdata.JYWDLOW = ddsjywd;
                                                    sdsdata.JYWDHIGH = gdsjywd;
                                                    sdsdata.YW = yw;
                                                    sdsdata.GLKQXSSX = "1.03";
                                                    sdsdata.GLKQXSXX = "0.97";
                                                    sdsdata.JCBGBH = jcbgbh;
                                                    sdsdata.SHY = mainPanel.shy;
                                                    sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                                    if (pdjg== "1")
                                                    {
                                                        mainPanel.ts2 = "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        sdsdal.Save_SDS(sdsdata);
                                                        //vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (pdjg == "0")
                                                    {
                                                        mainPanel.ts2 = "车辆检测不合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        sdsdal.Save_SDS(sdsdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + result + "errormessage:" + inf, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                ini.INIIO.saveLogInf("东软联网信息：上传结果信息");
                                                DataTable dtresult = mainPanel.neusoftsocket.UploadDIdleResultRequest(vmasresult, dataseconds, out ackresult, out errormessage);
                                                if (dtresult != null)
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    vmasresult.LowIdleCO = dtresult.Rows[1]["LowIdleCO"].ToString();
                                                    vmasresult.LowIdleHC = dtresult.Rows[1]["LowIdleHC"].ToString();
                                                    vmasresult.HighIdleCO = dtresult.Rows[1]["HighIdleCO"].ToString();
                                                    vmasresult.HighIdleHC = dtresult.Rows[1]["HighIdleHC"].ToString();
                                                    vmasresult.Lambda = dtresult.Rows[1]["Lambda"].ToString();
                                                    vmasresult.Result = dtresult.Rows[1]["TestResult"].ToString();
                                                    isCsvAlive = "逐秒数据上传成功";

                                                    sdsdata.ZSLOW = fdjdszs;
                                                    sdsdata.ZSHIGH = gdszs;
                                                    sdsdata.JYWDLOW = ddsjywd;
                                                    sdsdata.JYWDHIGH = gdsjywd;
                                                    sdsdata.YW = yw;
                                                    sdsdata.GLKQXSSX = "1.03";
                                                    sdsdata.GLKQXSXX = "0.97";
                                                    sdsdata.JCBGBH = jcbgbh;
                                                    sdsdata.SHY = mainPanel.shy;
                                                    sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                                    if (vmasresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";// "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        sdsdata.HIGHPD = "合格";
                                                        sdsdata.LOWPD = "合格";
                                                        sdsdata.ZHPD = "合格";
                                                        sdsdal.Save_SDS(sdsdata);
                                                        //vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (vmasresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";// "车辆检测不合格";
                                                        if (vmasresult.Result != pdjg)
                                                        {
                                                            mainPanel.ts1 = "评判结果不一致";
                                                            MessageBox.Show("平台判定结果与本地判定不一致:" + errormessage, "提示");
                                                        }
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        sdsdal.Save_SDS(sdsdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + ackresult + "errormessage:" + errormessage, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            #region 南华
                                            ini.INIIO.saveLogInf("南华联网信息：结果判定");
                                            if (sdsResultPd(sds_data,out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            System.Collections.Hashtable hs = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hs_p = new System.Collections.Hashtable();
                                            hs.Add("ReportNumber", jcbgbh);
                                            hs.Add("Judge", pdjg);
                                            hs.Add("Operator", carLogin.carbj.CZY);
                                            hs.Add("Driver", carLogin.carbj.JSY);
                                            hs.Add("BeginTime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EndTime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EnvironmentalTemperature", sds_data.Wd);
                                            hs.Add("AtmosphericPressure", sds_data.Dqy);
                                            hs.Add("RelativeHumidity", sds_data.Sd);
                                            hs.Add("COHigh", sdsdata.COHIGHCLZ);
                                            hs.Add("HCHigh", sdsdata.HCHIGHCLZ);
                                            hs.Add("COHighLimit", sdsdata.COHIGHXZ);
                                            hs.Add("HCHighLimit", sdsdata.HCHIGHXZ);
                                            hs.Add("COHighJudge", sdsdata.COHIGHPD=="合格"?"1":"0");
                                            hs.Add("HCHighJudge", sdsdata.HCHIGHPD == "合格" ? "1" : "0");
                                            hs.Add("IsJudgeLambda", sdsdata.LAMDAHIGHPD== ""?"0":"1");
                                            hs.Add("LambdaHigh", sdsdata.LAMDAHIGHCLZ);
                                            hs.Add("LambdaUpLimit", "1.03");
                                            hs.Add("LambdaBelowLimit","0.97");
                                            hs.Add("LambdaJudge", nhlambdapd == "合格" ? "1": "0");
                                            hs.Add("IsTestLI","1");
                                            hs.Add("COLow", sdsdata.COLOWCLZ);
                                            hs.Add("HCLow", sdsdata.HCLOWCLZ);
                                            hs.Add("COLowLimit", sdsdata.COLOWXZ);
                                            hs.Add("HCLowLimit", sdsdata.HCLOWXZ);
                                            hs.Add("COLowJudge", sdsdata.COLOWPD == "合格" ? "1" : "0");
                                            hs.Add("HCLowJudge", sdsdata.HCLOWPD == "合格" ? "1" : "0");

                                            ini.INIIO.saveLogInf("南华联网信息：上传稳态数据");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendUploadDISData(carLogin.carbj.JYLSH, hs, dataseconds, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                            if (startflag)
                                            {
                                                isCsvAlive = "逐秒数据上传成功";

                                                sdsdata.ZSLOW = fdjdszs;
                                                sdsdata.ZSHIGH = gdszs;
                                                sdsdata.JYWDLOW = ddsjywd;
                                                sdsdata.JYWDHIGH = gdsjywd;
                                                sdsdata.YW = yw;
                                                sdsdata.GLKQXSSX = "1.03";
                                                sdsdata.GLKQXSXX = "0.97";
                                                sdsdata.JCBGBH = jcbgbh;
                                                sdsdata.SHY = mainPanel.shy;
                                                sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                                if (pdjg == "1")
                                                {
                                                    mainPanel.ts2 = "车辆检测合格";
                                                    Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                    pdjg = "1";
                                                    sdsdal.Save_SDS(sdsdata);
                                                    //vmasdal.Save_VMAS(vmasdata);
                                                    enableButton(buttonOK, false);
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "车辆检测不合格";
                                                    Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                    pdjg = "0";
                                                    sdsdal.Save_SDS(sdsdata);
                                                    enableButton(buttonOK, false);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "上传结果失败";
                                                MessageBox.Show("ackresult:" + nhcode + "errormessage:" +nhmsg, "");
                                                mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                                isCsvAlive = "未收到返回结果数据";
                                                Msg(label1, panel4, "未收到返回结果数据");
                                                ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
                                        {
                                            #region 江苏
                                            ini.INIIO.saveLogInf("江苏联网信息：结果判定");
                                            if (sdsResultPd(sds_data,out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            carinfor.JsSdsResultData asmresult = new carinfor.JsSdsResultData();
                                            asmresult.check_id = carLogin.carbj.JCBGBH;
                                            asmresult.check_type = carLogin.modelbj.JCLB;
                                            asmresult.citycode = mainPanel.stationid.Substring(0, 6);
                                            asmresult.unit_id = mainPanel.stationid; ;
                                            asmresult.device_id = mainPanel.stationid + mainPanel.lineid;
                                            asmresult.vhicleid = mainPanel.jsvehiclemodel.vehicleid;
                                            asmresult.odo_meter = mainPanel.jsvehiclemodel.odo_meter;
                                            asmresult.check_data = DateTime.Now.ToString("yyyy-MM-dd");
                                            asmresult.starttime = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                            asmresult.end_time = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                            asmresult.temperature = sdsdata.WD;
                                            asmresult.pressure = sdsdata.DQY;
                                            asmresult.humidity = sdsdata.SD;
                                            asmresult.lambda = sdsdata.LAMDAHIGHCLZ;
                                            asmresult.lambda_limit = "0.97-1.03";
                                            asmresult.lambda_passed = ((sdsdata.LAMDAHIGHPD=="")?"":((sdsdata.LAMDAHIGHPD == "合格") ? "1":"0"));
                                            asmresult.lowidle_co = sdsdata.COLOWCLZ;
                                            asmresult.low_co_limit = sdsdata.COLOWXZ;
                                            asmresult.lowidle_hc = sdsdata.HCLOWCLZ;

                                            asmresult.low_hc_limit = sdsdata.HCLOWXZ;
                                            asmresult.low_passed = (sdsdata.LOWPD=="合格"?"1":"0");
                                            asmresult.highidle_co = sdsdata.COHIGHCLZ;
                                            asmresult.high_co_limit = sdsdata.COHIGHXZ;
                                            asmresult.highidle_hc = sdsdata.HCHIGHCLZ;
                                            asmresult.high_hc_limit = sdsdata.HCHIGHXZ;
                                            asmresult.high_passed = (sdsdata.HIGHPD == "合格" ? "1" : "0");
                                            asmresult.passed = pdjg;
                                            bool jsstatus;
                                            string jserrMsg = "";
                                            string finalresult;
                                            bool cardwritestatus;
                                            string jsackstring = mainPanel.jsinterface.uploadInspectionResult(asmresult,dataseconds, out finalresult, out jsstatus, out cardwritestatus, out jserrMsg);
                                            if (jsackstring != "")
                                            {
                                                MessageBox.Show(jsackstring, "上传结果失败");
                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                if (!jsstatus)
                                                {
                                                    MessageBox.Show(jserrMsg, "上传结果失败");
                                                    ini.INIIO.saveLogInf("上传结果失败：" + jserrMsg);
                                                    if (mainPanel.jsinterface.CHECK_TYPE[carLogin.modelbj.JCLB] != "抽检")
                                                        return;
                                                }
                                                if (!cardwritestatus)
                                                {
                                                    MessageBox.Show("电子卡写卡失败");
                                                    ini.INIIO.saveLogInf("电子卡写卡失败");
                                                }
                                            }
                                            ini.INIIO.saveLogInf("江苏联网信息：接收到结果信息");
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            isCsvAlive = "逐秒数据上传成功";

                                            if (pdjg == "1")
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：接收到平台判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：接收到平台判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            #region 安徽
                                            ini.INIIO.saveLogInf("安徽联网信息：结果判定");
                                            if (sdsResultPd(sds_data,out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                            AhWebClient.AhSdsResult asmresult = new AhWebClient.AhSdsResult();
                                            asmresult.Result = (pdjg == "1" ? "1" : "2");
                                            asmresult.CrucialTime0 = CrucialTime0;
                                            asmresult.Temperature = sdsdata.WD;
                                            asmresult.Humidity = sdsdata.SD; ;
                                            asmresult.Baro = sdsdata.DQY;
                                            asmresult.CrucialTime1 = CrucialTime1;
                                            asmresult.CrucialTime2 = CrucialTime2;
                                            asmresult.LowRPM = sdsdata.ZSLOW;
                                            asmresult.LowCO = sdsdata.COLOWCLZ;
                                            asmresult.LowCO2 = sdsdata.CO2LOW;
                                            asmresult.LowHC = sdsdata.HCLOWCLZ;
                                            asmresult.HiRPM = sdsdata.ZSHIGH;
                                            asmresult.HiCO = sdsdata.COHIGHCLZ;
                                            asmresult.HiCO2 = sdsdata.CO2HIGH;
                                            asmresult.HiHC = sdsdata.HCHIGHCLZ;
                                            asmresult.LMD = sdsdata.LAMDAHIGHCLZ;
                                            asmresult.LowCOLimit = sdsdata.COLOWXZ;
                                            asmresult.LowHCLimit = sdsdata.HCLOWXZ;
                                            asmresult.HiCOLimit = sdsdata.COHIGHXZ;
                                            asmresult.HiHCLimit = sdsdata.HCHIGHXZ;
                                            asmresult.LMDLimitMin = "0.97";
                                            asmresult.LMDLimitMax = "1.03";
                                            asmresult.HiCOResult = sdsdata.COHIGHPD == "合格" ? "1" : "2";
                                            asmresult.HiHCResult = sdsdata.HCHIGHPD == "合格" ? "1" : "2";
                                            asmresult.LowCOResult = sdsdata.COLOWPD == "合格" ? "1" : "2";
                                            asmresult.LowHCResult = sdsdata.HCLOWPD == "合格" ? "1" : "2";
                                            asmresult.LMDResult = (sdsdata.LAMDAHIGHPD == "" ? "0" : (sdsdata.LAMDAHIGHPD == "合格" ? "1" : "2"));
                                            
                                            isCsvAlive = "逐秒数据上传成功";
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.UploadSdsRealtimeData(carLogin.carbj.CLID, dataseconds, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("UploadSdsRealtimeData\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                MessageBox.Show("上传过程数据发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                Msg(label1, panel4, "上传过程数据发生错误");
                                                return;
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送UploadSdsRealtimeData指令");
                                            }
                                            if (!mainPanel.ahinterface.EndInspectSDS(carLogin.carbj.CLID, asmresult, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndInspectSDS\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                MessageBox.Show("上传检测结果发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndInspectSDS指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                            
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            #region 金华
                                            ini.INIIO.saveLogInf("金华联网信息：结果判定");
                                            if (sdsResultPd(sds_data,out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                            

                                            isCsvAlive = "逐秒数据上传成功";
                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            //string jhtestingid = "";
                                            for (int i = 0; i < 3; i++)
                                            {
                                                if (!mainPanel.jhoracle.insertSds(mainPanel.jhwebinf.stationid, mainPanel.jhwebinf.lineid, carLogin.carbj.CZY, carLogin.carbj.JSY, pdjg, sdsdata, carLogin.carbjJh, jcsj.ToString("yyyy-MM-dd HH:mm:ss"), jssj.ToString("yyyy-MM-dd HH:mm:ss"), out jhtestingid))
                                                {
                                                    if (i == 2)
                                                    {
                                                        Msg(label1, panel4, "上传过程数据发生错误");
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    carLogin.carbj.ECRYPT = jhtestingid;
                                                    ini.INIIO.saveLogInf("金华联网信息：上传过程数据成功");
                                                    break;
                                                }
                                            }
                                            if (!mainPanel.jhoracle.insertSdsDataSeconds(jhtestingid, pdjg,sdsdata,carLogin.carbjJh, dataseconds))
                                            {
                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：发送EndInspectSDS指令");
                                            }
                                            if (mainPanel.jhwebinf.checkprint)
                                            {
                                                string resultno;
                                                string resultdesc;
                                                string testno;
                                                JHWebClient.checkResultModel checkmodel = new JHWebClient.checkResultModel();
                                                mainPanel.jhinterface.CheckPrintIsEffective(mainPanel.jhwebinf.serverIP, jhtestingid, out testno, out resultno, out resultdesc, out checkmodel);
                                                if (int.Parse(resultno) > 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    sdsdata.COLOWCLZ = checkmodel.value01;
                                                    sdsdata.HCLOWCLZ = checkmodel.value02;
                                                    sdsdata.COHIGHCLZ = checkmodel.value03;
                                                    sdsdata.HCHIGHCLZ = checkmodel.value04;
                                                    sdsdata.LAMDAHIGHCLZ = checkmodel.value05;
                                                    sdsdata.COLOWXZ = checkmodel.limit01;
                                                    sdsdata.HCLOWXZ = checkmodel.limit02;
                                                    sdsdata.COHIGHXZ = checkmodel.limit03;
                                                    sdsdata.HCHIGHXZ = checkmodel.limit04;
                                                    sdsdata.COLOWPD = (checkmodel.judge01 == "1" ? "合格" : "不合格");
                                                    sdsdata.HCLOWPD = (checkmodel.judge02 == "1" ? "合格" : "不合格");
                                                    sdsdata.COHIGHPD = (checkmodel.judge03 == "1" ? "合格" : "不合格");
                                                    sdsdata.HCHIGHPD = (checkmodel.judge04 == "1" ? "合格" : "不合格");
                                                    sdsdata.LAMDAHIGHPD = (checkmodel.judge05 == "1" ? "合格" : "不合格");
                                                    if (sdsdata.COLOWPD == "不合格" || sdsdata.HCLOWPD == "不合格" || sdsdata.COHIGHPD == "不合格" || sdsdata.HCHIGHPD == "不合格" || sdsdata.LAMDAHIGHPD == "不合格")
                                                    {
                                                        sdsdata.ZHPD = "不合格";
                                                        pdjg = "0";
                                                    }
                                                    else
                                                    {
                                                        sdsdata.ZHPD = "合格";
                                                        pdjg = "1";
                                                    }
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印,但结果有不一致");
                                                }
                                                else if (int.Parse(resultno) == 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印");
                                                }
                                                else
                                                {
                                                    Msg(label1, panel4, "验证未通过:" + resultdesc);
                                                    mainPanel.ts2 = "验证未通过";
                                                    MessageBox.Show("验证未通过:" + resultdesc + "\r\n该车不能打印报告");
                                                    return;
                                                }
                                                sdsdata.CLID = testno;
                                            }
                                            else
                                            {
                                                sdsdata.CLID = jhtestingid;
                                            }
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("金华联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("金华联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "不合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                        {
                                            #region 桂林
                                            
                                                
                                            ini.INIIO.saveLogInf("桂林联网信息：结果判定");
                                            if (sdsResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            string result;
                                            string errmsg = "";
                                            DataTable dt = new DataTable();
                                            Hashtable ht2 = new Hashtable();
                                            
                                            List<Hashtable> htpro = new List<Hashtable>();
                                            for (int i = 1; i < dataseconds.Rows.Count; i++)
                                            {
                                                Hashtable htchild = new Hashtable();
                                                DataRow dr = dataseconds.Rows[i];
                                                htchild.Add("stationcode", mainPanel.stationid);
                                                htchild.Add("inspectionnum", carLogin.carbj.JYLSH);
                                                htchild.Add("processtime",DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyy-MM-dd HH:mm:ss"));
                                                htchild.Add("gklx", dr["时序类别"].ToString());
                                                htchild.Add("second_no", i.ToString());
                                                htchild.Add("eacr", dr["过量空气系数"].ToString());
                                                htchild.Add("hcr", dr["HC"].ToString());
                                                htchild.Add("cor", dr["CO"].ToString());
                                                htchild.Add("o2r", dr["O2"].ToString());
                                                htchild.Add("co2r", dr["CO2"].ToString());
                                                htchild.Add("rotatespeed", dr["转速"].ToString());
                                                htpro.Add(htchild);
                                            }
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 1, null, htpro, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传过程数据成功");
                                            }

                                            isCsvAlive = "逐秒数据上传成功";

                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("linecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            if (!mainPanel.gxinterface.finishTest(ht2, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测失败,code=" + result + ",msg=" + errmsg);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("发送桂林联网结束检测成功");
                                            }
                                            ht2.Clear();
                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("scenecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            ht2.Add("vlpn", carLogin.carbj.CLHP);
                                            ht2.Add("vin", carLogin.modelbj.CLSBM);
                                            ht2.Add("inspectionoperator", carLogin.carbj.CZY);
                                            ht2.Add("inspectiondriver", carLogin.carbj.JSY);
                                            ht2.Add("temperature", sdsdata.WD);
                                            ht2.Add("pressure", sdsdata.DQY);
                                            ht2.Add("humidity", sdsdata.SD);
                                            ht2.Add("iutid", carLogin.carbj.JCBGBH);
                                            ht2.Add("vdct", pdjg);
                                            ht2.Add("iuidate", DateTime.Now.ToString("yyyy-MM-dd"));
                                            ht2.Add("detectstarttime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("detectendtime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("vinflag", "1");
                                            ht2.Add("enginenumflag", "1");
                                            ht2.Add("icheck", carLogin.carbj.CZY);
                                            ht2.Add("checktime", sdsdata.JCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("oiltemperature", sdsdata.YW);
                                            ht2.Add("eaclu", "1.03");
                                            ht2.Add("eacld", "0.97");
                                            ht2.Add("eacr", sdsdata.LAMDAHIGHCLZ);
                                            ht2.Add("eacd", sdsdata.LAMDAHIGHPD == "合格" ? "1" : (sdsdata.LAMDAHIGHPD == "不合格" ? "0" : ""));
                                            ht2.Add("licol", sdsdata.COLOWXZ);
                                            ht2.Add("licor", sdsdata.COLOWCLZ);
                                            ht2.Add("licod", sdsdata.COLOWPD == "合格" ? "1" : "0");
                                            ht2.Add("lihcl", sdsdata.HCLOWXZ);
                                            ht2.Add("lihcr", sdsdata.HCLOWCLZ);
                                            ht2.Add("lihcd", sdsdata.HCLOWPD == "合格" ? "1" : "0");
                                            ht2.Add("hicol", sdsdata.COHIGHXZ);
                                            ht2.Add("hicor", sdsdata.COHIGHCLZ);
                                            ht2.Add("hicod", sdsdata.COHIGHPD == "合格" ? "1" : "0");
                                            ht2.Add("hihcl", sdsdata.HCHIGHXZ);
                                            ht2.Add("hihcr", sdsdata.HCHIGHCLZ);
                                            ht2.Add("hihcd", sdsdata.HCHIGHPD == "合格" ? "1" : "0");
                                            ht2.Add("rotatespeedlimit", "100");
                                            ht2.Add("rotatespeed", sdsdata.ZSHIGH);
                                            ht2.Add("gdszs", sdsdata.ZSHIGH);
                                            ht2.Add("dszs", sdsdata.ZSLOW);
                                            ht2.Add("analyser", sdsdata.FXYXH);
                                            ht2.Add("aprovider", sdsdata.FXYZZC);
                                            ht2.Add("flowmeter", "");
                                            ht2.Add("fprovider", "");
                                            ht2.Add("tachometer", sdsdata.ZSJXH);
                                            ht2.Add("tprovider", sdsdata.ZSJZZC);
                                            ht2.Add("otsensor", "");
                                            ht2.Add("oprovider", "");
                                            ht2.Add("weatherstationtype", "");
                                            ht2.Add("weatherstationprovider", "");
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 0, ht2, null, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传结果数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传结果数据成功");
                                            }
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                                
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                               
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HHZNNETMODE)
                                        {
                                            #region 红河州
                                            ini.INIIO.saveLogInf("红河州联网信息：结果判定");
                                            if (sdsResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            System.Collections.Hashtable hthhz = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz1 = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hthhz2 = new System.Collections.Hashtable();
                                            #region 基本信息
                                            //hthhz.Add("JCDJBM", carLogin.carbj.CLID);//检测登记编号
                                            //hthhz.Add("CLBM", carLogin.carbj.JCBGBH);
                                            //hthhz.Add("VIN", carLogin.modelbj.CLSBM);
                                            //hthhz.Add("HBXXKH", "2012");
                                            //hthhz.Add("CPHM", carLogin.carbj.CLHP);
                                            //hthhz.Add("CPLX", mainPanel.hhzinterface.HhzR_VEHICLE_CPYS.GetValue(carLogin.modelbj.CPYS, "0"));
                                            //hthhz.Add("CLLX", carLogin.modelbj.CLLX.Split('_')[0]);//5
                                            //hthhz.Add("CDRQ", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd"));
                                            //hthhz.Add("LXDZ", carLogin.modelbj.CZDZ);
                                            //hthhz.Add("CZDW", carLogin.modelbj.CZ);
                                            //hthhz.Add("LZDH", carLogin.modelbj.LXDH);//疑问，不是LXDH
                                            //hthhz.Add("SFJF", "1");
                                            //hthhz.Add("SFYXFB", "0");
                                            //hthhz.Add("BYXFBYY", "1");
                                            //hthhz.Add("JCDJRQ", carLogin.carbj.DLSJ.ToString("yyyy-MM-dd"));
                                            //hthhz.Add("FBYBM", "123456");//转换为编号 
                                            //hthhz.Add("BZLX", "1");
                                            //hthhz.Add("XZBM", "1234");
                                            //hthhz.Add("JCZQBM", "1");
                                            //hthhz.Add("SFFK", "0");
                                            //hthhz.Add("LCBDS", carLogin.carbj.XSLC);
                                            //hthhz.Add("SFMJC", "1");
                                            //hthhz.Add("SFYOBD", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.OBD, "0"));
                                            //hthhz.Add("CXH", carLogin.modelbj.XH);
                                            //hthhz.Add("CP", carLogin.modelbj.PP);//15
                                            //hthhz.Add("SFDK", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.DKGYYB, "0"));//25
                                            //hthhz.Add("CLZL", mainPanel.hhzinterface.HhzR_VEHICLE_CLZL.GetValue(carLogin.modelbj.CLZL, "0"));
                                            //hthhz.Add("JZZL", carLogin.modelbj.JZZL);
                                            //hthhz.Add("ZDZL", carLogin.modelbj.ZZL);
                                            //hthhz.Add("QDXX", mainPanel.hhzinterface.HhzR_VEHICLE_QDXS.GetValue(carLogin.modelbj.QDXS, "0"));
                                            //hthhz.Add("BSQXS", mainPanel.hhzinterface.HhzR_VEHICLE_BSQXS.GetValue(carLogin.modelbj.BSQXS, "0"));//20
                                            //hthhz.Add("RYZL", mainPanel.hhzinterface.HhzR_VEHICLE_RLZL.GetValue(carLogin.modelbj.RLZL, "0"));
                                            //hthhz.Add("GYFS", mainPanel.hhzinterface.HhzR_VEHICLE_GYFS.GetValue(carLogin.modelbj.GYFS, "0"));
                                            //hthhz.Add("KH", carLogin.modelbj.CLLX.StartsWith("K") ? "K" : "H");
                                            //hthhz.Add("ZW", carLogin.modelbj.HDZK);
                                            //hthhz.Add("FDJEDZS", carLogin.modelbj.EDZS);
                                            //hthhz.Add("FDJPL", carLogin.modelbj.FDJPL);
                                            //hthhz.Add("FDJEDGL", carLogin.modelbj.EDGL);
                                            //hthhz.Add("JQFS", mainPanel.hhzinterface.HhzR_VEHICLE_JQFS.GetValue(carLogin.modelbj.JQFS, "0"));//41
                                            //hthhz.Add("QGSL", carLogin.modelbj.QGS);
                                            //hthhz.Add("SFYJHZZ", mainPanel.hhzinterface.HhzR_VEHICLE_YESORNO.GetValue(carLogin.modelbj.JHZZ, "0"));
                                            //hthhz.Add("JCDJJG", "1");
                                            //hthhz.Add("JCSFHG", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(asmdata.ZHPD, ""));
                                            //hthhz.Add("SFYJFB", "0");
                                            //hthhz.Add("SFCGXK", "1");
                                            //hthhz.Add("DJYBM",carLogin.hhzOperatorID);
                                            //hthhz.Add("WGJCRQ", carLogin.carbj.DLSJ.ToString("yyyy-MM-dd HH:mm:ss"));//?
                                            //hthhz.Add("JCZBM", mainPanel.stationid);
                                            //hthhz.Add("JCXBM", mainPanel.stationid + mainPanel.lineid);
                                            //hthhz.Add("WQJCRQ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            //hthhz.Add("SFYXSXJC", "1");
                                            //hthhz.Add("SFCJ", carLogin.carbj.JCCS == "1" ? "0" : "1");
                                            //hthhz.Add("FDJH", carLogin.modelbj.FDJHM);
                                            //hthhz.Add("ZZ", carLogin.modelbj.HDZZL);
                                            //hthhz.Add("JCLX", mainPanel.hhzinterface.HhzR_RESULT_JCLX.GetValue(carLogin.modelbj.JCLB, "0"));//检测类型
                                            //hthhz.Add("DPFS", mainPanel.hhzinterface.HhzR_VEHICLE_DPFS.GetValue(carLogin.modelbj.DPFS, "0"));
                                            //hthhz.Add("HBBZFBSFDY", "0");
                                            //hthhz.Add("SFDYHGZ", "0");
                                            //hthhz.Add("JCZQS", "2");
                                            //hthhz.Add("BZQJCCS", carLogin.carbj.JCCS);
                                            //hthhz.Add("FGKXZBH", "0");
                                            //hthhz.Add("SCSJ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            //hthhz.Add("JCFF", mainPanel.hhzinterface.HhzR_RESULT_JCFF.GetValue(carLogin.carbj.JCFF, ""));

                                            hthhz.Add("tsno", mainPanel.stationid);//检测登记编号
                                            hthhz.Add("testlineno", mainPanel.stationid + "0" + mainPanel.lineid);
                                            hthhz.Add("testpersonno", carLogin.hhzDriverID);
                                            hthhz.Add("testno", carLogin.carbj.JCBGBH);
                                            hthhz.Add("carno", carLogin.carbj.JYLSH);
                                            hthhz.Add("testtype", mainPanel.hhzinterface.HhzR_RESULT_JCFF.GetValue(carLogin.carbj.JCFF, "0"));
                                            hthhz.Add("testtimes", carLogin.carbj.JCCS);//5
                                            hthhz.Add("testdate", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hthhz.Add("testdateend", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hthhz.Add("result", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(sdsdata.ZHPD, "0"));
                                            hthhz.Add("license", carLogin.modelbj.CLHP);//疑问，不是LXDH
                                            hthhz.Add("vin", carLogin.modelbj.CLSBM);
                                            hthhz.Add("registerdate", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd"));
                                            hthhz.Add("mdate", carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd"));
                                            hthhz.Add("vehiclemodel", carLogin.modelbj.XH);//转换为编号 
                                            hthhz.Add("engine", carLogin.modelbj.FDJXH);
                                            hthhz.Add("standard", mainPanel.hhzinterface.HhzR_VEHICLE_PFBZ.GetValue(carLogin.modelbj.ZXBZ, "0"));
                                            hthhz.Add("odometer", carLogin.carbj.XSLC);
                                            hthhz.Add("barometric", sdsdata.DQY);
                                            hthhz.Add("humidity", sdsdata.SD);
                                            hthhz.Add("temperature", sdsdata.WD);
                                            hthhz.Add("exchangetime", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            #endregion
                                            #region 结果信息
                                            hthhz1.Add("testno", carLogin.carbj.JCBGBH);
                                            hthhz1.Add("lambdaup", "1.03");
                                            hthhz1.Add("lambdadown", "0.97");
                                            hthhz1.Add("lambda_field", sdsdata.LAMDAHIGHCLZ);
                                            hthhz1.Add("lambdajudge", sdsdata.LAMDAHIGHPD==""?"":(mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(sdsdata.LAMDAHIGHPD, "")));
                                            
                                            hthhz1.Add("lscolimit", double.Parse(sdsdata.COLOWXZ).ToString("0.0"));
                                            hthhz1.Add("lscoresult", double.Parse(sdsdata.COLOWCLZ).ToString("0.0"));
                                            hthhz1.Add("lscojudge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(sdsdata.COLOWPD, ""));
                                            hthhz1.Add("lshclimit", double.Parse(sdsdata.HCLOWXZ).ToString("0"));
                                            hthhz1.Add("lshcresult", double.Parse(sdsdata.HCLOWCLZ).ToString("0"));
                                            hthhz1.Add("lshcjudge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(sdsdata.HCLOWPD, ""));
                                            hthhz1.Add("hscolimit", double.Parse(sdsdata.COHIGHXZ).ToString("0.0"));
                                            hthhz1.Add("hscoresult", double.Parse(sdsdata.COHIGHCLZ).ToString("0.0"));
                                            hthhz1.Add("hscojudge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(sdsdata.COHIGHPD, ""));
                                            hthhz1.Add("hshclimit", double.Parse(sdsdata.HCHIGHXZ).ToString("0"));
                                            hthhz1.Add("hshcresult", double.Parse(sdsdata.COHIGHXZ).ToString("0"));
                                            hthhz1.Add("hshcjudge", mainPanel.hhzinterface.HhzR_RESULT_PDJG.GetValue(sdsdata.HCHIGHPD, ""));
                                            hthhz1.Add("gdszs", sdsdata.ZSHIGH);
                                            hthhz1.Add("dszs", sdsdata.ZSLOW);
                                            hthhz1.Add("exchangetime", DateTime.Now.ToString("yyyy-MM-dd"));

                                            //hthhz2.Add("type", "UPLOAD");
                                            //hthhz2.Add("JCZBM", mainPanel.stationid);
                                            hthhz2.Add("jcff", "SDS_RESULT");
                                            // hthhz2.Add("jcff", "DOUBLE_IDLE");
                                            // hthhz2.Add("CHECK_REGIST_TASK", hthhz);
                                            hthhz2.Add("jcjbxx", hthhz);
                                            //hthhz2.Add("DOUBLE_IDLE_TASK", hthhz1);
                                            hthhz2.Add("SDS_RESULT", hthhz1);
                                            #endregion
                                            try
                                            {
                                                string hhz_jcbgbh = "";
                                                sendPicture(asmdata.ZHPD);
                                                string code, msg;
                                                Newtonsoft.Json.Linq.JObject queryJobject = new Newtonsoft.Json.Linq.JObject();
                                                if (mainPanel.hhzinterface.uploadJsonArray(mainPanel.stationid, hthhz2, HhzWebClient.Hhzclient.DATALX.JCXX, out code, out msg, out queryJobject))
                                                {
                                                    try
                                                    {
                                                        if (code == "0" || code == "051")
                                                        {
                                                            ini.INIIO.saveLogInf("上传成功,code=" + code);
                                                        }
                                                        else
                                                        {
                                                            string codemsg = mainPanel.hhzinterface.Hhz_AckCode.GetValue(code, "");
                                                            MessageBox.Show("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                            Msg(label1, panel4, "上传检测数据至联网平台失败");
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        ini.INIIO.saveLogInf("读取上传返回信息异常:" + er.Message);
                                                        //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                        Msg(label1, panel4, "读取上传返回信息异常:" + er.Message);
                                                        return;
                                                    }
                                                }
                                                else
                                                {

                                                    ini.INIIO.saveLogInf("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                    MessageBox.Show("上传检测数据失败\r\n" + "错误代码：" + code + "\r\n" + "错误信息：" + msg);
                                                    Msg(label1, panel4, "上传检测数据至联网平台失败");
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测数据失败,发生异常\r\n" + er.Message);
                                                MessageBox.Show("上传检测数据失败\r\n,发生异常\r\n" + er.Message);
                                                Msg(label1, panel4, "上传检测数据至联网平台失败,发生异常");
                                                return;
                                            }
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("红河州联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);

                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("红河州联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);

                                            }
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(sdsdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆：" + sdsdata.CLPH);
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                                        {
                                            #region 中科宇图
                                            ini.INIIO.saveLogInf("中科宇图联网信息：结果判定");
                                            if (sdsResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("红河州联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            if (!uploadStartSuccess)
                                            {
                                                #region 上传检测开始命令
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendStart);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测开始命令，time=" + jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        {
                                                        }
                                                        ini.INIIO.saveLogInf("上传检测开始失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));

                                                        MessageBox.Show("检测开传上传失败", "错误提示");
                                                        return;
                                                    }
                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStartSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测开始成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                                }
                                                #endregion
                                            }
                                            if (!uploadHCSuccess)
                                            {
                                                #region 上传HC
                                                if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD || mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                {
                                                    mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                    mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                    mainPanel.webthread.bgCO = 0.0;
                                                    mainPanel.webthread.bgNO = 0;
                                                    mainPanel.webthread.bgHC = 0;

                                                    mainPanel.webthread.canliuHC = 1;
                                                    mainPanel.webthread.IFlowResult = "1";
                                                    mainPanel.webthread.O2Avg = 20.8;
                                                    mainPanel.webthread.checkResult = "1";
                                                    mainPanel.webthread.checkTimeStart = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.webthread.checkTimeEnd = jcsj.AddMinutes(1).ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.webthread.remark = "";
                                                    ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendAirHC);
                                                    Thread thread = new Thread(threadstart);
                                                    ini.INIIO.saveLogInf("开始上传HC残留，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    ini.INIIO.saveLogInf("mainPanel.yichangInterface.bgAirHC(" + carLogin.carbj.JYLSH + ","
                                                        + mainPanel.zkytwebinf.regcode + ","
                                                        + 0.0 + ","
                                                        + 0 + ","
                                                        + 0 + ","
                                                        + 1 + ","
                                                        + "1" + ","
                                                        + "20.8" + ","
                                                        + "1" + ","
                                                        + jcsj.ToString("yyyy-MM-dd HH:mm:ss") + ","
                                                        + jcsj.AddMinutes(1).ToString("yyyy-MM-dd HH:mm:ss") + ","
                                                        + "" + ");");
                                                    int alivetimecount = 0;
                                                    int reSend = 0;
                                                    thread.Start();
                                                    string result, info;
                                                    bool isExcedTimeToUpload = false;
                                                    while (thread.IsAlive)
                                                    {
                                                        Thread.Sleep(10);
                                                        alivetimecount++;
                                                        if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                        {
                                                            isExcedTimeToUpload = true;
                                                            try
                                                            {
                                                                thread.Abort();
                                                            }
                                                            catch
                                                            { }
                                                            ini.INIIO.saveLogInf("上传HC残留失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));

                                                            MessageBox.Show("分析仪背景气体及HC残留上传失败", "错误提示");
                                                            return;
                                                        }

                                                    }
                                                    if (!isExcedTimeToUpload)
                                                    {
                                                        uploadHCSuccess = true;
                                                        ini.INIIO.saveLogInf("上传背景信息成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                        ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                                    }
                                                }
                                                #endregion
                                            }

                                            #region 上传过程数据
                                            if (dataseconds.Rows.Count > 0)
                                            {
                                                ini.INIIO.saveLogInf("过程数据记录有" + dataseconds.Rows.Count.ToString() + "数据");
                                                ini.INIIO.saveLogInf("开始上传检测过程数据，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                try
                                                {
                                                    int timecount = dataseconds.Rows.Count - 1;
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                        {
                                                            mainPanel.yichangInterface.doubleIdleLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                            DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                            dataseconds.Rows[i]["时序类别"].ToString(),
                                                            i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["HC"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO2"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["O2"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["过量空气系数"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["油温"].ToString()), 2),
                                                            dataseconds.Rows[i]["转速"].ToString());
                                                            ini.INIIO.saveLogInf("[过程数据" + i + "]:" + "doubleIdleLog(" + carLogin.carbj.JYLSH + "," +
                                                                mainPanel.zkytwebinf.regcode + "," +
                                                                dataseconds.Rows[i]["时序类别"].ToString() + "," +
                                                                i.ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["HC"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO2"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["O2"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["过量空气系数"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["油温"].ToString()), 2).ToString() + "," +
                                                                dataseconds.Rows[i]["转速"].ToString() + ")");
                                                        }
                                                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                        {
                                                            mainPanel.yichangInterfaceOther.doubleIdleLog(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                            i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["HC"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO2"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["O2"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["油温"].ToString()), 2),
                                                            dataseconds.Rows[i]["转速"].ToString());
                                                            ini.INIIO.saveLogInf("[过程数据" + i + "]:" + "doubleIdleLog(" + carLogin.carbj.JYLSH + "," +
                                                                mainPanel.zkytwebinf.regcode + "," +
                                                                i.ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["HC"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO2"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["O2"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["油温"].ToString()), 2).ToString() + "," +
                                                                dataseconds.Rows[i]["转速"].ToString() + ")");
                                                        }
                                                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                                        {
                                                            mainPanel.yichangInterfaceYnbs.sdsGcsj(carLogin.carbj.JYLSH, mainPanel.zkytwebinf.regcode,
                                                             DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                              dataseconds.Rows[i]["时序类别"].ToString(),
                                                              i,
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["HC"].ToString()), 0),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["CO2"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["O2"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["过量空气系数"].ToString()), 2),
                                                            Math.Round(double.Parse(dataseconds.Rows[i]["油温"].ToString()), 2),
                                                            dataseconds.Rows[i]["转速"].ToString());
                                                            ini.INIIO.saveLogInf("[过程数据" + i + "]:" + "doubleIdleLog(" + carLogin.carbj.JYLSH + "," +
                                                                mainPanel.zkytwebinf.regcode + "," +
                                                                 DateTime.Parse(dataseconds.Rows[i]["全程时序"].ToString()).ToString("yyyyMMddHHmmss") + "," +
                                                              dataseconds.Rows[i]["时序类别"].ToString() + "," +
                                                             i.ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["HC"].ToString()), 0).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["CO2"].ToString()), 2).ToString() + "," +
                                                                Math.Round(double.Parse(dataseconds.Rows[i]["O2"].ToString()), 2).ToString() + "," +
                                                                 Math.Round(double.Parse(dataseconds.Rows[i]["过量空气系数"].ToString()), 2).ToString() + "," +
                                                               Math.Round(double.Parse(dataseconds.Rows[i]["油温"].ToString()), 2).ToString() + "," +
                                                                dataseconds.Rows[i]["转速"].ToString() + ")");
                                                        }
                                                        Thread.Sleep(10);
                                                    }
                                                    uploadProcessSuccess = true;
                                                    isCsvAlive = "逐秒数据上传成功";
                                                    ini.INIIO.saveLogInf("上传检测过程数据完毕，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                }
                                                catch (Exception er)
                                                {
                                                    MessageBox.Show("上传过程数据失败\r\n" + "异常：" + er.Message);
                                                    Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                    return;
                                                }
                                            }
                                            #endregion
                                            #region 上传检测结束
                                            try
                                            {
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendFinish);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测结束命令，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                string result, info;
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        isExcedTimeToUpload = true;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        { }
                                                        ini.INIIO.saveLogInf("上传检测结束失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        MessageBox.Show("上传检测结束指令失败");
                                                        Msg(label1, panel4, "上传检测结束指令失败");
                                                        return;
                                                    }

                                                }
                                                if (!isExcedTimeToUpload)
                                                {
                                                    uploadStopSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测结束成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                    ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测结束指令异常:" + er.Message);
                                                //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                Msg(label1, panel4, "上传检测结束指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 上传检测结果
                                            try
                                            {
                                                string result, info;
                                                ini.INIIO.saveLogInf("开始上传数据");
                                                //string answerString = "";
                                                mainPanel.webthread.businessId = carLogin.carbj.JYLSH;
                                                mainPanel.webthread.registCode = mainPanel.zkytwebinf.regcode;
                                                mainPanel.webthread.lrotateSpeed = double.Parse(sdsdata.ZSLOW);
                                                mainPanel.webthread.hrotateSpeed = double.Parse(sdsdata.ZSLOW);
                                                mainPanel.webthread.coLowValue = double.Parse(sdsdata.COLOWCLZ);
                                                mainPanel.webthread.coHighValue = double.Parse(sdsdata.COHIGHCLZ);
                                                mainPanel.webthread.hcLowValue = double.Parse(sdsdata.HCLOWCLZ);
                                                mainPanel.webthread.hcHighValue = double.Parse(sdsdata.HCHIGHCLZ);
                                                mainPanel.webthread.lambdaValue = double.Parse(sdsdata.LAMDAHIGHCLZ);
                                                mainPanel.webthread.tempreture = double.Parse(sdsdata.WD);
                                                mainPanel.webthread.humidity = double.Parse(sdsdata.SD);
                                                mainPanel.webthread.airPressure = double.Parse(sdsdata.DQY);
                                                mainPanel.webthread.timeStart = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                mainPanel.webthread.timeEnd = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                                ThreadStart threadstart = new ThreadStart(mainPanel.webthread.sendSdsResult);
                                                Thread thread = new Thread(threadstart);
                                                ini.INIIO.saveLogInf("开始上传检测结果，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                int alivetimecount = 0;
                                                int reSend = 0;
                                                thread.Start();
                                                bool isExcedTimeToUpload = false;
                                                while (thread.IsAlive)
                                                {
                                                    Thread.Sleep(10);
                                                    alivetimecount++;
                                                    if (alivetimecount > mainPanel.zkytwebinf.waitUploadTime * 100)
                                                    {
                                                        uploadResultSuccess = true;
                                                        reSend++;
                                                        try
                                                        {
                                                            thread.Abort();
                                                        }
                                                        catch
                                                        { }
                                                        ini.INIIO.saveLogInf("上传检测结果失败，超过规定时间未完成上传，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                        Msg(label1, panel4, "上传检测结果指令超时" );
                                                        MessageBox.Show("上传检测结果指令超时");
                                                        return;
                                                    }
                                                }
                                                if (!isExcedTimeToUpload)
                                                {

                                                    uploadResultSuccess = true;
                                                    ini.INIIO.saveLogInf("上传检测结果成功，time=" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    
                                                        mainPanel.xmlanalysis.ReadACKString(mainPanel.webthread.answerString, out result, out info);
                                                        ini.INIIO.saveLogInf("读取平台返回状态：result:" + result + "  info:" + info);

                                                    if (result == "0")
                                                    {
                                                        ini.INIIO.saveLogInf("上传检测结果指令失败:" + info);
                                                        Msg(label1, panel4, "上传检测结果指令失败:" + info);
                                                        MessageBox.Show(info);
                                                        return;
                                                    }
                                                }

                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("上传检测结果指令异常:" + er.Message);
                                                //MessageBox.Show("读取检测报告编号出现异常:" + er.Message);
                                                Msg(label1, panel4, "上传检测结果指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 读取平台判定结果   
                                            if (mainPanel.zkytwebinf.displayCheckResult)
                                                try
                                            {
                                                string result="", info="";


                                                string coLowValue = ""; string hcLowValue = ""; string coHighValue = ""; string hcHighValue = ""; string lambdaValue = "";
                                                string coLowValueLimit = ""; string hcLowValueLimit = ""; string coHighValueLimit = ""; string hcHighValueLimit = "";
                                                string coLowValueResult = ""; string hcLowValueResult = ""; string coHighValueResult = ""; string hcHighValueResult = "";
                                                string lambdaValueResult = ""; string result3 = "";

                                                if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                                                {
                                                    mainPanel.xmlanalysis.ReadSdsCheckResultString(mainPanel.yichangInterface.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                    out coLowValue, out hcLowValue, out coHighValue, out hcHighValue, out lambdaValue,
                                                    out coLowValueLimit, out hcLowValueLimit, out coHighValueLimit, out hcHighValueLimit,
                                                    out coLowValueResult, out hcLowValueResult, out coHighValueResult,
                                                    out hcHighValueResult, out lambdaValueResult, out result3);
                                                }
                                                else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                                                    {
                                                    mainPanel.xmlanalysis.ReadSdsCheckResultString(mainPanel.yichangInterfaceOther.getCheckResult(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info,
                                                    out coLowValue, out hcLowValue, out coHighValue, out hcHighValue, out lambdaValue,
                                                    out coLowValueLimit, out hcLowValueLimit, out coHighValueLimit, out hcHighValueLimit,
                                                    out coLowValueResult, out hcLowValueResult, out coHighValueResult,
                                                    out hcHighValueResult, out lambdaValueResult, out result3);
                                                    }
                                                    else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                                                    {
                                                        result = "";
                                                        info = "该地区不支持该接口";
                                                    }
                                                    if (result == "1")
                                                {
                                                    sdsdata.COLOWXZ = coLowValueLimit;
                                                    sdsdata.HCLOWXZ = hcLowValueLimit;
                                                    sdsdata.COHIGHXZ = coHighValueLimit;
                                                    sdsdata.HCHIGHXZ = hcHighValueLimit;
                                                    sdsdata.COLOWPD = coLowValueResult;
                                                    sdsdata.HCLOWPD = hcLowValueResult;
                                                    sdsdata.COHIGHPD = coHighValueResult;
                                                    sdsdata.HCHIGHPD = hcHighValueResult;
                                                    sdsdata.LAMDAHIGHPD = lambdaValueResult;
                                                    sdsdata.ZHPD = result3;
                                                }
                                                else
                                                {
                                                    ini.INIIO.saveLogInf("读取平台结果指令失败:" + info);
                                                    Msg(label1, panel4, "读取平台结果指令失败:" + info);
                                                    MessageBox.Show(info);
                                                    return;
                                                }
                                            }
                                            catch (Exception er)
                                            {
                                                ini.INIIO.saveLogInf("读取平台结果指令异常:" + er.Message);
                                                Msg(label1, panel4, "读取平台结果指令异常:" + er.Message);
                                                MessageBox.Show("读取平台结果指令异常:" + er.Message);
                                                return;
                                            }
                                            #endregion
                                            #region 显示结果
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (sdsdata.ZHPD == "合格")
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult ? "车辆检测合格" : "车辆检测完毕";
                                                ini.INIIO.saveLogInf("联网信息：判定结果合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕";
                                                ini.INIIO.saveLogInf("联网信息：判定结果不合格");
                                                Msg(label1, panel4, (mainPanel.zkytwebinf.displayCheckResult ? "车辆检测不合格" : "车辆检测完毕") + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                            }
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                            #endregion
                                        }
                                        else
                                        {
                                            #region 其他
                                            ini.INIIO.saveLogInf("判定检测结果");

                                            if (sdsResultPd(sds_data,out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("检测结果：合格");
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE||mainPanel.NetMode==mainPanel.HNNETMODE||mainPanel.NetMode==mainPanel.DALINETMODE || mainPanel.NetMode == mainPanel.EZNETMODE||mainPanel.NetMode==mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("检测结果：不合格");
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE||mainPanel.NetMode==mainPanel.EZNETMODE || mainPanel.NetMode == mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            ini.INIIO.saveLogInf("保存SDS检测结果到数据库");
                                            sdsdal.Save_SDS(sdsdata);
                                            if (mainPanel.isNetUsed)
                                            {
                                                if (mainPanel.NetMode == mainPanel.WGNETMODE)
                                                {
                                                    #region 万国
                                                    carinfor.WGBasicTestData basicdata = new carinfor.WGBasicTestData();
                                                    basicdata.JCBGBH = jcbgbh;
                                                    basicdata.JCLXBH = thisjcff;
                                                    basicdata.JCLXMC = thisjcffmc;
                                                    basicdata.JCGWH = mainPanel.lineid;
                                                    basicdata.JCZBH = mainPanel.wgsocketinf.JCZBH;
                                                    basicdata.JCZMC = mainPanel.stationinfmodel.STATIONNAME;
                                                    basicdata.JCRQ = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    basicdata.JCLRY = carLogin.carbj.DLY;
                                                    basicdata.JCCZY = carLogin.carbj.CZY;
                                                    basicdata.JCJSY = carLogin.carbj.JSY;
                                                    basicdata.CPHM = carLogin.carbj.CLHP;
                                                    basicdata.SFCJ = (int.Parse(carLogin.carbj.JCCS) > 1) ? "复检" : "初检";
                                                    basicdata.JCCS = carLogin.carbj.JCCS;
                                                    basicdata.SFLJ = "否";
                                                    basicdata.SFCS = carLogin.carbj.SFCS;
                                                    basicdata.FWLX = "正常";
                                                    basicdata.PDJG = sdsdata.ZHPD;
                                                    basicdata.BGJCFFYY = carLogin.bgffyy;
                                                    basicdata.WXBJ = carLogin.wxbj;
                                                    basicdata.WXCD = carLogin.wxcd;
                                                    basicdata.WXSJ = carLogin.wxsj;
                                                    basicdata.WXFY = carLogin.wxfy;
                                                    if (!mainPanel.wgsocket.SendBasicTestData(basicdata))
                                                    {
                                                        MessageBox.Show("基本结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    carinfor.WGCommonTestData comondata = new carinfor.WGCommonTestData();
                                                    carinfor.WGSDSresultData wgdata = new carinfor.WGSDSresultData();
                                                    comondata.SBRZBM = mainPanel.wgsocketinf.SBRZBH;
                                                    comondata.SBMC = mainPanel.equipmodel.SBMC;
                                                    comondata.SBXH = mainPanel.equipmodel.SBXH;
                                                    comondata.SBZZC = mainPanel.equipmodel.SBZZC;
                                                    comondata.DPCGJ = "--";
                                                    comondata.PQFXY = mainPanel.equipmodel.FXYXH;
                                                    comondata.LLJ = "";
                                                    wgdata.JCBGBH = jcbgbh;
                                                    wgdata.WD = sdsdata.WD;
                                                    wgdata.XDSD = sdsdata.SD;
                                                    wgdata.DQY = sdsdata.DQY;
                                                    wgdata.GLKQXSZ = sdsdata.LAMDAHIGHCLZ;
                                                    wgdata.GLKQXSPDJG = sdsdata.LAMDAHIGHPD;
                                                    wgdata.DDSCOXZ = sdsdata.COLOWXZ;
                                                    wgdata.DDSCOZ = sdsdata.COLOWCLZ;
                                                    wgdata.DDSCOPDJG = sdsdata.COLOWPD;
                                                    wgdata.DDSHCXZ = sdsdata.HCLOWXZ;
                                                    wgdata.DDSHCZ = sdsdata.HCLOWCLZ;
                                                    wgdata.DDSHCPDJG = sdsdata.HCLOWPD;
                                                    wgdata.FDJDSZS = sdsdata.ZSLOW;
                                                    wgdata.DDSJYWD = sdsdata.JYWDLOW;
                                                    wgdata.GDSCOXZ = sdsdata.COHIGHXZ;
                                                    wgdata.GDSCOZ = sdsdata.COHIGHCLZ;
                                                    wgdata.GDSCOPDJG = sdsdata.COHIGHPD;
                                                    wgdata.GDSHCZ = sdsdata.HCHIGHCLZ;
                                                    wgdata.GDSHCXZ = sdsdata.HCHIGHXZ;
                                                    wgdata.GDSHCPDJG = sdsdata.HCHIGHPD;
                                                    wgdata.GDSZS = sdsdata.ZSHIGH;
                                                    wgdata.GDSJYWD = sdsdata.JYWDHIGH;
                                                    wgdata.PDJG = sdsdata.ZHPD;
                                                    wgdata.SHY = mainPanel.shy;
                                                    wgdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    wgdata.YW = sdsdata.YW;
                                                    wgdata.GLKQXSSX = sdsdata.GLKQXSSX;
                                                    wgdata.GLKQXSXX = sdsdata.GLKQXSXX;
                                                    if (!mainPanel.wgsocket.SendSDSresultData(comondata, wgdata))
                                                    {
                                                        MessageBox.Show("结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.CCNETMODE)
                                                {
                                                    #region 诚创
                                                    string code, message;

                                                    if (mainPanel.ccsocket.SendInspectionEnd(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message))
                                                    {
                                                        if (code != "1")
                                                        {
                                                            Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                            return;
                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息成功");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                        ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                        return;
                                                    }
                                                    carinfor.dataMainTxt datamaintxt = new carinfor.dataMainTxt();
                                                    datamaintxt.jcbh = carLogin.carbj.CLID;
                                                    datamaintxt.clhp = carLogin.carbj.CLHP;
                                                    datamaintxt.hpzl = carLogin.modelbj.CPYS;
                                                    datamaintxt.vin = carLogin.modelbj.CLSBM;
                                                    datamaintxt.czy = carLogin.carbj.CZY;
                                                    datamaintxt.jsy = carLogin.carbj.JSY;
                                                    datamaintxt.wd = sdsdata.WD;
                                                    datamaintxt.sd = sdsdata.SD;
                                                    datamaintxt.dqy = sdsdata.DQY;
                                                    datamaintxt.jcsxh = jcsxh;
                                                    datamaintxt.cj = (sdsdata.ZHPD == "合格") ? "1" : "0";
                                                    datamaintxt.jccs = carLogin.carbj.JCCS;
                                                    datamaintxt.ljsxlc = carLogin.carbj.XSLC;
                                                    datamaintxt.lsh = carLogin.carbj.JCBGBH;
                                                    datamaintxt.jckssj = sdsdata.JCKSSJ;
                                                    datamaintxt.jcjssj = sdsdata.JCJSSJ;
                                                    datamaintxt.jyr = sdsdata.SHY;
                                                    datamaintxt.jcbgbh = carLogin.carbj.JCBGBH;
                                                    if (mainPanel.ccsocket.writeDataMainTxt(datamaintxt))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成失败");
                                                        Msg(label1, panel4, "写主检测信息数据成失败");
                                                        return;
                                                    }
                                                    carinfor.DataResultSds dataresult = new carinfor.DataResultSds();
                                                    dataresult.jcbh = carLogin.carbj.CLID;
                                                    dataresult.lambdaxz = sdsdata.LAMDAHIGHXZ;
                                                    dataresult.lambda = sdsdata.LAMDAHIGHCLZ;
                                                    dataresult.lambdapd = ((sdsdata.LAMDAHIGHPD == "合格") ? "1" : "0");
                                                    dataresult.colowxz = sdsdata.COLOWXZ;
                                                    dataresult.colow = sdsdata.COLOWCLZ;
                                                    dataresult.colowpd = ((sdsdata.COLOWPD == "合格") ? "1" : "0");
                                                    dataresult.hclowxz = sdsdata.HCLOWXZ;
                                                    dataresult.hclow = sdsdata.HCLOWCLZ;
                                                    dataresult.hclowpd = ((sdsdata.HCLOWPD == "合格") ? "1" : "0");
                                                    dataresult.cohighxz = sdsdata.COHIGHXZ;
                                                    dataresult.cohigh = sdsdata.COHIGHCLZ;
                                                    dataresult.cohighpd = ((sdsdata.COHIGHPD == "合格") ? "1" : "0");
                                                    dataresult.hchighxz = sdsdata.HCHIGHXZ;
                                                    dataresult.hchigh = sdsdata.HCHIGHCLZ;
                                                    dataresult.hchighpd = ((sdsdata.HCHIGHPD == "合格") ? "1" : "0");
                                                    if (mainPanel.ccsocket.writeDataResult(dataresult))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写双怠速检测结果数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写双怠速检测结果数据成失败");
                                                        Msg(label1, panel4, "写双怠速检测结果数据成失败");
                                                        return;
                                                    }
                                                    bool uploadOK = false;
                                                    for (int i = 0; i < 3; i++)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）" + (i + 1).ToString() + "Upload");
                                                        if (mainPanel.ccsocket.WaitUploadFinish(out code, out message, out uploadOK))
                                                        {
                                                            if (code == "1")
                                                            {
                                                                if (uploadOK)
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload成功");
                                                                    break;
                                                                }
                                                                else
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload失败");
                                                                    // Msg(label1, panel4, "Upload失败");
                                                                    continue;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                                //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                                continue;
                                                            }

                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                            //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                            continue;
                                                        }
                                                    }
                                                    if (!uploadOK)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）Upload三次上传失败");
                                                        //return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.ORTNETMODE)
                                                {
                                                    #region ort net mode
                                                    string code, message;
                                                    carinfor.OrtTSIVehicleInfo vehicleinf = new carinfor.OrtTSIVehicleInfo();
                                                    vehicleinf.License = carLogin.modelbj.CLHP;
                                                    vehicleinf.LicenseClass = carLogin.modelbj.CPYS;
                                                    vehicleinf.Fuel = carLogin.modelbj.RLZL;
                                                    vehicleinf.VLTID = carLogin.modelbj.ZZL;
                                                    vehicleinf.Mileage = carLogin.carbj.XSLC;
                                                    vehicleinf.OwnerName = carLogin.modelbj.CZ;
                                                    vehicleinf.OwnerAddr = carLogin.modelbj.CZDZ;
                                                    vehicleinf.BodyColor = carLogin.modelbj.CSYS;
                                                    vehicleinf.EngineID = carLogin.modelbj.FDJHM;
                                                    vehicleinf.VIN = carLogin.modelbj.CLSBM;
                                                    vehicleinf.Cleaners = carLogin.modelbj.GYFS;
                                                    vehicleinf.Brand = carLogin.modelbj.PP;
                                                    vehicleinf.Model = carLogin.modelbj.XH;
                                                    vehicleinf.GATypeCode = carLogin.modelbj.CLLX.Split('_')[0];
                                                    vehicleinf.UseType = mainPanel.ortsocket.ORT_UseTypeR.GetValue(carLogin.modelbj.SYXZ, "");
                                                    vehicleinf.Area = carLogin.modelbj.SSXQ;
                                                    vehicleinf.EngineModel = carLogin.modelbj.FDJXH;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JQFS.Contains("增压") ? "是" : "否";
                                                    vehicleinf.RegData = carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.FactoryDate = carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.DriveType = carLogin.modelbj.QDXS;
                                                    vehicleinf.IsClosedLoopEFI = carLogin.modelbj.DPFS == "闭环电喷" ? "是" : "否";
                                                    vehicleinf.Is3WCC = carLogin.modelbj.JHZZ;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JHZZ;
                                                    vehicleinf.RateSpeed = carLogin.modelbj.EDZS;
                                                    vehicleinf.NominalPower = carLogin.modelbj.EDGL;
                                                    vehicleinf.Passengers = carLogin.modelbj.HDZK;
                                                    vehicleinf.BaseWeight = carLogin.modelbj.JZZL;
                                                    vehicleinf.Cylinders = carLogin.modelbj.QGS;
                                                    vehicleinf.IfGoIntoCity = carLogin.modelbj.SFWDZR;
                                                    vehicleinf.Stage = mainPanel.ortsocket.ORT_PhaseR.GetValue(carLogin.modelbj.ZXBZ, "");

                                                    carinfor.OrtTSIResult resultinf = new carinfor.OrtTSIResult();
                                                    resultinf.TestID = carLogin.carbj.JCBGBH;
                                                    resultinf.License = carLogin.carbj.CLHP;
                                                    resultinf.LicenseClass = carLogin.carbj.CPYS;
                                                    if (int.Parse(carLogin.modelbj.ZZL) <= 3500)
                                                        resultinf.VehicleType = "轻型车辆";
                                                    else if (int.Parse(carLogin.modelbj.ZZL) > 10000)
                                                        resultinf.VehicleType = "重型车辆";
                                                    else
                                                        resultinf.VehicleType = "中型车辆";
                                                    resultinf.TestType = carLogin.carbj.SFCJ;
                                                    resultinf.Region = carLogin.modelbj.SSXQ;
                                                    resultinf.Phase = carLogin.modelbj.ZXBZ;
                                                    resultinf.StationID = mainPanel.stationid;
                                                    resultinf.EISID = mainPanel.stationinfmodel.StationCompany + mainPanel.lineid;
                                                    resultinf.OperatorID = carLogin.carbj.CZY;
                                                    resultinf.AmbientTemp = sdsdata.WD;
                                                    resultinf.AmbientHum = sdsdata.SD;
                                                    resultinf.Pressure = sdsdata.DQY;
                                                    resultinf.TestStartTime = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    resultinf.TestEndTime = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    resultinf.AmbientHC ="0";
                                                    resultinf.AmbientCO = "0.00";
                                                    resultinf.AmbientNO = "0";
                                                    resultinf.ResidualHC = "0";
                                                    resultinf.HCHigh = sdsdata.HCHIGHCLZ;
                                                    resultinf.COHigh = sdsdata.COHIGHCLZ;
                                                    resultinf.HCLow = sdsdata.HCLOWCLZ;
                                                    resultinf.COLow = sdsdata.COLOWCLZ;
                                                    resultinf.Result = sdsdata.ZHPD;
                                                    resultinf.Lumbda = sdsdata.LAMDAHIGHCLZ;
                                                    resultinf.HCHighCutpoint = sdsdata.HCHIGHXZ;
                                                    resultinf.COHighCutpoint = sdsdata.COHIGHXZ;

                                                    resultinf.HCLowCutpoint = sdsdata.HCLOWXZ;
                                                    resultinf.COLowCutpoint = sdsdata.COLOWXZ;
                                                    resultinf.LumbdaCutpoint = "0.97-1.03";
                                                    resultinf.LumbdaResult = sdsdata.LAMDAHIGHPD;
                                                    resultinf.CrucialTime0 = CrucialTime0;
                                                    resultinf.CrucialTime1 = CrucialTime1;
                                                    resultinf.CrucialTime2 = CrucialTime2;
                                                    resultinf.CrucialTime3 = "";
                                                    resultinf.OutlookResult = "合格";
                                                    resultinf.AbortReason = "";
                                                    if (mainPanel.ortsocket.UploadTSIResult(vehicleinf, resultinf, out code, out message))
                                                    {

                                                        ini.INIIO.saveLogInf("（欧润特联网）写双怠法检测结果数据成成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else if (mainPanel.ortsocket.UploadTSIResult(vehicleinf, resultinf, out code, out message))
                                                    {

                                                        ini.INIIO.saveLogInf("（欧润特联网）写双怠法检测结果数据第一次失败，第二次成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（欧润特联网）写双怠速法检测结果数据成失败");
                                                        Msg(label1, panel4, "写双怠速法检测结果数据成失败");
                                                        return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                                {
                                                    #region 安车
                                                    Thread.Sleep(1000);
                                                    if (!saveSdsResutl2Net())
                                                    {
                                                        Thread.Sleep(1000);
                                                        if (!saveSdsResutl2Net())
                                                        {
                                                            MessageBox.Show("结果数据上传服务器失败", "错误提示");
                                                            ini.INIIO.saveLogInf("安车联网信息：结果数据上传服务器失败");
                                                            return;
                                                        }
                                                    }
                                                    ini.INIIO.saveLogInf("安车联网信息：结果数据上传服务器成功");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                                {
                                                    车辆检测状态 teststate = new 车辆检测状态();
                                                    teststate.JCZBH = mainPanel.stationid;
                                                    teststate.LINEID = mainPanel.lineid;
                                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                                    teststate.JYCS = carLogin.carbj.JCCS;
                                                    teststate.JCSJ = DateTime.Now;
                                                    teststate.CLHP = carLogin.carbj.CLHP;
                                                    teststate.HPZL = carLogin.carbj.HPZL;
                                                    teststate.ZT = mainPanel.finishTest;
                                                    teststate.JCFF = carLogin.carbj.JCFF;
                                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                                }
                                                else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                                {
                                                    #region 江西
                                                    string code, msg;
                                                    
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        jxSdsProcessData processdata = new jxSdsProcessData(
                                                            dr["全程时序"].ToString(),
                                                            dr["时序类别"].ToString(),
                                                            i.ToString(),
                                                            dr["HC"].ToString(),
                                                             dr["CO"].ToString(),
                                                             dr["O2"].ToString(),
                                                             dr["CO2"].ToString(),
                                                             dr["过量空气系数"].ToString(),
                                                             dr["转速"].ToString());
                                                        if (!mainPanel.jxinterface.sendIdleStateProcessData(carLogin.carbj.CLID, processdata, out code, out msg))
                                                        {
                                                            MessageBox.Show("sendIdleStateResultData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                            ini.INIIO.saveLogInf("江西联网信息：sendIdleStateResultData上传服务器失败");
                                                            return;
                                                        }
                                                    }
                                                    jxSdsResultData resultdata = new jxSdsResultData(
                                                        sdsdata.CLID,
                                                        sdsdata.WD,
                                                        sdsdata.DQY,
                                                        sdsdata.SD,
                                                        sdsdata.YW,
                                                        "0.97",
                                                        "1.03",
                                                        sdsdata.LAMDAHIGHCLZ,
                                                        sdsdata.LAMDAHIGHPD=="不合格"?"0":"1",
                                                        sdsdata.COLOWXZ,
                                                        sdsdata.COLOWCLZ,
                                                        sdsdata.COLOWPD == "不合格" ? "0" : "1",
                                                        sdsdata.HCLOWXZ,
                                                        sdsdata.HCLOWCLZ,
                                                        sdsdata.HCLOWPD == "不合格" ? "0" : "1",
                                                        sdsdata.COHIGHXZ,
                                                        sdsdata.COHIGHCLZ,
                                                        sdsdata.COHIGHPD == "不合格" ? "0" : "1",
                                                        sdsdata.HCHIGHXZ,
                                                        sdsdata.HCHIGHCLZ,
                                                        sdsdata.HCHIGHPD == "不合格" ? "0" : "1",
                                                        sdsdata.ZSLOW,
                                                        sdsdata.ZSHIGH,
                                                        jcsj.ToString("yyyy-MM-dd HH:mm:ss"),
                                                        jssj.ToString("yyyy-MM-dd HH:mm:ss")
                                                        );
                                                    if (!mainPanel.jxinterface.sendIdleStateResultData(carLogin.carbj.CLID, resultdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("sendIdleStateResultData上传服务器失败\r\ncode=" + code+"\r\nmsg="+msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：sendIdleStateResultData上传服务器失败");
                                                        return;
                                                    }
                                                    if (!mainPanel.jxinterface.finish(carLogin.carbj.CLID, out code, out msg))
                                                    {
                                                        MessageBox.Show("finish上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：finish上传服务器失败");
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                                {
                                                    #region 湖南
                                                    string code, msg;
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    System.Collections.Hashtable htdata = new System.Collections.Hashtable();
                                                    ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", sdsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    DataTable dtinf = new DataTable();
                                                    if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送开始检测命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送开始检测命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("xh", carLogin.modelbj.XH);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("clxh", carLogin.modelbj.PP);
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("fdjxh", carLogin.modelbj.FDJXH);
                                                    ht.Add("fdjh", carLogin.modelbj.FDJHM);
                                                    ht.Add("cllx", carLogin.modelbj.CLLX.Split('_')[0]);
                                                    ht.Add("csys", mainPanel.hninterface.RHN_CSYS.GetValue(carLogin.modelbj.CSYS, ""));
                                                    ht.Add("syxz", mainPanel.hninterface.RHN_SYXZ.GetValue(carLogin.modelbj.SYXZ, ""));
                                                    ht.Add("syr", carLogin.modelbj.CZ);
                                                    ht.Add("ccdjrq", carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("rlzl", mainPanel.hninterface.RHN_RLZL.GetValue(carLogin.modelbj.RLZL, ""));
                                                    ht.Add("pl", carLogin.modelbj.FDJPL);
                                                    ht.Add("gl", carLogin.modelbj.EDGL);
                                                    ht.Add("zs", "2");
                                                    ht.Add("zj", "2800");
                                                    ht.Add("qlj", "");
                                                    ht.Add("hlj", "");
                                                    ht.Add("zzl", carLogin.modelbj.ZZL);
                                                    ht.Add("zbzl", carLogin.modelbj.ZBZL);
                                                    ht.Add("ccrq", carLogin.modelbj.SCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("zsxzqh", "");
                                                    ht.Add("zzxzqh", "");
                                                    ht.Add("zt", "");
                                                    ht.Add("jqfs", mainPanel.hninterface.RHN_JQFS.GetValue(carLogin.modelbj.JQFS, ""));
                                                    ht.Add("gyxs", mainPanel.hninterface.RHN_GYXS.GetValue(carLogin.modelbj.GYFS, ""));
                                                    ht.Add("yxqz", "");
                                                    ht.Add("xslc", carLogin.carbj.XSLC);
                                                    ht.Add("chzhq", (carLogin.modelbj.JHZZ == "无" || carLogin.modelbj.JHZZ == "否") ? "0" : "1");
                                                    ht.Add("edzs", carLogin.modelbj.EDZS);
                                                    ht.Add("qdlqy", carLogin.modelbj.QDLTQY);
                                                    ht.Add("dczz", carLogin.modelbj.SSXQ);
                                                    ht.Add("rygg", carLogin.modelbj.RYPH);
                                                    ht.Add("bsqxs", mainPanel.hninterface.RHN_BSQXS.GetValue(carLogin.modelbj.BSQXS, ""));
                                                    ht.Add("dws", carLogin.modelbj.DWS);
                                                    ht.Add("qgs", carLogin.modelbj.QGS);
                                                    ht.Add("edzk", carLogin.modelbj.HDZK);
                                                    ht.Add("hbdbqk", "");
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", sdsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    htdata.Add("glkqxssx", "1.03");
                                                    htdata.Add("glkqxsxx", "0.97");
                                                    htdata.Add("glkqxsjg", sdsdata.LAMDAHIGHCLZ);
                                                    htdata.Add("glkqxspd", sdsdata.LAMDAHIGHPD=="不合格"?"0":(sdsdata.LAMDAHIGHPD == "" ? "-1":"1"));
                                                    htdata.Add("ddscoxz", sdsdata.COLOWXZ);
                                                    htdata.Add("ddscojg", sdsdata.COLOWCLZ);
                                                    htdata.Add("ddscopd", sdsdata.COLOWPD=="不合格" ? "0" : "1");
                                                    htdata.Add("ddshcxz", sdsdata.HCLOWXZ);
                                                    htdata.Add("ddshcjg", sdsdata.HCLOWCLZ);
                                                    htdata.Add("ddshcpd", sdsdata.HCLOWPD == "不合格" ? "0" : "1");
                                                    htdata.Add("ddszs", sdsdata.ZSLOW);
                                                    htdata.Add("ddsyw", sdsdata.JYWDLOW);
                                                    htdata.Add("gdscoxz", sdsdata.COHIGHXZ);
                                                    htdata.Add("gdscojg", sdsdata.COHIGHCLZ);
                                                    htdata.Add("gdscopd", sdsdata.COHIGHPD == "不合格" ? "0" : "1");
                                                    htdata.Add("gdshcxz", sdsdata.HCHIGHXZ);
                                                    htdata.Add("gdshcjg", sdsdata.HCHIGHCLZ);
                                                    htdata.Add("gdshcpd", sdsdata.HCHIGHPD == "不合格" ? "0" : "1");
                                                    htdata.Add("gdszs", sdsdata.ZSHIGH);
                                                    htdata.Add("gdsyw", sdsdata.JYWDHIGH);
                                                    htdata.Add("tsihjwd", sdsdata.WD);
                                                    htdata.Add("tsihjsd", sdsdata.SD);
                                                    htdata.Add("tsihjdqy", sdsdata.DQY);
                                                    if (!mainPanel.hninterface.writeTestResult(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送结果数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    htdata.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", sdsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    string HCGCSJ = "", COGCSJ = "", CO2GCSJ = "", O2GCSJ = "", NOXGCSJ = "", GLKQXSSJ = "", HCPFZLGCSJ = "", COPFZLGCSJ = "",
                                                        NOXPFZLGCSJ = "", LLJO2GCSJ = "", LLJSJLLGCSJ = "", LLJBZLLGCSJ = "", LLJWDGCSJ = "", QCWQLLGCSJ = "", LLJQYGCSJ = "", ZSGCSJ = "", YWGCSJ = "",
                                                        CSGCSJ = "", XSBGCSJ = "", XSXZGCSJ = "", SDXZGCSJ = "", JSGLGCSJ = "", ZSGLGCSJ = "", HJWDGCSJ = "", HJSDGCSJ = "", HJDQYGCSJ = "", YDZGCSJ = "",
                                                        GXSXSGCSJ = "";
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        HCGCSJ += dr["HC"].ToString() + "#";
                                                        COGCSJ += dr["CO"].ToString() + "#";
                                                        CO2GCSJ += dr["CO2"].ToString() + "#";
                                                        O2GCSJ += dr["O2"].ToString() + "#";
                                                        NOXGCSJ += "0#";
                                                        GLKQXSSJ += dr["过量空气系数"].ToString() + "#";
                                                        HJWDGCSJ += dr["环境温度"].ToString() + "#";
                                                        HJSDGCSJ += dr["相对湿度"].ToString() + "#";
                                                        HJDQYGCSJ += dr["大气压力"].ToString() + "#";
                                                        ZSGCSJ += dr["转速"].ToString() + "#";
                                                        YWGCSJ += dr["油温"].ToString() + "#";
                                                    }
                                                    HCGCSJ.Remove(HCGCSJ.Length - 1, 1);
                                                    COGCSJ.Remove(COGCSJ.Length - 1, 1);
                                                    CO2GCSJ.Remove(CO2GCSJ.Length - 1, 1);
                                                    O2GCSJ.Remove(O2GCSJ.Length - 1, 1);
                                                    NOXGCSJ.Remove(NOXGCSJ.Length - 1, 1);
                                                    GLKQXSSJ.Remove(GLKQXSSJ.Length - 1, 1);
                                                    HJWDGCSJ.Remove(HJWDGCSJ.Length - 1, 1);
                                                    HJSDGCSJ.Remove(HJSDGCSJ.Length - 1, 1);
                                                    HJDQYGCSJ.Remove(HJDQYGCSJ.Length - 1, 1);
                                                    ZSGCSJ.Remove(ZSGCSJ.Length - 1, 1);
                                                    YWGCSJ.Remove(YWGCSJ.Length - 1, 1);

                                                    htdata.Add("HCGCSJ", HCGCSJ);
                                                    htdata.Add("COGCSJ", COGCSJ);
                                                    htdata.Add("CO2GCSJ", CO2GCSJ);
                                                    htdata.Add("O2GCSJ", O2GCSJ);
                                                    htdata.Add("NOXGCSJ", NOXGCSJ);
                                                    htdata.Add("GLKQXSSJ", GLKQXSSJ);
                                                    htdata.Add("HCPFZLGCSJ", HCPFZLGCSJ);
                                                    htdata.Add("COPFZLGCSJ", COPFZLGCSJ);
                                                    htdata.Add("NOXPFZLGCSJ", NOXPFZLGCSJ);
                                                    htdata.Add("LLJO2GCSJ", LLJO2GCSJ);
                                                    htdata.Add("LLJSJLLGCSJ", LLJSJLLGCSJ);
                                                    htdata.Add("LLJBZLLGCSJ", LLJBZLLGCSJ);
                                                    htdata.Add("LLJWDGCSJ", LLJWDGCSJ);
                                                    htdata.Add("QCWQLLGCSJ", QCWQLLGCSJ);
                                                    htdata.Add("LLJQYGCSJ", LLJQYGCSJ);
                                                    htdata.Add("ZSGCSJ", ZSGCSJ);
                                                    htdata.Add("YWGCSJ", YWGCSJ);
                                                    htdata.Add("CSGCSJ", CSGCSJ);
                                                    htdata.Add("XSBGCSJ", XSBGCSJ);
                                                    htdata.Add("XSXZGCSJ", XSXZGCSJ);
                                                    htdata.Add("SDXZGCSJ", SDXZGCSJ);
                                                    htdata.Add("JSGLGCSJ", JSGLGCSJ);
                                                    htdata.Add("ZSGLGCSJ", ZSGLGCSJ);
                                                    htdata.Add("HJWDGCSJ", HJWDGCSJ);
                                                    htdata.Add("HJSDGCSJ", HJSDGCSJ);
                                                    htdata.Add("HJDQYGCSJ", HJDQYGCSJ);
                                                    htdata.Add("YDZGCSJ", YDZGCSJ);
                                                    htdata.Add("GXSXSGCSJ", GXSXSGCSJ);

                                                    if (!mainPanel.hninterface.writeTestDataSeconds(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送过程数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送过程数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.DALINETMODE)
                                                {
                                                    #region 大理
                                                    string code, msg;
                                                    string reportID;
                                                    sendPicture(sdsdata.ZHPD);
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "VMAS": ht.Add("检测类别", "1"); break;
                                                        case "ASM": ht.Add("检测类别", "2"); break;
                                                        case "SDS": ht.Add("检测类别", "3"); break;
                                                        case "JZJS": ht.Add("检测类别", "4"); break;
                                                        case "ZYJS": ht.Add("检测类别", "5"); break;
                                                        case "LZ": ht.Add("检测类别", "6"); break;
                                                    }
                                                    ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                                    ht.Add("温度", sdsdata.WD);
                                                    ht.Add("大气压", sdsdata.DQY);
                                                    ht.Add("相对湿度", sdsdata.SD);
                                                    ht.Add("过量空气系数值", sdsdata.LAMDAHIGHCLZ);
                                                    ht.Add("过量空气判定结果", nhlambdapd);
                                                    ht.Add("低怠速CO限值", sdsdata.COLOWXZ);
                                                    ht.Add("低怠速CO值", sdsdata.COLOWCLZ);
                                                    ht.Add("低怠速CO判定结果", sdsdata.COLOWPD);
                                                    ht.Add("低怠速HC限值", sdsdata.HCLOWXZ);
                                                    ht.Add("低怠速HC值", sdsdata.HCLOWCLZ);
                                                    ht.Add("低怠速HC判定结果", sdsdata.HCLOWPD);
                                                    ht.Add("低怠速发动机转速", sdsdata.ZSLOW);
                                                    ht.Add("低怠速机油温度", sdsdata.JYWDLOW);
                                                    ht.Add("高怠速CO限值", sdsdata.COHIGHXZ);
                                                    ht.Add("高怠速CO值", sdsdata.COHIGHCLZ);
                                                    ht.Add("高怠速CO判定结果", sdsdata.COHIGHPD);
                                                    ht.Add("高怠速HC限值", sdsdata.HCHIGHXZ);
                                                    ht.Add("高怠速HC值", sdsdata.HCHIGHCLZ);
                                                    ht.Add("高怠速HC判定结果", sdsdata.HCHIGHPD);
                                                    ht.Add("高怠速发动机转速", sdsdata.ZSHIGH);
                                                    ht.Add("高怠速机油温度", sdsdata.JYWDHIGH);
                                                    ht.Add("判定结果", sdsdata.ZHPD);
                                                    ht.Add("审核员", mainPanel.shy);
                                                    ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    //DataTable dt = new DataTable();
                                                    if (!mainPanel.daliinterface.sendTestData(ht, 3, null, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送检测数据失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送检测数据失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.EZNETMODE)
                                                {
                                                    #region 鄂州
                                                    string code, msg;
                                                    try
                                                    {
                                                        EzWebClient.InspectionInformation data = new EzWebClient.InspectionInformation(
                                                            sdsdata.ZHPD == "合格" ? "1" : "0",
                                                            sdsdata.JCBGBH,
                                                            jssj.ToString("yyyyMMddHHmmss"),
                                                            mainPanel.ezinterface.EZR_inspectionmethod.GetValue(carLogin.carbj.JCFF, ""),
                                                            carLogin.carbj.JSY,
                                                            sdsdata.JCBGBH,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            carLogin.carbj.JCCS,
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            mainPanel.stationid,
                                                            carLogin.modelbj.JCLB,
                                                            carLogin.modelbj.CLHP,
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.SCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJSCQY,
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.EDGL,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.modelbj.JZZL,
                                                             carLogin.carbj.XSLC,
                                                             carLogin.modelbj.QGS,
                                                             "Y",
                                                             "N",
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             DateTime.Now.ToString("yyyyMMddHHmmss"),
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "",
                                                             carLogin.carbj.CZY
                                                            );
                                                        if (!mainPanel.ezinterface.uploadInspectionInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("发送检测信息命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                            ini.INIIO.saveLogInf("发送检测信息命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        EzWebClient.ExternalLoginInformation data = new EzWebClient.ExternalLoginInformation(
                                                             mainPanel.stationid,
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             "N",
                                                             carLogin.modelbj.QGS,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             "Y",
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJHM,
                                                             "N",
                                                             "N",
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             carLogin.carbj.JCBGBH,
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.carbj.JCBGBH,
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             carLogin.modelbj.CLHP,
                                                             "N",
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.carbj.XSLC,

                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             "Y",
                                                             "N",
                                                             "",
                                                             carLogin.modelbj.CZDZ,
                                                             carLogin.modelbj.LXDH,
                                                             "Y",
                                                             carLogin.modelbj.EDGL,
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.JZZL,
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             carLogin.modelbj.CZ,

                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "1"
                                                            );
                                                        if (!mainPanel.ezinterface.uploadExternalLoginInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("新增外检登录信息失败,不能开始检测\r\ncode:" + code + "\r\nmessage:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("新增外检登录信息发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        EzWebClient.EzIfaJcDoubleidledata data = new EzWebClient.EzIfaJcDoubleidledata(
                                                            sdsdata.DQY,
                                                            sdsdata.COHIGHPD == "合格" ? "1" : "0",
                                                            sdsdata.COHIGHXZ,
                                                            sdsdata.COLOWPD == "合格" ? "1" : "0",
                                                            sdsdata.COLOWXZ,
                                                            sdsdata.COHIGHCLZ,
                                                            sdsdata.COLOWXZ,
                                                            "1.03",
                                                            "0.97",
                                                            sdsdata.LAMDAHIGHPD == "合格" ? "1" : (sdsdata.LAMDAHIGHPD == "不合格" ? "0" : ""),
                                                            sdsdata.HCHIGHPD == "合格" ? "1" : "0",
                                                            sdsdata.HCHIGHXZ,
                                                            sdsdata.HCLOWPD == "合格" ? "1" : "0",
                                                            sdsdata.HCLOWXZ,
                                                            sdsdata.HCHIGHCLZ,
                                                            sdsdata.HCLOWCLZ,
                                                            sdsdata.ZSHIGH,
                                                            sdsdata.SD,
                                                            sdsdata.JCBGBH,
                                                            sdsdata.LAMDAHIGHCLZ,
                                                            sdsdata.ZSLOW,
                                                            sdsdata.YW,
                                                            sdsdata.WD,
                                                            mainPanel.stationid,
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            sdsdata.JCBGBH,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            jssj.ToString("yyyyMMddHHmmss")
                                                            );
                                                        if (!mainPanel.ezinterface.uploadEzIfaJcDoubleidledata(data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    try
                                                    {
                                                        for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                        {
                                                            DataRow dr = dataseconds.Rows[i];
                                                            EzWebClient.EzIfaJcDoubleidlelog data = new EzWebClient.EzIfaJcDoubleidlelog(
                                                                dr["O2"].ToString(),
                                                                dr["时序类别"].ToString(),
                                                                dr["过量空气系数"].ToString(),
                                                                dr["CO"].ToString(),
                                                                dr["CO2"].ToString(),
                                                                dr["HC"].ToString(),
                                                                sdsdata.JCBGBH,
                                                                dr["转速"].ToString(),
                                                                i.ToString(),
                                                                DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                                mainPanel.stationid,
                                                                mainPanel.stationid + mainPanel.lineid,
                                                                sdsdata.JCBGBH,
                                                                dr["油温"].ToString()
                                                                );
                                                            if (!mainPanel.ezinterface.uploadEzIfaJcDoubleidlelog (data, out code, out msg))
                                                            {
                                                                ini.INIIO.saveLogInf("发送过程数据[" + i.ToString() + "]命令失败,code" + code + ",msg:" + msg);
                                                            }
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    sendPicture(sdsdata.ZHPD);
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.XBNETMODE)
                                                {
                                                    #region 喜邦
                                                    string code, msg;
                                                    int l_p_count = 0, l_t_count = 0, h_p_count = 0, h_t_count = 0;
                                                    List<string> l_p_co = new List<string>();
                                                    List<string> l_t_co = new List<string>();
                                                    List<string> h_p_co = new List<string>();
                                                    List<string> h_t_co = new List<string>();
                                                    List<string> l_p_co2 = new List<string>();
                                                    List<string> l_t_co2 = new List<string>();
                                                    List<string> h_p_co2 = new List<string>();
                                                    List<string> h_t_co2 = new List<string>();
                                                    List<string> l_p_hc = new List<string>();
                                                    List<string> l_t_hc = new List<string>();
                                                    List<string> h_p_hc = new List<string>();
                                                    List<string> h_t_hc = new List<string>();
                                                    List<string> l_p_o2 = new List<string>();
                                                    List<string> l_t_o2 = new List<string>();
                                                    List<string> h_p_o2 = new List<string>();
                                                    List<string> h_t_o2 = new List<string>();
                                                    List<string> h_p_lmd = new List<string>();
                                                    List<string> h_t_lmd = new List<string>();
                                                    List<string> l_p_zs = new List<string>();
                                                    List<string> l_t_zs = new List<string>();
                                                    List<string> h_p_zs = new List<string>();
                                                    List<string> h_t_zs = new List<string>();
                                                    List<string> l_p_yw = new List<string>();
                                                    List<string> l_t_yw = new List<string>();
                                                    List<string> h_p_yw = new List<string>();
                                                    List<string> h_t_yw = new List<string>();
                                                    try
                                                    {
                                                        for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                        {
                                                            DataRow dr = dataseconds.Rows[i];
                                                            carinfo.XB_SDS_PROCESS_DATA data = new carinfo.XB_SDS_PROCESS_DATA();
                                                            data.JCFFBH = carLogin.carbj.JCFF;
                                                            data.JCLSH = carLogin.carbj.JYLSH;
                                                            data.SJXL = i.ToString();
                                                            data.State = dr["时序类别"].ToString();
                                                            data.HC = dr["HC"].ToString();
                                                            data.CO = dr["CO"].ToString();
                                                            data.O2 = dr["O2"].ToString();
                                                            data.CO2 = dr["CO2"].ToString();
                                                            data.Lmd = dr["过量空气系数"].ToString();
                                                            data.Rpm = dr["转速"].ToString();
                                                            data.JYWD = dr["油温"].ToString();
                                                            if (data.State == "1")
                                                            {
                                                                l_p_co.Add(data.CO);
                                                                l_p_co2.Add(data.CO2);
                                                                l_p_hc.Add(data.HC);
                                                                l_p_o2.Add(data.O2);
                                                                //h_p_lmd.Add(data.Lmd);
                                                                l_p_zs.Add(data.Rpm);
                                                                l_p_yw.Add(data.JYWD);
                                                                l_p_count = 0;
                                                            }
                                                            else if (data.State == "2")
                                                            {
                                                                l_t_co.Add(data.CO);
                                                                l_t_co2.Add(data.CO2);
                                                                l_t_hc.Add(data.HC);
                                                                l_t_o2.Add(data.O2);
                                                                //h_p_lmd.Add(data.Lmd);
                                                                l_t_zs.Add(data.Rpm);
                                                                l_t_yw.Add(data.JYWD);
                                                                l_t_count = 0;
                                                            }
                                                            else if (data.State == "3")
                                                            {
                                                                h_p_co.Add(data.CO);
                                                                h_p_co2.Add(data.CO2);
                                                                h_p_hc.Add(data.HC);
                                                                h_p_o2.Add(data.O2);
                                                                h_p_lmd.Add(data.Lmd);
                                                                h_p_zs.Add(data.Rpm);
                                                                h_p_yw.Add(data.JYWD);
                                                                h_p_count = 0;
                                                            }
                                                            else if (data.State == "4")
                                                            {
                                                                h_t_co.Add(data.CO);
                                                                h_t_co2.Add(data.CO2);
                                                                h_t_hc.Add(data.HC);
                                                                h_t_o2.Add(data.O2);
                                                                h_t_lmd.Add(data.Lmd);
                                                                h_t_zs.Add(data.Rpm);
                                                                h_t_yw.Add(data.JYWD);
                                                                h_t_count = 0;
                                                            }                                                       
                                                            if (!mainPanel.xbsocket.Send_SDS_PROCESS_DATA(data, out code, out msg))
                                                            {
                                                                ini.INIIO.saveLogInf("发送过程数据[" + i.ToString() + "]命令失败,code" + code + ",msg:" + msg);
                                                            }
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送过程数据命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        carinfo.XB_RESULT_PUBLIC_DATA pdata = new carinfo.XB_RESULT_PUBLIC_DATA();
                                                        carinfo.XB_SDS_RESULT_DATA data = new carinfo.XB_SDS_RESULT_DATA();
                                                        pdata.JCFFBH = carLogin.carbj.JCFF;
                                                        pdata.JCLSH = carLogin.carbj.JYLSH;
                                                        pdata.DLY = carLogin.carbj.DLY;
                                                        pdata.YCY = carLogin.carbj.JSY;
                                                        pdata.JCY = carLogin.carbj.CZY;
                                                        pdata.WD = sdsdata.WD;
                                                        pdata.SD = sdsdata.SD;
                                                        pdata.DQY = sdsdata.DQY;
                                                        data.SFZSKZ = "1";
                                                        data.DSRpm = sdsdata.ZSLOW;
                                                        data.GDSRpm = sdsdata.ZSHIGH;
                                                        data.DSHC = sdsdata.HCLOWCLZ;
                                                        data.GDSHC = sdsdata.HCHIGHCLZ;
                                                        data.DSCO = sdsdata.COLOWCLZ;
                                                        data.GDSCO = sdsdata.COHIGHCLZ;
                                                        data.GDSLmd = sdsdata.LAMDAHIGHCLZ;
                                                        data.DSCurveCount0 = l_p_count.ToString();
                                                        data.DSCurveCount1 = l_t_count.ToString();
                                                        data.GDSCurveCount0 = h_p_count.ToString();
                                                        data.GDSCurveCount1 = h_t_count.ToString();
                                                        data.DSHCCurve0 =string.Join(",", l_p_hc);
                                                        data.DSHCCurve1 = string.Join(",", l_t_hc);
                                                        data.GDSHCCurve0 = string.Join(",", h_p_hc);
                                                        data.GDSHCCurve1 = string.Join(",", h_t_hc);
                                                        data.DSCOCurve0 = string.Join(",", l_p_co);
                                                        data.DSCOCurve1 = string.Join(",", l_t_co);
                                                        data.GDSCOCurve0 = string.Join(",", h_p_co);
                                                        data.GDSCOCurve1 = string.Join(",", h_t_co);
                                                        data.DSCO2Curve0 = string.Join(",", l_p_co2);
                                                        data.DSCO2Curve1 = string.Join(",", l_t_co2);
                                                        data.GDSCO2Curve0 = string.Join(",", h_p_co2);
                                                        data.GDSCO2Curve1 = string.Join(",", h_t_co2);
                                                        data.DSO2Curve0 = string.Join(",", l_p_o2);
                                                        data.DSO2Curve1 = string.Join(",", l_t_o2);
                                                        data.GDSO2Curve0 = string.Join(",", h_p_o2);
                                                        data.GDSO2Curve1 = string.Join(",", h_t_lmd);
                                                        data.GDSLmdCurve1 = string.Join(",", h_p_lmd);
                                                        data.GDSO2Curve1 = string.Join(",", h_t_o2);
                                                        data.DSRpmCurve0 = string.Join(",", l_p_zs);
                                                        data.DSRpmCurve1 = string.Join(",", l_t_zs);
                                                        data.GDSRpmCurve0 = string.Join(",", h_p_zs);
                                                        data.GDSRpmCurve1 = string.Join(",", h_t_zs);
                                                        data.DSJYWDCurve0 = string.Join(",", l_p_yw);
                                                        data.DSJYWDCurve1 = string.Join(",", l_t_yw);
                                                        data.GDSJYWDCurve0 = string.Join(",", h_p_yw);
                                                        data.GDSJYWDCurve1 = string.Join(",", h_t_yw);
                                                        if (!mainPanel.xbsocket.Send_TEST_RESULT_DATA(pdata,data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                            }
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(sdsdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆：" + sdsdata.CLPH);
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                        }
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("逐秒数据读取失败");
                                        isCsvAlive = "逐秒数据读取失败";
                                        Msg(label1, panel4, "没有找到过程数据，检测无效");
                                    }
                                    #endregion
                                }
                                File.Delete(newPath);
                                ini.INIIO.saveLogInf("删除结果文件：" + newPath);
                                break;
                            #endregion
                            case "SDSM":
                                #region 摩托车双怠速
                                ini.INIIO.saveLogInf("将结果文件复制到位置：" + "D://dataseconds/" + carLogin.carbj.CLID + ".ini");
                                string sdsminifileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                if (ini.INIIO.createDir(sdsminifileDir))
                                    File.Copy(newPath, sdsminifileDir + "/" + carLogin.carbj.CLID + ".ini", true);
                                sds_data = sdsdatacontrol.readSdsData(newPath);
                                if (sds_data.Co_low == "-1")
                                {
                                    #region 检测中止
                                    ini.INIIO.saveLogInf("设备未完成检测退出,无检测结果数据");
                                    mainPanel.ts1 = "设备未完成检测退出";
                                    mainPanel.ts2 = "无检测结果数据";
                                    if (mainPanel.isNetUsed)
                                    {
                                        if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                        {
                                            carinfor.equipmentStatus equipmentcontrol = new carinfor.equipmentStatus();
                                            equipmentcontrol.JCBGBH = jcbgbh;
                                            equipmentcontrol.JCGWH = mainPanel.lineid;
                                            equipmentcontrol.SJXL = sds_data.λ_value;
                                            equipmentcontrol.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            equipmentcontrol.writeEquipmentStatus('F');
                                            ini.INIIO.saveLogInf("安车联网信息：发送检测失败指令");
                                        }
                                        else if (mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                                        {
                                            NeusoftUtil.UploadDIdleResult vmasresult = new NeusoftUtil.UploadDIdleResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = "";
                                            vmasresult.AirPressure = "";
                                            vmasresult.Humidity = "";
                                            vmasresult.LowIdleCO = "";
                                            vmasresult.LowIdleHC = "";
                                            vmasresult.HighIdleCO = "";
                                            vmasresult.HighIdleHC = "";
                                            vmasresult.LowIdleRev = "";
                                            vmasresult.HighIdleRev = "";
                                            vmasresult.Lambda = "";
                                            vmasresult.StartTime = "";
                                            vmasresult.StopReason = "9";
                                            vmasresult.Result = "2";
                                            vmasresult.OilTemperature = "";
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadDIdleResultRequest(vmasresult, null, out result, out inf, out dtack);
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                mainPanel.neusoftsocket.UploadDIdleResultRequest(vmasresult, null, out ackresult, out errormessage);
                                            }
                                            ini.INIIO.saveLogInf("东软联网信息：发送检测失败指令");
                                        }
                                        else if (mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.StopInspect(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("StopInspect\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送StopInspect指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            ini.INIIO.saveLogInf("南华联网信息：发送检测终止命令");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                        }
                                        else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                        {
                                            车辆检测状态 teststate = new 车辆检测状态();
                                            teststate.JCZBH = mainPanel.stationid;
                                            teststate.LINEID = mainPanel.lineid;
                                            teststate.JYLSH = carLogin.carbj.JYLSH;
                                            teststate.JYCS = carLogin.carbj.JCCS;
                                            teststate.JCSJ = DateTime.Now;
                                            teststate.CLHP = carLogin.carbj.CLHP;
                                            teststate.HPZL = carLogin.carbj.HPZL;
                                            teststate.ZT = mainPanel.stopTest;
                                            teststate.JCFF = carLogin.carbj.JCFF;
                                            mainPanel.logininfcontrol.Save_TestState(teststate);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                        {
                                            string code, msg;
                                            mainPanel.jxinterface.stop(carLogin.jxthiscarinf.detectionId, out code, out msg);
                                        }
                                        else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                        {
                                            string code, msg;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                            ht.Add("jclsh", carLogin.carbj.CLID);
                                            ht.Add("hphm", carLogin.carbj.CLHP);
                                            ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                            ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                            ht.Add("jccs", carLogin.carbj.JCCS);
                                            ht.Add("ycy", carLogin.carbj.JSY);
                                            ht.Add("dly", carLogin.carbj.DLY);
                                            ht.Add("czy", carLogin.carbj.CZY);
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "ASM":
                                                    ht.Add("jcffid", "2"); break;
                                                case "VMAS":
                                                    ht.Add("jcffid", "3"); break;
                                                case "JZJS":
                                                    ht.Add("jcffid", "6"); break;
                                                case "ZYJS":
                                                    ht.Add("jcffid", "4"); break;
                                                case "SDS":
                                                    ht.Add("jcffid", "1"); break;
                                                case "LZ":
                                                    ht.Add("jcffid", "5"); break;

                                            }
                                            ht.Add("jczt", "2");
                                            ht.Add("jcbz", "3");
                                            ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                            ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                            DataTable dtinf = new DataTable();
                                            if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                            {
                                                MessageBox.Show("发送检测结束命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送检测结束命令失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                                        {
                                            string code, msg;
                                            if (!mainPanel.xbsocket.Send_TEST_STOP(carLogin.carbj.JYLSH, carLogin.carbj.JCCS, "用户主动终止", out code, out msg))
                                            {
                                                //MessageBox.Show("车辆检测开始失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送车辆检测终止失败,code" + code + ",msg:" + msg);
                                                //return;
                                            }
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                            mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                            mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                            mainPanel.opratormode.STATUS = "已中止";
                                            mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                            mainPanel.opratormode.YL1 = "";
                                            mainPanel.opratormode.YL2 = "";
                                            mainPanel.opratormode.YL3 = "";
                                            mainPanel.opratormode.YL4 = "";
                                            mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                        }
                                    }
                                    Msg(label1, panel4, "设备未完成检测退出,无检测结果数据");
                                    Msg(labelStatus, panelStatus, "故障");
                                    mainPanel.worklogdata.ProjectID = mainPanel.stationid + mainPanel.lineid + DateTime.Now.ToString("yyMMddHHmmss");//线号“00”代表为登录机进行的操作
                                    mainPanel.worklogdata.ProjectName = "操作日志";
                                    mainPanel.worklogdata.Stationid = mainPanel.stationid;
                                    mainPanel.worklogdata.Lineid = mainPanel.lineid;
                                    mainPanel.worklogdata.Czy = mainPanel.nowUser.userName;
                                    mainPanel.worklogdata.Data = "车辆" + carLogin.carbj.CLHP + "检测中止" + ",驾控员:" + carLogin.carbj.JSY + ",检测方法：" + carLogin.carbj.JCFF;
                                    mainPanel.worklogdata.State = "中止";
                                    mainPanel.worklogdata.Result = "";
                                    mainPanel.worklogdata.Date = DateTime.Now;
                                    mainPanel.worklogdata.Bzsm = "";
                                    mainPanel.demarcatecontrol.saveWordLogByIni(mainPanel.worklogdata);
                                    #endregion
                                }
                                else
                                {
                                    #region 检测有效
                                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
                                    {
                                        mainPanel.jxinterface.takePhotoJx(mainPanel.jxwebinf.socketip, mainPanel.jxwebinf.socketport, carLogin.carbj.CLID, 4);
                                    }
                                    ini.INIIO.saveLogInf("检测完成，检测结果数据有效");
                                    mainPanel.ts1 = "检测完成";
                                    Msg(labelStatus, panelStatus, "检测完成");
                                    string isCsvAlive = "";
                                    DataTable dataseconds = csvreader.readCsv(newCsvPath);
                                    string fdjdszs = "0";
                                    string ddsjywd = "0";
                                    string gdszs = "0";
                                    string gdsjywd = "0";
                                    string yw = "0";
                                    string pdjg = "";
                                    string nhlambdapd = "";
                                    if (dataseconds != null)
                                    {
                                        ini.INIIO.saveLogInf("查询到过程数据");
                                        string fileDir = "D://dataseconds/" + DateTime.Now.ToString("yyMMdd");
                                        if (ini.INIIO.createDir(fileDir))
                                            File.Copy(newCsvPath, fileDir + "/" + carLogin.carbj.CLID + ".csv", true);
                                        ini.INIIO.saveLogInf("过程数据复制到位置：" + fileDir + "/" + carLogin.carbj.CLID + ".csv");
                                        isCsvAlive = saveSdsDataSeconds(dataseconds, carLogin.carbj.CLID, carLogin.carbj.CLHP, jcsj, out fdjdszs, out ddsjywd, out gdszs, out gdsjywd, out yw);
                                        ini.INIIO.saveLogInf("过程数据保存到数据库成功");
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
                                        {
                                            #region 大理联网时上传报告单基本信息并获取分配的检测报告编号
                                            string code, msg;
                                            string reportID;
                                            System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                            switch (carLogin.carbj.JCFF)
                                            {
                                                case "VMAS": ht.Add("检测类别", "1"); break;
                                                case "ASM": ht.Add("检测类别", "2"); break;
                                                case "SDS": ht.Add("检测类别", "3"); break;
                                                case "JZJS": ht.Add("检测类别", "4"); break;
                                                case "ZYJS": ht.Add("检测类别", "5"); break;
                                                case "LZ": ht.Add("检测类别", "6"); break;
                                            }
                                            ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                            ht.Add("检测站编号", mainPanel.stationid);
                                            ht.Add("检测工位号", mainPanel.daliwebinf.LINEID);
                                            ht.Add("检测日期", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("录入员", carLogin.carbj.DLY);
                                            ht.Add("操作员", carLogin.carbj.CZY);
                                            ht.Add("引车员", carLogin.carbj.JSY);
                                            ht.Add("检测开始日期", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("检测结束日期", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车牌号码", carLogin.carbj.CLHP);
                                            ht.Add("车牌颜色", carLogin.carbj.CPYS);
                                            ht.Add("车辆种类", carLogin.modelbj.CLZL);
                                            ht.Add("车辆类型", carLogin.modelbj.CLLX);
                                            ht.Add("车主类别", carLogin.modelbj.OBD);
                                            ht.Add("车主身份证号码", carLogin.modelbj.JSSZK);
                                            ht.Add("车主名称", carLogin.modelbj.CZ);
                                            ht.Add("联系地址", carLogin.modelbj.CZDZ);
                                            ht.Add("联系电话", carLogin.modelbj.LXDH);
                                            ht.Add("厂牌型号", carLogin.modelbj.PP);
                                            ht.Add("车辆品牌", carLogin.modelbj.PP);
                                            ht.Add("车辆型号", carLogin.modelbj.XH);
                                            ht.Add("使用性质", carLogin.modelbj.SYXZ);
                                            ht.Add("车辆营运性质", carLogin.modelbj.SFSRL);
                                            ht.Add("车辆运载种类", carLogin.modelbj.DLSP);
                                            ht.Add("车辆生产日期", carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("车辆识别码", carLogin.modelbj.CLSBM);
                                            ht.Add("生产企业", carLogin.modelbj.SCQY);
                                            ht.Add("最大总质量", carLogin.modelbj.ZZL);
                                            ht.Add("基准质量", carLogin.modelbj.JZZL);
                                            ht.Add("初次登记日期", carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht.Add("单车轴重", carLogin.modelbj.HDZZL);
                                            ht.Add("底盘型号", carLogin.modelbj.DKGYYB);

                                            ht.Add("驱动方式", carLogin.modelbj.QDXS);
                                            ht.Add("驱动轮胎气压", carLogin.modelbj.QDLTQY);
                                            ht.Add("变速器型式", carLogin.modelbj.BSQXS);
                                            ht.Add("档位数", carLogin.modelbj.DWS);
                                            ht.Add("发动机型号", carLogin.modelbj.FDJXH);
                                            ht.Add("发动机编号", carLogin.modelbj.FDJHM);
                                            ht.Add("发动机生产企业", carLogin.modelbj.FDJSCQY);
                                            ht.Add("汽缸数", carLogin.modelbj.QGS);
                                            ht.Add("发动机排量", carLogin.modelbj.FDJPL);
                                            ht.Add("供油方式", carLogin.modelbj.GYFS);
                                            ht.Add("燃油类型", carLogin.modelbj.RLZL);
                                            ht.Add("进气方式", carLogin.modelbj.JQFS);
                                            ht.Add("催化转化器", carLogin.modelbj.JHZZ);
                                            ht.Add("供油系统类型", carLogin.modelbj.DPFS);
                                            ht.Add("排气处理装置", carLogin.modelbj.JHZZ);
                                            ht.Add("燃油标号", carLogin.modelbj.RYPH);
                                            ht.Add("累计行驶里程", carLogin.carbj.XSLC);
                                            ht.Add("检测状态", carLogin.carbj.JCCS == "1" ? "初检" : "复检");
                                            ht.Add("检测次数", carLogin.carbj.JCCS);
                                            ht.Add("转入标志", carLogin.modelbj.SFWDZR);
                                            ht.Add("延期报废", carLogin.modelbj.SFYQBF);
                                            ht.Add("设计乘员数", carLogin.modelbj.HDZK);
                                            ht.Add("检测系统名称", mainPanel.equipmodel.SBMC);
                                            ht.Add("检测设备认证编码", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("检测系统型号", mainPanel.equipmodel.SBXH);
                                            ht.Add("检测系统编号", mainPanel.linemodel.JCXXKZBH);
                                            ht.Add("底盘测功机名称", mainPanel.equipmodel.CGJXH);
                                            ht.Add("气体分析仪名称", mainPanel.equipmodel.FXYXH);
                                            ht.Add("所属区域", carLogin.modelbj.SSXQ);
                                            ht.Add("是否路检", "否");
                                            ht.Add("生产地", carLogin.modelbj.HPZL);
                                            ht.Add("监测目的", carLogin.modelbj.JCLB);
                                            ht.Add("达标标准", carLogin.modelbj.ZXBZ);
                                            ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                            ht.Add("设备制造厂", mainPanel.equipmodel.SBZZC);
                                            if (!mainPanel.daliinterface.sendReportInf(ht, out reportID, out code, out msg))
                                            {
                                                MessageBox.Show("发送报告单基本信息失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                ini.INIIO.saveLogInf("发送报告单基本信息失败,code" + code + ",msg:" + msg);
                                                return;
                                            }
                                            dalijcbgbh = reportID;
                                            #endregion
                                        }
                                        if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                                        {
                                            #region 东软
                                            ini.INIIO.saveLogInf("东软联网信息：结果判定");
                                            if (sdsMResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("东软联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            NeusoftUtil.UploadDIdleResult vmasresult = new NeusoftUtil.UploadDIdleResult();
                                            vmasresult.OutlookID = carLogin.outLookID;
                                            vmasresult.Temperature = sds_data.Wd;
                                            vmasresult.AirPressure = sds_data.Dqy;
                                            vmasresult.Humidity = sds_data.Sd;
                                            vmasresult.LowIdleCO = sds_data.Co_low;
                                            vmasresult.LowIdleHC = sds_data.Hc_low;
                                            vmasresult.HighIdleCO = sds_data.Co_high;
                                            vmasresult.HighIdleHC = sds_data.Hc_high;
                                            vmasresult.LowIdleRev = fdjdszs;
                                            vmasresult.HighIdleRev = gdszs;
                                            vmasresult.Lambda = sds_data.λ_value;
                                            vmasresult.StartTime = sds_data.StartTime;
                                            vmasresult.IdleReason = carLogin.carbj.BGJCFFYY;
                                            vmasresult.StopReason = sds_data.StopReason;
                                            vmasresult.Result = pdjg;
                                            vmasresult.OilTemperature = yw;
                                            if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                                            {
                                                string result, inf;
                                                DataTable dtack;
                                                mainPanel.sysocket.UploadDIdleResultRequest(vmasresult, dataseconds, out result, out inf, out dtack);
                                                if (result == "1")
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    isCsvAlive = "逐秒数据上传成功";

                                                    sdsdata.ZSLOW = fdjdszs;
                                                    sdsdata.ZSHIGH = gdszs;
                                                    sdsdata.JYWDLOW = ddsjywd;
                                                    sdsdata.JYWDHIGH = gdsjywd;
                                                    sdsdata.YW = yw;
                                                    sdsdata.GLKQXSSX = "1.03";
                                                    sdsdata.GLKQXSXX = "0.97";
                                                    sdsdata.JCBGBH = jcbgbh;
                                                    sdsdata.SHY = mainPanel.shy;
                                                    sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                                    if (pdjg == "1")
                                                    {
                                                        mainPanel.ts2 = "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        sdsdal.Save_SDS(sdsdata);
                                                        //vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (pdjg == "0")
                                                    {
                                                        mainPanel.ts2 = "车辆检测不合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        sdsdal.Save_SDS(sdsdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + result + "errormessage:" + inf, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                                                string ackresult, errormessage;
                                                ini.INIIO.saveLogInf("东软联网信息：上传结果信息");
                                                DataTable dtresult = mainPanel.neusoftsocket.UploadDIdleResultRequest(vmasresult, dataseconds, out ackresult, out errormessage);
                                                if (dtresult != null)
                                                {
                                                    ini.INIIO.saveLogInf("东软联网信息：接收到结果信息");
                                                    vmasresult.LowIdleCO = dtresult.Rows[1]["LowIdleCO"].ToString();
                                                    vmasresult.LowIdleHC = dtresult.Rows[1]["LowIdleHC"].ToString();
                                                    vmasresult.HighIdleCO = dtresult.Rows[1]["HighIdleCO"].ToString();
                                                    vmasresult.HighIdleHC = dtresult.Rows[1]["HighIdleHC"].ToString();
                                                    vmasresult.Lambda = dtresult.Rows[1]["Lambda"].ToString();
                                                    vmasresult.Result = dtresult.Rows[1]["TestResult"].ToString();
                                                    isCsvAlive = "逐秒数据上传成功";

                                                    sdsdata.ZSLOW = fdjdszs;
                                                    sdsdata.ZSHIGH = gdszs;
                                                    sdsdata.JYWDLOW = ddsjywd;
                                                    sdsdata.JYWDHIGH = gdsjywd;
                                                    sdsdata.YW = yw;
                                                    sdsdata.GLKQXSSX = "1.03";
                                                    sdsdata.GLKQXSXX = "0.97";
                                                    sdsdata.JCBGBH = jcbgbh;
                                                    sdsdata.SHY = mainPanel.shy;
                                                    sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                                    if (vmasresult.Result == "1")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";// "车辆检测合格";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果合格");
                                                        Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                        pdjg = "1";
                                                        sdsdal.Save_SDS(sdsdata);
                                                        //vmasdal.Save_VMAS(vmasdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else if (vmasresult.Result == "0")
                                                    {
                                                        mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";// "车辆检测不合格";
                                                        if (vmasresult.Result != pdjg)
                                                        {
                                                            mainPanel.ts1 = "评判结果不一致";
                                                            MessageBox.Show("平台判定结果与本地判定不一致:" + errormessage, "提示");
                                                        }
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定结果不合格");
                                                        Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                        saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                        pdjg = "0";
                                                        sdsdal.Save_SDS(sdsdata);
                                                        enableButton(buttonOK, false);
                                                    }
                                                    else
                                                    {
                                                        mainPanel.ts2 = "车辆检测无效";
                                                        ini.INIIO.saveLogInf("东软联网信息：接收到平台判定检测无效");
                                                        Msg(label1, panel4, "车辆检测无效");
                                                    }
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "上传结果失败";
                                                    MessageBox.Show("ackresult:" + ackresult + "errormessage:" + errormessage, "");
                                                    isCsvAlive = "未收到返回结果数据";
                                                    Msg(label1, panel4, "未收到返回结果数据");
                                                    ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                                }
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NHNETMODE)
                                        {
                                            #region 南华
                                            ini.INIIO.saveLogInf("南华联网信息：结果判定");
                                            if (sdsMResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            System.Collections.Hashtable hs = new System.Collections.Hashtable();
                                            System.Collections.Hashtable hs_p = new System.Collections.Hashtable();
                                            hs.Add("ReportNumber", jcbgbh);
                                            hs.Add("Judge", pdjg);
                                            hs.Add("Operator", carLogin.carbj.CZY);
                                            hs.Add("Driver", carLogin.carbj.JSY);
                                            hs.Add("BeginTime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EndTime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            hs.Add("EnvironmentalTemperature", sds_data.Wd);
                                            hs.Add("AtmosphericPressure", sds_data.Dqy);
                                            hs.Add("RelativeHumidity", sds_data.Sd);
                                            hs.Add("COHigh", sdsdata.COHIGHCLZ);
                                            hs.Add("HCHigh", sdsdata.HCHIGHCLZ);
                                            hs.Add("COHighLimit", sdsdata.COHIGHXZ);
                                            hs.Add("HCHighLimit", sdsdata.HCHIGHXZ);
                                            hs.Add("COHighJudge", sdsdata.COHIGHPD == "合格" ? "1" : "0");
                                            hs.Add("HCHighJudge", sdsdata.HCHIGHPD == "合格" ? "1" : "0");
                                            hs.Add("IsJudgeLambda", sdsdata.LAMDAHIGHPD == "" ? "0" : "1");
                                            hs.Add("LambdaHigh", sdsdata.LAMDAHIGHCLZ);
                                            hs.Add("LambdaUpLimit", "1.03");
                                            hs.Add("LambdaBelowLimit", "0.97");
                                            hs.Add("LambdaJudge", nhlambdapd == "合格" ? "1" : "0");
                                            hs.Add("IsTestLI", "1");
                                            hs.Add("COLow", sdsdata.COLOWCLZ);
                                            hs.Add("HCLow", sdsdata.HCLOWCLZ);
                                            hs.Add("COLowLimit", sdsdata.COLOWXZ);
                                            hs.Add("HCLowLimit", sdsdata.HCLOWXZ);
                                            hs.Add("COLowJudge", sdsdata.COLOWPD == "合格" ? "1" : "0");
                                            hs.Add("HCLowJudge", sdsdata.HCLOWPD == "合格" ? "1" : "0");

                                            ini.INIIO.saveLogInf("南华联网信息：上传稳态数据");
                                            int nhcode, nhexpcode;
                                            string nhmsg, nhexpmsg;
                                            bool startflag = mainPanel.nhinterface.SendUploadDISData(carLogin.carbj.JYLSH, hs, dataseconds, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                            if (nhcode == 0 && nhexpcode == 0)
                                            {
                                                if (!startflag)
                                                {
                                                    ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                                }
                                            }
                                            else if (nhcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：错误信息：" + nhmsg);
                                            }
                                            else if (nhexpcode != 0)
                                            {
                                                ini.INIIO.saveLogInf("南华联网信息：异常信息：" + nhexpmsg);
                                            }
                                            if (startflag)
                                            {
                                                isCsvAlive = "逐秒数据上传成功";

                                                sdsdata.ZSLOW = fdjdszs;
                                                sdsdata.ZSHIGH = gdszs;
                                                sdsdata.JYWDLOW = ddsjywd;
                                                sdsdata.JYWDHIGH = gdsjywd;
                                                sdsdata.YW = yw;
                                                sdsdata.GLKQXSSX = "1.03";
                                                sdsdata.GLKQXSXX = "0.97";
                                                sdsdata.JCBGBH = jcbgbh;
                                                sdsdata.SHY = mainPanel.shy;
                                                sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                                if (pdjg == "1")
                                                {
                                                    mainPanel.ts2 = "车辆检测合格";
                                                    Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                    pdjg = "1";
                                                    sdsdal.Save_SDS(sdsdata);
                                                    //vmasdal.Save_VMAS(vmasdata);
                                                    enableButton(buttonOK, false);
                                                }
                                                else
                                                {
                                                    mainPanel.ts2 = "车辆检测不合格";
                                                    Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                    saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                    pdjg = "0";
                                                    sdsdal.Save_SDS(sdsdata);
                                                    enableButton(buttonOK, false);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "上传结果失败";
                                                MessageBox.Show("ackresult:" + nhcode + "errormessage:" + nhmsg, "");
                                                mainPanel.nhinterface.SendStopTest(carLogin.carbj.JYLSH, out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                                                isCsvAlive = "未收到返回结果数据";
                                                Msg(label1, panel4, "未收到返回结果数据");
                                                ini.INIIO.saveLogInf("东软联网信息：未收到返回结果数据");
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
                                        {
                                            #region 江苏
                                            ini.INIIO.saveLogInf("江苏联网信息：结果判定");
                                            if (sdsMResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            carinfor.JsSdsResultData asmresult = new carinfor.JsSdsResultData();
                                            asmresult.check_id = carLogin.carbj.JCBGBH;
                                            asmresult.check_type = carLogin.modelbj.JCLB;
                                            asmresult.citycode = mainPanel.stationid.Substring(0, 6);
                                            asmresult.unit_id = mainPanel.stationid; ;
                                            asmresult.device_id = mainPanel.stationid + mainPanel.lineid;
                                            asmresult.vhicleid = mainPanel.jsvehiclemodel.vehicleid;
                                            asmresult.odo_meter = mainPanel.jsvehiclemodel.odo_meter;
                                            asmresult.check_data = DateTime.Now.ToString("yyyy-MM-dd");
                                            asmresult.starttime = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                            asmresult.end_time = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                            asmresult.temperature = sdsdata.WD;
                                            asmresult.pressure = sdsdata.DQY;
                                            asmresult.humidity = sdsdata.SD;
                                            asmresult.lambda = sdsdata.LAMDAHIGHCLZ;
                                            asmresult.lambda_limit = "0.97-1.03";
                                            asmresult.lambda_passed = ((sdsdata.LAMDAHIGHPD == "") ? "" : ((sdsdata.LAMDAHIGHPD == "合格") ? "1" : "0"));
                                            asmresult.lowidle_co = sdsdata.COLOWCLZ;
                                            asmresult.low_co_limit = sdsdata.COLOWXZ;
                                            asmresult.lowidle_hc = sdsdata.HCLOWCLZ;

                                            asmresult.low_hc_limit = sdsdata.HCLOWXZ;
                                            asmresult.low_passed = (sdsdata.LOWPD == "合格" ? "1" : "0");
                                            asmresult.highidle_co = sdsdata.COHIGHCLZ;
                                            asmresult.high_co_limit = sdsdata.COHIGHXZ;
                                            asmresult.highidle_hc = sdsdata.HCHIGHCLZ;
                                            asmresult.high_hc_limit = sdsdata.HCHIGHXZ;
                                            asmresult.high_passed = (sdsdata.HIGHPD == "合格" ? "1" : "0");
                                            asmresult.passed = pdjg;
                                            bool jsstatus;
                                            string jserrMsg = "";
                                            string finalresult;
                                            bool cardwritestatus;
                                            string jsackstring = mainPanel.jsinterface.uploadInspectionResult(asmresult, dataseconds, out finalresult, out jsstatus, out cardwritestatus, out jserrMsg);
                                            if (jsackstring != "")
                                            {
                                                MessageBox.Show(jsackstring, "上传结果失败");
                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                if (!jsstatus)
                                                {
                                                    MessageBox.Show(jserrMsg, "上传结果失败");
                                                    ini.INIIO.saveLogInf("上传结果失败：" + jserrMsg);
                                                    if (mainPanel.jsinterface.CHECK_TYPE[carLogin.modelbj.JCLB] != "抽检")
                                                        return;
                                                }
                                                if (!cardwritestatus)
                                                {
                                                    MessageBox.Show("电子卡写卡失败");
                                                    ini.INIIO.saveLogInf("电子卡写卡失败");
                                                }
                                            }
                                            ini.INIIO.saveLogInf("江苏联网信息：接收到结果信息");
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            isCsvAlive = "逐秒数据上传成功";

                                            if (pdjg == "1")
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：接收到平台判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：接收到平台判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                                        {
                                            #region 安徽
                                            ini.INIIO.saveLogInf("安徽联网信息：结果判定");
                                            if (sdsMResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("江苏联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");

                                            AhWebClient.AhSdsResult asmresult = new AhWebClient.AhSdsResult();
                                            asmresult.Result = (pdjg == "1" ? "1" : "2");
                                            asmresult.CrucialTime0 = CrucialTime0;
                                            asmresult.Temperature = sdsdata.WD;
                                            asmresult.Humidity = sdsdata.SD; ;
                                            asmresult.Baro = sdsdata.DQY;
                                            asmresult.CrucialTime1 = CrucialTime1;
                                            asmresult.CrucialTime2 = CrucialTime2;
                                            asmresult.LowRPM = sdsdata.ZSLOW;
                                            asmresult.LowCO = sdsdata.COLOWCLZ;
                                            asmresult.LowCO2 = sdsdata.CO2LOW;
                                            asmresult.LowHC = sdsdata.HCLOWCLZ;
                                            asmresult.HiRPM = sdsdata.ZSHIGH;
                                            asmresult.HiCO = sdsdata.COHIGHCLZ;
                                            asmresult.HiCO2 = sdsdata.CO2HIGH;
                                            asmresult.HiHC = sdsdata.HCHIGHCLZ;
                                            asmresult.LMD = sdsdata.LAMDAHIGHCLZ;
                                            asmresult.LowCOLimit = sdsdata.COLOWXZ;
                                            asmresult.LowHCLimit = sdsdata.HCLOWXZ;
                                            asmresult.HiCOLimit = sdsdata.COHIGHXZ;
                                            asmresult.HiHCLimit = sdsdata.HCHIGHXZ;
                                            asmresult.LMDLimitMin = "0.97";
                                            asmresult.LMDLimitMax = "1.03";
                                            asmresult.HiCOResult = sdsdata.COHIGHPD == "合格" ? "1" : "2";
                                            asmresult.HiHCResult = sdsdata.HCHIGHPD == "合格" ? "1" : "2";
                                            asmresult.LowCOResult = sdsdata.COLOWPD == "合格" ? "1" : "2";
                                            asmresult.LowHCResult = sdsdata.HCLOWPD == "合格" ? "1" : "2";
                                            asmresult.LMDResult = (sdsdata.LAMDAHIGHPD == "" ? "0" : (sdsdata.LAMDAHIGHPD == "合格" ? "1" : "2"));



                                            isCsvAlive = "逐秒数据上传成功";
                                            int ahresult = 0;
                                            string ahErrMsg = "";
                                            if (!mainPanel.ahinterface.UploadSdsRealtimeData(carLogin.carbj.CLID, dataseconds, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("UploadSdsRealtimeData\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                MessageBox.Show("上传过程数据发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                Msg(label1, panel4, "上传过程数据发生错误");
                                                return;
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送UploadSdsRealtimeData指令");
                                            }
                                            if (!mainPanel.ahinterface.EndInspectSDS(carLogin.carbj.CLID, asmresult, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndInspectSDS\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                MessageBox.Show("上传检测结果发生错误\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);

                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ahisStopInspect = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndInspectSDS指令");
                                            }
                                            if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                                            {
                                                ini.INIIO.saveLogInf("EndRecord\r\n" + "错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                                //MessageBox.Show("拍照发生错误\r\n"+"错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                                            }
                                            else
                                            {
                                                ahisStopRecord = true;
                                                ini.INIIO.saveLogInf("安徽联网信息：发送EndRecord指令");
                                            }

                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("安徽联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                        {
                                            #region 金华
                                            ini.INIIO.saveLogInf("金华联网信息：结果判定");
                                            if (sdsMResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");



                                            isCsvAlive = "逐秒数据上传成功";
                                            Msg(label1, panel4, "正在上传数据，请等待...");
                                            //string jhtestingid = "";
                                            for (int i = 0; i < 3; i++)
                                            {
                                                if (!mainPanel.jhoracle.insertSds(mainPanel.jhwebinf.stationid, mainPanel.jhwebinf.lineid, carLogin.carbj.CZY, carLogin.carbj.JSY, pdjg, sdsdata, carLogin.carbjJh, jcsj.ToString("yyyy-MM-dd HH:mm:ss"), jssj.ToString("yyyy-MM-dd HH:mm:ss"), out jhtestingid))
                                                {
                                                    if (i == 2)
                                                    {
                                                        Msg(label1, panel4, "上传过程数据发生错误");
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    carLogin.carbj.ECRYPT = jhtestingid;
                                                    ini.INIIO.saveLogInf("金华联网信息：上传过程数据成功");
                                                    break;
                                                }
                                            }
                                            if (!mainPanel.jhoracle.insertSdsDataSeconds(jhtestingid, pdjg, sdsdata, carLogin.carbjJh, dataseconds))
                                            {
                                                Msg(label1, panel4, "上传结果至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("金华联网信息：发送EndInspectSDS指令");
                                            }
                                            if (mainPanel.jhwebinf.checkprint)
                                            {
                                                string resultno;
                                                string resultdesc;
                                                string testno;
                                                JHWebClient.checkResultModel checkmodel = new JHWebClient.checkResultModel();
                                                mainPanel.jhinterface.CheckPrintIsEffective(mainPanel.jhwebinf.serverIP, jhtestingid, out testno, out resultno, out resultdesc, out checkmodel);
                                                if (int.Parse(resultno) > 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    sdsdata.COLOWCLZ = checkmodel.value01;
                                                    sdsdata.HCLOWCLZ = checkmodel.value02;
                                                    sdsdata.COHIGHCLZ = checkmodel.value03;
                                                    sdsdata.HCHIGHCLZ = checkmodel.value04;
                                                    sdsdata.LAMDAHIGHCLZ = checkmodel.value05;
                                                    sdsdata.COLOWXZ = checkmodel.limit01;
                                                    sdsdata.HCLOWXZ = checkmodel.limit02;
                                                    sdsdata.COHIGHXZ = checkmodel.limit03;
                                                    sdsdata.HCHIGHXZ = checkmodel.limit04;
                                                    sdsdata.COLOWPD = (checkmodel.judge01 == "1" ? "合格" : "不合格");
                                                    sdsdata.HCLOWPD = (checkmodel.judge02 == "1" ? "合格" : "不合格");
                                                    sdsdata.COHIGHPD = (checkmodel.judge03 == "1" ? "合格" : "不合格");
                                                    sdsdata.HCHIGHPD = (checkmodel.judge04 == "1" ? "合格" : "不合格");
                                                    sdsdata.LAMDAHIGHPD = (checkmodel.judge05 == "1" ? "合格" : "不合格");
                                                    if (sdsdata.COLOWPD == "不合格" || sdsdata.HCLOWPD == "不合格" || sdsdata.COHIGHPD == "不合格" || sdsdata.HCHIGHPD == "不合格" || sdsdata.LAMDAHIGHPD == "不合格")
                                                    {
                                                        sdsdata.ZHPD = "不合格";
                                                        pdjg = "0";
                                                    }
                                                    else
                                                    {
                                                        sdsdata.ZHPD = "合格";
                                                        pdjg = "1";
                                                    }
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印,但结果有不一致");
                                                }
                                                else if (int.Parse(resultno) == 0)
                                                {
                                                    carLogin.carbj.JCBGBH = testno;
                                                    carLogin.carbj.JYLSH = testno;
                                                    ini.INIIO.saveLogInf("金华联网信息：收到平台验证通过,允许打印");
                                                }
                                                else
                                                {
                                                    Msg(label1, panel4, "验证未通过:" + resultdesc);
                                                    mainPanel.ts2 = "验证未通过";
                                                    MessageBox.Show("验证未通过:" + resultdesc + "\r\n该车不能打印报告");
                                                    return;
                                                }
                                                sdsdata.CLID = testno;
                                            }
                                            else
                                            {
                                                sdsdata.CLID = jhtestingid;
                                            }
                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("金华联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);
                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("金华联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);
                                                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                                                {
                                                    mainPanel.opratormode.ID = carLogin.carbj.CLID;
                                                    mainPanel.opratormode.LINEID = mainPanel.jhwebinf.lineid;
                                                    mainPanel.opratormode.CLHP = carLogin.carbj.CLHP;
                                                    mainPanel.opratormode.STATUS = "已下线";
                                                    mainPanel.opratormode.UPDATETIME = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    mainPanel.opratormode.YL1 = "不合格";
                                                    mainPanel.opratormode.YL2 = "";
                                                    mainPanel.opratormode.YL3 = "";
                                                    mainPanel.opratormode.YL4 = "";
                                                    mainPanel.logininfcontrol.Save_OperateRecord(mainPanel.opratormode);
                                                }
                                            }
                                            #endregion
                                        }
                                        else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                                        {
                                            #region 桂林
                                            ini.INIIO.saveLogInf("桂林联网信息：结果判定");
                                            if (sdsMResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：本地判定结果合格");
                                                pdjg = "1";
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：本地判定结果不合格");
                                                pdjg = "0";
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            string result;
                                            string errmsg = "";
                                            DataTable dt = new DataTable();
                                            Hashtable ht2 = new Hashtable();
                                            ht2.Add("stationcode", mainPanel.stationid);
                                            ht2.Add("scenecode", mainPanel.lineid);
                                            ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                                            ht2.Add("uniquestring", carLogin.carbj.ECRYPT);
                                            ht2.Add("vlpn", carLogin.carbj.CLHP);
                                            ht2.Add("vin", carLogin.modelbj.CLSBM);
                                            ht2.Add("inspectionoperator", carLogin.carbj.CZY);
                                            ht2.Add("inspectiondriver", carLogin.carbj.JSY);
                                            ht2.Add("temperature", sdsdata.WD);
                                            ht2.Add("pressure", sdsdata.DQY);
                                            ht2.Add("humidity", sdsdata.SD);
                                            ht2.Add("iutid", carLogin.carbj.JCBGBH);
                                            ht2.Add("vdct", pdjg);
                                            ht2.Add("iuidate", DateTime.Now.ToString("yyyy-MM-dd"));
                                            ht2.Add("detectstarttime", jcsj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("detectendtime", jssj.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("vinflag", "1");
                                            ht2.Add("enginenumflag", "1");
                                            ht2.Add("icheck", carLogin.carbj.CZY);
                                            ht2.Add("checktime", sdsdata.JCRQ.ToString("yyyy-MM-dd HH:mm:ss"));
                                            ht2.Add("oiltemperature", sdsdata.YW);
                                            ht2.Add("eaclu", "1.03");
                                            ht2.Add("eacld", "0.97");
                                            ht2.Add("eacr", sdsdata.LAMDAHIGHCLZ);
                                            ht2.Add("eacd", sdsdata.LAMDAHIGHPD == "合格" ? "1" : (sdsdata.LAMDAHIGHPD == "不合格" ? "0" : ""));
                                            ht2.Add("licol", sdsdata.COLOWXZ);
                                            ht2.Add("licor", sdsdata.COLOWCLZ);
                                            ht2.Add("licod", sdsdata.COLOWPD == "合格" ? "1" : "0");
                                            ht2.Add("lihcl", sdsdata.HCLOWXZ);
                                            ht2.Add("lihcr", sdsdata.HCLOWCLZ);
                                            ht2.Add("lihcd", sdsdata.HCLOWPD == "合格" ? "1" : "0");
                                            ht2.Add("hicol", sdsdata.COHIGHXZ);
                                            ht2.Add("hicor", sdsdata.COHIGHCLZ);
                                            ht2.Add("hicod", sdsdata.COHIGHPD == "合格" ? "1" : "0");
                                            ht2.Add("hihcl", sdsdata.HCHIGHXZ);
                                            ht2.Add("hihcr", sdsdata.HCHIGHCLZ);
                                            ht2.Add("hihcd", sdsdata.HCHIGHPD == "合格" ? "1" : "0");
                                            ht2.Add("rotatespeedlimit", "100");
                                            ht2.Add("rotatespeed", sdsdata.ZSHIGH);
                                            ht2.Add("gdszs", sdsdata.ZSHIGH);
                                            ht2.Add("dszs", sdsdata.ZSLOW);
                                            ht2.Add("analyser", sdsdata.FXYXH);
                                            ht2.Add("aprovider", sdsdata.FXYZZC);
                                            ht2.Add("flowmeter", "");
                                            ht2.Add("fprovider", "");
                                            ht2.Add("tachometer", sdsdata.ZSJXH);
                                            ht2.Add("tprovider", sdsdata.ZSJZZC);
                                            ht2.Add("otsensor", "");
                                            ht2.Add("oprovider", "");
                                            ht2.Add("weatherstationtype", "");
                                            ht2.Add("weatherstationprovider", "");
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 0, ht2, null, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传结果数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传结果数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传结果数据成功");
                                            }
                                            List<Hashtable> htpro = new List<Hashtable>();
                                            for (int i = 1; i < dataseconds.Rows.Count; i++)
                                            {
                                                Hashtable htchild = new Hashtable();
                                                DataRow dr = dataseconds.Rows[i];
                                                htchild.Add("stationcode", mainPanel.stationid);
                                                htchild.Add("inspectionnum", carLogin.carbj.JYLSH);
                                                htchild.Add("processtime", DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyy-MM-dd HH:mm:ss"));
                                                htchild.Add("gklx", dr["时序类别"].ToString());
                                                htchild.Add("second_no", i.ToString());
                                                htchild.Add("eacr", dr["过量空气系数"].ToString());
                                                htchild.Add("hcr", dr["HC"].ToString());
                                                htchild.Add("cor", dr["CO"].ToString());
                                                htchild.Add("o2r", dr["O2"].ToString());
                                                htchild.Add("co2r", dr["CO2"].ToString());
                                                htchild.Add("rotatespeed", dr["转速"].ToString());
                                                htpro.Add(htchild);
                                            }
                                            if (!mainPanel.gxinterface.uploadTestData(carLogin.carbj.JCFF, 1, null, htpro, out result, out errmsg))
                                            {
                                                ini.INIIO.saveLogInf("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);
                                                MessageBox.Show("上传过程数据失败\r\n" + "错误代码：" + result + "\r\n" + "错误信息：" + errmsg);

                                                Msg(label1, panel4, "上传过程数据至联网平台失败");
                                                return;
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("桂林联网信息：上传过程数据成功");
                                            }

                                            isCsvAlive = "逐秒数据上传成功";
                                            if (pdjg == "1")
                                            {
                                                mainPanel.ts2 = "车辆检测合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：判定结果合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "1";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                //vmasdal.Save_VMAS(vmasdata);
                                                enableButton(buttonOK, false);

                                            }
                                            else
                                            {
                                                mainPanel.ts2 = "车辆检测不合格";
                                                ini.INIIO.saveLogInf("桂林联网信息：判定结果不合格");
                                                Msg(label1, panel4, "车辆检测完成，" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                                ini.INIIO.saveSocketLogInf("保存车辆信息");
                                                pdjg = "0";
                                                sdsdal.Save_SDS(sdsdata);
                                                ini.INIIO.saveSocketLogInf("保存检测信息");
                                                enableButton(buttonOK, false);

                                            }
                                            #endregion
                                        }
                                        else
                                        {
                                            #region 其他
                                            ini.INIIO.saveLogInf("判定检测结果");

                                            if (sdsMResultPd(sds_data, out nhlambdapd) == true)
                                            {
                                                ini.INIIO.saveLogInf("检测结果：合格");
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测合格" : "车辆驶离";
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE || mainPanel.NetMode == mainPanel.EZNETMODE||mainPanel.NetMode==mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "合格");
                                            }
                                            else
                                            {
                                                ini.INIIO.saveLogInf("检测结果：不合格");
                                                mainPanel.ts2 = mainPanel.equipconfig.displayJudge ? "车辆检测不合格" : "车辆驶离";
                                                if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE || mainPanel.NetMode == mainPanel.EZNETMODE||mainPanel.NetMode==mainPanel.XBNETMODE))
                                                {
                                                    Msg(label1, panel4, "车辆检测合格,正在上传结果数据...");
                                                }
                                                else
                                                    Msg(label1, panel4, "车辆检测不合格" + isCsvAlive);
                                                saveBjclInf(carLogin.modelbj, carLogin.carbj, "不合格");
                                            }
                                            sdsdata.ZSLOW = fdjdszs;
                                            sdsdata.ZSHIGH = gdszs;
                                            sdsdata.JYWDLOW = ddsjywd;
                                            sdsdata.JYWDHIGH = gdsjywd;
                                            sdsdata.YW = yw;
                                            sdsdata.GLKQXSSX = "1.03";
                                            sdsdata.GLKQXSXX = "0.97";
                                            sdsdata.JCBGBH = jcbgbh;
                                            sdsdata.SHY = mainPanel.shy;
                                            sdsdata.SYNCHDATE = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            sdsdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                            ini.INIIO.saveLogInf("保存SDS检测结果到数据库");
                                            sdsdal.Save_SDS(sdsdata);
                                            if (mainPanel.isNetUsed)
                                            {
                                                if (mainPanel.NetMode == mainPanel.WGNETMODE)
                                                {
                                                    #region 万国
                                                    carinfor.WGBasicTestData basicdata = new carinfor.WGBasicTestData();
                                                    basicdata.JCBGBH = jcbgbh;
                                                    basicdata.JCLXBH = thisjcff;
                                                    basicdata.JCLXMC = thisjcffmc;
                                                    basicdata.JCGWH = mainPanel.lineid;
                                                    basicdata.JCZBH = mainPanel.wgsocketinf.JCZBH;
                                                    basicdata.JCZMC = mainPanel.stationinfmodel.STATIONNAME;
                                                    basicdata.JCRQ = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                                    basicdata.JCLRY = carLogin.carbj.DLY;
                                                    basicdata.JCCZY = carLogin.carbj.CZY;
                                                    basicdata.JCJSY = carLogin.carbj.JSY;
                                                    basicdata.CPHM = carLogin.carbj.CLHP;
                                                    basicdata.SFCJ = (int.Parse(carLogin.carbj.JCCS) > 1) ? "复检" : "初检";
                                                    basicdata.JCCS = carLogin.carbj.JCCS;
                                                    basicdata.SFLJ = "否";
                                                    basicdata.SFCS = carLogin.carbj.SFCS;
                                                    basicdata.FWLX = "正常";
                                                    basicdata.PDJG = sdsdata.ZHPD;
                                                    basicdata.BGJCFFYY = carLogin.bgffyy;
                                                    basicdata.WXBJ = carLogin.wxbj;
                                                    basicdata.WXCD = carLogin.wxcd;
                                                    basicdata.WXSJ = carLogin.wxsj;
                                                    basicdata.WXFY = carLogin.wxfy;
                                                    if (!mainPanel.wgsocket.SendBasicTestData(basicdata))
                                                    {
                                                        MessageBox.Show("基本结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    carinfor.WGCommonTestData comondata = new carinfor.WGCommonTestData();
                                                    carinfor.WGSDSresultData wgdata = new carinfor.WGSDSresultData();
                                                    comondata.SBRZBM = mainPanel.wgsocketinf.SBRZBH;
                                                    comondata.SBMC = mainPanel.equipmodel.SBMC;
                                                    comondata.SBXH = mainPanel.equipmodel.SBXH;
                                                    comondata.SBZZC = mainPanel.equipmodel.SBZZC;
                                                    comondata.DPCGJ = "--";
                                                    comondata.PQFXY = mainPanel.equipmodel.FXYXH;
                                                    comondata.LLJ = "";
                                                    wgdata.JCBGBH = jcbgbh;
                                                    wgdata.WD = sdsdata.WD;
                                                    wgdata.XDSD = sdsdata.SD;
                                                    wgdata.DQY = sdsdata.DQY;
                                                    wgdata.GLKQXSZ = sdsdata.LAMDAHIGHCLZ;
                                                    wgdata.GLKQXSPDJG = sdsdata.LAMDAHIGHPD;
                                                    wgdata.DDSCOXZ = sdsdata.COLOWXZ;
                                                    wgdata.DDSCOZ = sdsdata.COLOWCLZ;
                                                    wgdata.DDSCOPDJG = sdsdata.COLOWPD;
                                                    wgdata.DDSHCXZ = sdsdata.HCLOWXZ;
                                                    wgdata.DDSHCZ = sdsdata.HCLOWCLZ;
                                                    wgdata.DDSHCPDJG = sdsdata.HCLOWPD;
                                                    wgdata.FDJDSZS = sdsdata.ZSLOW;
                                                    wgdata.DDSJYWD = sdsdata.JYWDLOW;
                                                    wgdata.GDSCOXZ = sdsdata.COHIGHXZ;
                                                    wgdata.GDSCOZ = sdsdata.COHIGHCLZ;
                                                    wgdata.GDSCOPDJG = sdsdata.COHIGHPD;
                                                    wgdata.GDSHCZ = sdsdata.HCHIGHCLZ;
                                                    wgdata.GDSHCXZ = sdsdata.HCHIGHXZ;
                                                    wgdata.GDSHCPDJG = sdsdata.HCHIGHPD;
                                                    wgdata.GDSZS = sdsdata.ZSHIGH;
                                                    wgdata.GDSJYWD = sdsdata.JYWDHIGH;
                                                    wgdata.PDJG = sdsdata.ZHPD;
                                                    wgdata.SHY = mainPanel.shy;
                                                    wgdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
                                                    wgdata.YW = sdsdata.YW;
                                                    wgdata.GLKQXSSX = sdsdata.GLKQXSSX;
                                                    wgdata.GLKQXSXX = sdsdata.GLKQXSXX;
                                                    if (!mainPanel.wgsocket.SendSDSresultData(comondata, wgdata))
                                                    {
                                                        MessageBox.Show("结果数据上传服务器失败", "错误提示");
                                                        return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.CCNETMODE)
                                                {
                                                    #region 诚创
                                                    string code, message;

                                                    if (mainPanel.ccsocket.SendInspectionEnd(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message))
                                                    {
                                                        if (code != "1")
                                                        {
                                                            Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                            return;
                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息成功");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        Msg(label1, panel4, "发送车辆结束信息失败,错误信息：" + message);
                                                        ini.INIIO.saveLogInf("（诚创联网）发送车辆结束信息失败,错误信息：" + message);
                                                        return;
                                                    }
                                                    carinfor.dataMainTxt datamaintxt = new carinfor.dataMainTxt();
                                                    datamaintxt.jcbh = carLogin.carbj.CLID;
                                                    datamaintxt.clhp = carLogin.carbj.CLHP;
                                                    datamaintxt.hpzl = carLogin.modelbj.CPYS;
                                                    datamaintxt.vin = carLogin.modelbj.CLSBM;
                                                    datamaintxt.czy = carLogin.carbj.CZY;
                                                    datamaintxt.jsy = carLogin.carbj.JSY;
                                                    datamaintxt.wd = sdsdata.WD;
                                                    datamaintxt.sd = sdsdata.SD;
                                                    datamaintxt.dqy = sdsdata.DQY;
                                                    datamaintxt.jcsxh = jcsxh;
                                                    datamaintxt.cj = (sdsdata.ZHPD == "合格") ? "1" : "0";
                                                    datamaintxt.jccs = carLogin.carbj.JCCS;
                                                    datamaintxt.ljsxlc = carLogin.carbj.XSLC;
                                                    datamaintxt.lsh = carLogin.carbj.JCBGBH;
                                                    datamaintxt.jckssj = sdsdata.JCKSSJ;
                                                    datamaintxt.jcjssj = sdsdata.JCJSSJ;
                                                    datamaintxt.jyr = sdsdata.SHY;
                                                    datamaintxt.jcbgbh = carLogin.carbj.JCBGBH;
                                                    if (mainPanel.ccsocket.writeDataMainTxt(datamaintxt))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写主检测信息数据成失败");
                                                        Msg(label1, panel4, "写主检测信息数据成失败");
                                                        return;
                                                    }
                                                    carinfor.DataResultSds dataresult = new carinfor.DataResultSds();
                                                    dataresult.jcbh = carLogin.carbj.CLID;
                                                    dataresult.lambdaxz = sdsdata.LAMDAHIGHXZ;
                                                    dataresult.lambda = sdsdata.LAMDAHIGHCLZ;
                                                    dataresult.lambdapd = ((sdsdata.LAMDAHIGHPD == "合格") ? "1" : "0");
                                                    dataresult.colowxz = sdsdata.COLOWXZ;
                                                    dataresult.colow = sdsdata.COLOWCLZ;
                                                    dataresult.colowpd = ((sdsdata.COLOWPD == "合格") ? "1" : "0");
                                                    dataresult.hclowxz = sdsdata.HCLOWXZ;
                                                    dataresult.hclow = sdsdata.HCLOWCLZ;
                                                    dataresult.hclowpd = ((sdsdata.HCLOWPD == "合格") ? "1" : "0");
                                                    dataresult.cohighxz = sdsdata.COHIGHXZ;
                                                    dataresult.cohigh = sdsdata.COHIGHCLZ;
                                                    dataresult.cohighpd = ((sdsdata.COHIGHPD == "合格") ? "1" : "0");
                                                    dataresult.hchighxz = sdsdata.HCHIGHXZ;
                                                    dataresult.hchigh = sdsdata.HCHIGHCLZ;
                                                    dataresult.hchighpd = ((sdsdata.HCHIGHPD == "合格") ? "1" : "0");
                                                    if (mainPanel.ccsocket.writeDataResult(dataresult))
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写双怠速检测结果数据成功");
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）写双怠速检测结果数据成失败");
                                                        Msg(label1, panel4, "写双怠速检测结果数据成失败");
                                                        return;
                                                    }
                                                    bool uploadOK = false;
                                                    for (int i = 0; i < 3; i++)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）" + (i + 1).ToString() + "Upload");
                                                        if (mainPanel.ccsocket.WaitUploadFinish(out code, out message, out uploadOK))
                                                        {
                                                            if (code == "1")
                                                            {
                                                                if (uploadOK)
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload成功");
                                                                    break;
                                                                }
                                                                else
                                                                {
                                                                    ini.INIIO.saveLogInf("（诚创联网）Upload失败");
                                                                    // Msg(label1, panel4, "Upload失败");
                                                                    continue;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                                //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                                continue;
                                                            }

                                                        }
                                                        else
                                                        {
                                                            ini.INIIO.saveLogInf("（诚创联网）Upload失败,错误信息：" + message);
                                                            //Msg(label1, panel4, "Upload失败,错误信息：" + message);
                                                            continue;
                                                        }
                                                    }
                                                    if (!uploadOK)
                                                    {
                                                        ini.INIIO.saveLogInf("（诚创联网）Upload三次上传失败");
                                                        //return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.ORTNETMODE)
                                                {
                                                    #region ort net mode
                                                    string code, message;
                                                    carinfor.OrtTSIVehicleInfo vehicleinf = new carinfor.OrtTSIVehicleInfo();
                                                    vehicleinf.License = carLogin.modelbj.CLHP;
                                                    vehicleinf.LicenseClass = carLogin.modelbj.CPYS;
                                                    vehicleinf.Fuel = carLogin.modelbj.RLZL;
                                                    vehicleinf.VLTID = carLogin.modelbj.ZZL;
                                                    vehicleinf.Mileage = carLogin.carbj.XSLC;
                                                    vehicleinf.OwnerName = carLogin.modelbj.CZ;
                                                    vehicleinf.OwnerAddr = carLogin.modelbj.CZDZ;
                                                    vehicleinf.BodyColor = carLogin.modelbj.CSYS;
                                                    vehicleinf.EngineID = carLogin.modelbj.FDJHM;
                                                    vehicleinf.VIN = carLogin.modelbj.CLSBM;
                                                    vehicleinf.Cleaners = carLogin.modelbj.GYFS;
                                                    vehicleinf.Brand = carLogin.modelbj.PP;
                                                    vehicleinf.Model = carLogin.modelbj.XH;
                                                    vehicleinf.GATypeCode = carLogin.modelbj.CLLX.Split('_')[0];
                                                    vehicleinf.UseType = mainPanel.ortsocket.ORT_UseTypeR.GetValue(carLogin.modelbj.SYXZ, "");
                                                    vehicleinf.Area = carLogin.modelbj.SSXQ;
                                                    vehicleinf.EngineModel = carLogin.modelbj.FDJXH;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JQFS.Contains("增压") ? "是" : "否";
                                                    vehicleinf.RegData = carLogin.modelbj.ZCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.FactoryDate = carLogin.modelbj.SCRQ.ToString("yyyy-MM-dd");
                                                    vehicleinf.DriveType = carLogin.modelbj.QDXS;
                                                    vehicleinf.IsClosedLoopEFI = carLogin.modelbj.DPFS == "闭环电喷" ? "是" : "否";
                                                    vehicleinf.Is3WCC = carLogin.modelbj.JHZZ;
                                                    vehicleinf.IsTurbo = carLogin.modelbj.JHZZ;
                                                    vehicleinf.RateSpeed = carLogin.modelbj.EDZS;
                                                    vehicleinf.NominalPower = carLogin.modelbj.EDGL;
                                                    vehicleinf.Passengers = carLogin.modelbj.HDZK;
                                                    vehicleinf.BaseWeight = carLogin.modelbj.JZZL;
                                                    vehicleinf.Cylinders = carLogin.modelbj.QGS;
                                                    vehicleinf.IfGoIntoCity = carLogin.modelbj.SFWDZR;
                                                    vehicleinf.Stage = mainPanel.ortsocket.ORT_PhaseR.GetValue(carLogin.modelbj.ZXBZ, "");

                                                    carinfor.OrtTSIResult resultinf = new carinfor.OrtTSIResult();
                                                    resultinf.TestID = carLogin.carbj.JCBGBH;
                                                    resultinf.License = carLogin.carbj.CLHP;
                                                    resultinf.LicenseClass = carLogin.carbj.CPYS;
                                                    if (int.Parse(carLogin.modelbj.ZZL) <= 3500)
                                                        resultinf.VehicleType = "轻型车辆";
                                                    else if (int.Parse(carLogin.modelbj.ZZL) > 10000)
                                                        resultinf.VehicleType = "重型车辆";
                                                    else
                                                        resultinf.VehicleType = "中型车辆";
                                                    resultinf.TestType = carLogin.carbj.SFCJ;
                                                    resultinf.Region = carLogin.modelbj.SSXQ;
                                                    resultinf.Phase = carLogin.modelbj.ZXBZ;
                                                    resultinf.StationID = mainPanel.stationid;
                                                    resultinf.EISID = mainPanel.stationinfmodel.StationCompany + mainPanel.lineid;
                                                    resultinf.OperatorID = carLogin.carbj.CZY;
                                                    resultinf.AmbientTemp = sdsdata.WD;
                                                    resultinf.AmbientHum = sdsdata.SD;
                                                    resultinf.Pressure = sdsdata.DQY;
                                                    resultinf.TestStartTime = jcsj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    resultinf.TestEndTime = jssj.ToString("yyyy-MM-dd HH:mm:ss");
                                                    resultinf.AmbientHC = "0";
                                                    resultinf.AmbientCO = "0.00";
                                                    resultinf.AmbientNO = "0";
                                                    resultinf.ResidualHC = "0";
                                                    resultinf.HCHigh = sdsdata.HCHIGHCLZ;
                                                    resultinf.COHigh = sdsdata.COHIGHCLZ;
                                                    resultinf.HCLow = sdsdata.HCLOWCLZ;
                                                    resultinf.COLow = sdsdata.COLOWCLZ;
                                                    resultinf.Result = sdsdata.ZHPD;
                                                    resultinf.Lumbda = sdsdata.LAMDAHIGHCLZ;
                                                    resultinf.HCHighCutpoint = sdsdata.HCHIGHXZ;
                                                    resultinf.COHighCutpoint = sdsdata.COHIGHXZ;

                                                    resultinf.HCLowCutpoint = sdsdata.HCLOWXZ;
                                                    resultinf.COLowCutpoint = sdsdata.COLOWXZ;
                                                    resultinf.LumbdaCutpoint = "0.97-1.03";
                                                    resultinf.LumbdaResult = sdsdata.LAMDAHIGHPD;
                                                    resultinf.CrucialTime0 = CrucialTime0;
                                                    resultinf.CrucialTime1 = CrucialTime1;
                                                    resultinf.CrucialTime2 = CrucialTime2;
                                                    resultinf.CrucialTime3 = "";
                                                    resultinf.OutlookResult = "合格";
                                                    resultinf.AbortReason = "";
                                                    if (mainPanel.ortsocket.UploadTSIResult(vehicleinf, resultinf, out code, out message))
                                                    {

                                                        ini.INIIO.saveLogInf("（欧润特联网）写双怠法检测结果数据成成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else if (mainPanel.ortsocket.UploadTSIResult(vehicleinf, resultinf, out code, out message))
                                                    {

                                                        ini.INIIO.saveLogInf("（欧润特联网）写双怠法检测结果数据第一次失败，第二次成功");
                                                        //Msg(label1, panel4, "写稳态工况法检测结果数据成失败");
                                                        //return;
                                                    }
                                                    else
                                                    {
                                                        ini.INIIO.saveLogInf("（欧润特联网）写双怠速法检测结果数据成失败");
                                                        Msg(label1, panel4, "写双怠速法检测结果数据成失败");
                                                        return;
                                                    }
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.ACNETMODE)
                                                {
                                                    #region 安车
                                                    Thread.Sleep(1000);
                                                    if (!saveSdsMResutl2Net())
                                                    {
                                                        Thread.Sleep(1000);
                                                        if (!saveSdsMResutl2Net())
                                                        {
                                                            MessageBox.Show("结果数据上传服务器失败", "错误提示");
                                                            ini.INIIO.saveLogInf("安车联网信息：结果数据上传服务器失败");
                                                            //return;
                                                        }
                                                        else
                                                            ini.INIIO.saveLogInf("安车联网信息：结果数据上传服务器成功");
                                                    }
                                                    else
                                                        ini.INIIO.saveLogInf("安车联网信息：结果数据上传服务器成功");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.TYNETMODE)
                                                {
                                                    车辆检测状态 teststate = new 车辆检测状态();
                                                    teststate.JCZBH = mainPanel.stationid;
                                                    teststate.LINEID = mainPanel.lineid;
                                                    teststate.JYLSH = carLogin.carbj.JYLSH;
                                                    teststate.JYCS = carLogin.carbj.JCCS;
                                                    teststate.JCSJ = DateTime.Now;
                                                    teststate.CLHP = carLogin.carbj.CLHP;
                                                    teststate.HPZL = carLogin.carbj.HPZL;
                                                    teststate.ZT = mainPanel.finishTest;
                                                    teststate.JCFF = carLogin.carbj.JCFF;
                                                    mainPanel.logininfcontrol.Save_TestState(teststate);
                                                }
                                                else if (mainPanel.NetMode == mainPanel.JXNETMODE)
                                                {
                                                    #region 江西
                                                    string code, msg;

                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        jxSdsProcessData processdata = new jxSdsProcessData(
                                                            dr["全程时序"].ToString(),
                                                            dr["时序类别"].ToString(),
                                                            i.ToString(),
                                                            dr["HC"].ToString(),
                                                             dr["CO"].ToString(),
                                                             dr["O2"].ToString(),
                                                             dr["CO2"].ToString(),
                                                             dr["过量空气系数"].ToString(),
                                                             dr["转速"].ToString());
                                                        if (!mainPanel.jxinterface.sendIdleStateProcessData(carLogin.carbj.CLID, processdata, out code, out msg))
                                                        {
                                                            MessageBox.Show("sendIdleStateResultData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                            ini.INIIO.saveLogInf("江西联网信息：sendIdleStateResultData上传服务器失败");
                                                            return;
                                                        }
                                                    }
                                                    jxSdsResultData resultdata = new jxSdsResultData(
                                                        sdsdata.CLID,
                                                        sdsdata.WD,
                                                        sdsdata.DQY,
                                                        sdsdata.SD,
                                                        sdsdata.YW,
                                                        "0.97",
                                                        "1.03",
                                                        sdsdata.LAMDAHIGHCLZ,
                                                        sdsdata.LAMDAHIGHPD == "不合格" ? "0" : "1",
                                                        sdsdata.COLOWXZ,
                                                        sdsdata.COLOWCLZ,
                                                        sdsdata.COLOWPD == "不合格" ? "0" : "1",
                                                        sdsdata.HCLOWXZ,
                                                        sdsdata.HCLOWCLZ,
                                                        sdsdata.HCLOWPD == "不合格" ? "0" : "1",
                                                        sdsdata.COHIGHXZ,
                                                        sdsdata.COHIGHCLZ,
                                                        sdsdata.COHIGHPD == "不合格" ? "0" : "1",
                                                        sdsdata.HCHIGHXZ,
                                                        sdsdata.HCHIGHCLZ,
                                                        sdsdata.HCHIGHPD == "不合格" ? "0" : "1",
                                                        sdsdata.ZSLOW,
                                                        sdsdata.ZSHIGH,
                                                        jcsj.ToString("yyyy-MM-dd HH:mm:ss"),
                                                        jssj.ToString("yyyy-MM-dd HH:mm:ss")
                                                        );
                                                    if (!mainPanel.jxinterface.sendIdleStateResultData(carLogin.carbj.CLID, resultdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("sendIdleStateResultData上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：sendIdleStateResultData上传服务器失败");
                                                        return;
                                                    }
                                                    if (!mainPanel.jxinterface.finish(carLogin.carbj.CLID, out code, out msg))
                                                    {
                                                        MessageBox.Show("finish上传服务器失败\r\ncode=" + code + "\r\nmsg=" + msg, "错误提示");
                                                        ini.INIIO.saveLogInf("江西联网信息：finish上传服务器失败");
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.HNNETMODE)
                                                {
                                                    #region 湖南
                                                    string code, msg;
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    System.Collections.Hashtable htdata = new System.Collections.Hashtable();
                                                    ht.Add("jssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", sdsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    DataTable dtinf = new DataTable();
                                                    if (!mainPanel.hninterface.finishTest(ht, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送开始检测命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送开始检测命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("xh", carLogin.modelbj.XH);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("clxh", carLogin.modelbj.PP);
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("fdjxh", carLogin.modelbj.FDJXH);
                                                    ht.Add("fdjh", carLogin.modelbj.FDJHM);
                                                    ht.Add("cllx", carLogin.modelbj.CLLX.Split('_')[0]);
                                                    ht.Add("csys", mainPanel.hninterface.RHN_CSYS.GetValue(carLogin.modelbj.CSYS, ""));
                                                    ht.Add("syxz", mainPanel.hninterface.RHN_SYXZ.GetValue(carLogin.modelbj.SYXZ, ""));
                                                    ht.Add("syr", carLogin.modelbj.CZ);
                                                    ht.Add("ccdjrq", carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("rlzl", mainPanel.hninterface.RHN_RLZL.GetValue(carLogin.modelbj.RLZL, ""));
                                                    ht.Add("pl", carLogin.modelbj.FDJPL);
                                                    ht.Add("gl", carLogin.modelbj.EDGL);
                                                    ht.Add("zs", "2");
                                                    ht.Add("zj", "2800");
                                                    ht.Add("qlj", "");
                                                    ht.Add("hlj", "");
                                                    ht.Add("zzl", carLogin.modelbj.ZZL);
                                                    ht.Add("zbzl", carLogin.modelbj.ZBZL);
                                                    ht.Add("ccrq", carLogin.modelbj.SCRQ.ToString("yyyyMMdd"));
                                                    ht.Add("zsxzqh", "");
                                                    ht.Add("zzxzqh", "");
                                                    ht.Add("zt", "");
                                                    ht.Add("jqfs", mainPanel.hninterface.RHN_JQFS.GetValue(carLogin.modelbj.JQFS, ""));
                                                    ht.Add("gyxs", mainPanel.hninterface.RHN_GYXS.GetValue(carLogin.modelbj.GYFS, ""));
                                                    ht.Add("yxqz", "");
                                                    ht.Add("xslc", carLogin.carbj.XSLC);
                                                    ht.Add("chzhq", (carLogin.modelbj.JHZZ == "无" || carLogin.modelbj.JHZZ == "否") ? "0" : "1");
                                                    ht.Add("edzs", carLogin.modelbj.EDZS);
                                                    ht.Add("qdlqy", carLogin.modelbj.QDLTQY);
                                                    ht.Add("dczz", carLogin.modelbj.SSXQ);
                                                    ht.Add("rygg", carLogin.modelbj.RYPH);
                                                    ht.Add("bsqxs", mainPanel.hninterface.RHN_BSQXS.GetValue(carLogin.modelbj.BSQXS, ""));
                                                    ht.Add("dws", carLogin.modelbj.DWS);
                                                    ht.Add("qgs", carLogin.modelbj.QGS);
                                                    ht.Add("edzk", carLogin.modelbj.HDZK);
                                                    ht.Add("hbdbqk", "");
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", sdsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    htdata.Add("glkqxssx", "1.03");
                                                    htdata.Add("glkqxsxx", "0.97");
                                                    htdata.Add("glkqxsjg", sdsdata.LAMDAHIGHCLZ);
                                                    htdata.Add("glkqxspd", sdsdata.LAMDAHIGHPD == "不合格" ? "0" : (sdsdata.LAMDAHIGHPD == "" ? "-1" : "1"));
                                                    htdata.Add("ddscoxz", sdsdata.COLOWXZ);
                                                    htdata.Add("ddscojg", sdsdata.COLOWCLZ);
                                                    htdata.Add("ddscopd", sdsdata.COLOWPD == "不合格" ? "0" : "1");
                                                    htdata.Add("ddshcxz", sdsdata.HCLOWXZ);
                                                    htdata.Add("ddshcjg", sdsdata.HCLOWCLZ);
                                                    htdata.Add("ddshcpd", sdsdata.HCLOWPD == "不合格" ? "0" : "1");
                                                    htdata.Add("ddszs", sdsdata.ZSLOW);
                                                    htdata.Add("ddsyw", sdsdata.JYWDLOW);
                                                    htdata.Add("gdscoxz", sdsdata.COHIGHXZ);
                                                    htdata.Add("gdscojg", sdsdata.COHIGHCLZ);
                                                    htdata.Add("gdscopd", sdsdata.COHIGHPD == "不合格" ? "0" : "1");
                                                    htdata.Add("gdshcxz", sdsdata.HCHIGHXZ);
                                                    htdata.Add("gdshcjg", sdsdata.HCHIGHCLZ);
                                                    htdata.Add("gdshcpd", sdsdata.HCHIGHPD == "不合格" ? "0" : "1");
                                                    htdata.Add("gdszs", sdsdata.ZSHIGH);
                                                    htdata.Add("gdsyw", sdsdata.JYWDHIGH);
                                                    htdata.Add("tsihjwd", sdsdata.WD);
                                                    htdata.Add("tsihjsd", sdsdata.SD);
                                                    htdata.Add("tsihjdqy", sdsdata.DQY);
                                                    if (!mainPanel.hninterface.writeTestResult(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送结果数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    ht.Clear();
                                                    htdata.Clear();
                                                    ht.Add("jclsh", carLogin.carbj.CLID);
                                                    ht.Add("hphm", carLogin.carbj.CLHP);
                                                    ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                                                    ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                                                    ht.Add("jccs", carLogin.carbj.JCCS);
                                                    ht.Add("ycy", carLogin.carbj.JSY);
                                                    ht.Add("dly", carLogin.carbj.DLY);
                                                    ht.Add("czy", carLogin.carbj.CZY);
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "ASM":
                                                            ht.Add("jcffid", "2"); break;
                                                        case "VMAS":
                                                            ht.Add("jcffid", "3"); break;
                                                        case "JZJS":
                                                            ht.Add("jcffid", "6"); break;
                                                        case "ZYJS":
                                                            ht.Add("jcffid", "4"); break;
                                                        case "SDS":
                                                            ht.Add("jcffid", "1"); break;
                                                        case "LZ":
                                                            ht.Add("jcffid", "5"); break;

                                                    }
                                                    ht.Add("jczt", sdsdata.ZHPD == "合格" ? "1" : "0");
                                                    ht.Add("jcbz", "3");
                                                    ht.Add("jcrq", DateTime.Now.ToString("yyyyMMdd"));
                                                    ht.Add("jyzl", mainPanel.hninterface.RHN_JYZL.GetValue(carLogin.modelbj.JCLB, ""));
                                                    string HCGCSJ = "", COGCSJ = "", CO2GCSJ = "", O2GCSJ = "", NOXGCSJ = "", GLKQXSSJ = "", HCPFZLGCSJ = "", COPFZLGCSJ = "",
                                                        NOXPFZLGCSJ = "", LLJO2GCSJ = "", LLJSJLLGCSJ = "", LLJBZLLGCSJ = "", LLJWDGCSJ = "", QCWQLLGCSJ = "", LLJQYGCSJ = "", ZSGCSJ = "", YWGCSJ = "",
                                                        CSGCSJ = "", XSBGCSJ = "", XSXZGCSJ = "", SDXZGCSJ = "", JSGLGCSJ = "", ZSGLGCSJ = "", HJWDGCSJ = "", HJSDGCSJ = "", HJDQYGCSJ = "", YDZGCSJ = "",
                                                        GXSXSGCSJ = "";
                                                    for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                    {
                                                        DataRow dr = dataseconds.Rows[i];
                                                        HCGCSJ += dr["HC"].ToString() + "#";
                                                        COGCSJ += dr["CO"].ToString() + "#";
                                                        CO2GCSJ += dr["CO2"].ToString() + "#";
                                                        O2GCSJ += dr["O2"].ToString() + "#";
                                                        NOXGCSJ += "0#";
                                                        GLKQXSSJ += dr["过量空气系数"].ToString() + "#";
                                                        HJWDGCSJ += dr["环境温度"].ToString() + "#";
                                                        HJSDGCSJ += dr["相对湿度"].ToString() + "#";
                                                        HJDQYGCSJ += dr["大气压力"].ToString() + "#";
                                                        ZSGCSJ += dr["转速"].ToString() + "#";
                                                        YWGCSJ += dr["油温"].ToString() + "#";
                                                    }
                                                    HCGCSJ.Remove(HCGCSJ.Length - 1, 1);
                                                    COGCSJ.Remove(COGCSJ.Length - 1, 1);
                                                    CO2GCSJ.Remove(CO2GCSJ.Length - 1, 1);
                                                    O2GCSJ.Remove(O2GCSJ.Length - 1, 1);
                                                    NOXGCSJ.Remove(NOXGCSJ.Length - 1, 1);
                                                    GLKQXSSJ.Remove(GLKQXSSJ.Length - 1, 1);
                                                    HJWDGCSJ.Remove(HJWDGCSJ.Length - 1, 1);
                                                    HJSDGCSJ.Remove(HJSDGCSJ.Length - 1, 1);
                                                    HJDQYGCSJ.Remove(HJDQYGCSJ.Length - 1, 1);
                                                    ZSGCSJ.Remove(ZSGCSJ.Length - 1, 1);
                                                    YWGCSJ.Remove(YWGCSJ.Length - 1, 1);

                                                    htdata.Add("HCGCSJ", HCGCSJ);
                                                    htdata.Add("COGCSJ", COGCSJ);
                                                    htdata.Add("CO2GCSJ", CO2GCSJ);
                                                    htdata.Add("O2GCSJ", O2GCSJ);
                                                    htdata.Add("NOXGCSJ", NOXGCSJ);
                                                    htdata.Add("GLKQXSSJ", GLKQXSSJ);
                                                    htdata.Add("HCPFZLGCSJ", HCPFZLGCSJ);
                                                    htdata.Add("COPFZLGCSJ", COPFZLGCSJ);
                                                    htdata.Add("NOXPFZLGCSJ", NOXPFZLGCSJ);
                                                    htdata.Add("LLJO2GCSJ", LLJO2GCSJ);
                                                    htdata.Add("LLJSJLLGCSJ", LLJSJLLGCSJ);
                                                    htdata.Add("LLJBZLLGCSJ", LLJBZLLGCSJ);
                                                    htdata.Add("LLJWDGCSJ", LLJWDGCSJ);
                                                    htdata.Add("QCWQLLGCSJ", QCWQLLGCSJ);
                                                    htdata.Add("LLJQYGCSJ", LLJQYGCSJ);
                                                    htdata.Add("ZSGCSJ", ZSGCSJ);
                                                    htdata.Add("YWGCSJ", YWGCSJ);
                                                    htdata.Add("CSGCSJ", CSGCSJ);
                                                    htdata.Add("XSBGCSJ", XSBGCSJ);
                                                    htdata.Add("XSXZGCSJ", XSXZGCSJ);
                                                    htdata.Add("SDXZGCSJ", SDXZGCSJ);
                                                    htdata.Add("JSGLGCSJ", JSGLGCSJ);
                                                    htdata.Add("ZSGLGCSJ", ZSGLGCSJ);
                                                    htdata.Add("HJWDGCSJ", HJWDGCSJ);
                                                    htdata.Add("HJSDGCSJ", HJSDGCSJ);
                                                    htdata.Add("HJDQYGCSJ", HJDQYGCSJ);
                                                    htdata.Add("YDZGCSJ", YDZGCSJ);
                                                    htdata.Add("GXSXSGCSJ", GXSXSGCSJ);

                                                    if (!mainPanel.hninterface.writeTestDataSeconds(ht, htdata, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送过程数据命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送过程数据命令失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.DALINETMODE)
                                                {
                                                    #region 大理
                                                    string code, msg;
                                                    string reportID;
                                                    sendPicture(sdsdata.ZHPD);
                                                    System.Collections.Hashtable ht = new System.Collections.Hashtable();
                                                    switch (carLogin.carbj.JCFF)
                                                    {
                                                        case "VMAS": ht.Add("检测类别", "1"); break;
                                                        case "ASM": ht.Add("检测类别", "2"); break;
                                                        case "SDS": ht.Add("检测类别", "3"); break;
                                                        case "JZJS": ht.Add("检测类别", "4"); break;
                                                        case "ZYJS": ht.Add("检测类别", "5"); break;
                                                        case "LZ": ht.Add("检测类别", "6"); break;
                                                    }
                                                    ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                                                    ht.Add("温度", sdsdata.WD);
                                                    ht.Add("大气压", sdsdata.DQY);
                                                    ht.Add("相对湿度", sdsdata.SD);
                                                    ht.Add("过量空气系数值", sdsdata.LAMDAHIGHCLZ);
                                                    ht.Add("过量空气判定结果", nhlambdapd);
                                                    ht.Add("低怠速CO限值", sdsdata.COLOWXZ);
                                                    ht.Add("低怠速CO值", sdsdata.COLOWCLZ);
                                                    ht.Add("低怠速CO判定结果", sdsdata.COLOWPD);
                                                    ht.Add("低怠速HC限值", sdsdata.HCLOWXZ);
                                                    ht.Add("低怠速HC值", sdsdata.HCLOWCLZ);
                                                    ht.Add("低怠速HC判定结果", sdsdata.HCLOWPD);
                                                    ht.Add("低怠速发动机转速", sdsdata.ZSLOW);
                                                    ht.Add("低怠速机油温度", sdsdata.JYWDLOW);
                                                    ht.Add("高怠速CO限值", sdsdata.COHIGHXZ);
                                                    ht.Add("高怠速CO值", sdsdata.COHIGHCLZ);
                                                    ht.Add("高怠速CO判定结果", sdsdata.COHIGHPD);
                                                    ht.Add("高怠速HC限值", sdsdata.HCHIGHXZ);
                                                    ht.Add("高怠速HC值", sdsdata.HCHIGHCLZ);
                                                    ht.Add("高怠速HC判定结果", sdsdata.HCHIGHPD);
                                                    ht.Add("高怠速发动机转速", sdsdata.ZSHIGH);
                                                    ht.Add("高怠速机油温度", sdsdata.JYWDHIGH);
                                                    ht.Add("判定结果", sdsdata.ZHPD);
                                                    ht.Add("审核员", mainPanel.shy);
                                                    ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                                                    //DataTable dt = new DataTable();
                                                    if (!mainPanel.daliinterface.sendTestData(ht, 3, null, out code, out msg))
                                                    {
                                                        MessageBox.Show("发送检测数据失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                        ini.INIIO.saveLogInf("发送检测数据失败,code" + code + ",msg:" + msg);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.EZNETMODE)
                                                {
                                                    #region 鄂州
                                                    string code, msg;
                                                    try
                                                    {
                                                        EzWebClient.InspectionInformation data = new EzWebClient.InspectionInformation(
                                                            sdsdata.ZHPD == "合格" ? "1" : "0",
                                                            sdsdata.JCBGBH,
                                                            jssj.ToString("yyyyMMddHHmmss"),
                                                            mainPanel.ezinterface.EZR_inspectionmethod.GetValue(carLogin.carbj.JCFF, ""),
                                                            carLogin.carbj.JSY,
                                                            sdsdata.JCBGBH,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            carLogin.carbj.JCCS,
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            mainPanel.stationid,
                                                            carLogin.modelbj.JCLB,
                                                            carLogin.modelbj.CLHP,
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.SCRQ.ToString("yyyyMMdd"),
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJSCQY,
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.EDGL,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.modelbj.JZZL,
                                                             carLogin.carbj.XSLC,
                                                             carLogin.modelbj.QGS,
                                                             "Y",
                                                             "N",
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             DateTime.Now.ToString("yyyyMMddHHmmss"),
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "",
                                                             carLogin.carbj.CZY
                                                            );
                                                        if (!mainPanel.ezinterface.uploadInspectionInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("发送检测信息命令失败\r\ncode:" + code + "\r\nmsg:" + msg);
                                                            ini.INIIO.saveLogInf("发送检测信息命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        EzWebClient.ExternalLoginInformation data = new EzWebClient.ExternalLoginInformation(
                                                             mainPanel.stationid,
                                                             carLogin.modelbj.JHZZ == "无" ? "N" : "Y",
                                                             carLogin.modelbj.JHZZ == "无" ? "" : mainPanel.ezinterface.EZR_afterTreatmentType.GetValue(carLogin.modelbj.JHZZ, ""),
                                                             "N",
                                                             carLogin.modelbj.QGS,
                                                             mainPanel.ezinterface.EZR_driveMode.GetValue(carLogin.modelbj.QDXS, ""),
                                                             "Y",
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_emissionStandard.GetValue(carLogin.modelbj.ZXBZ, ""),
                                                             carLogin.modelbj.FDJPL,
                                                             carLogin.modelbj.FDJXH,
                                                             carLogin.modelbj.FDJHM,
                                                             "N",
                                                             "N",
                                                             mainPanel.ezinterface.EZR_fuelSupply.GetValue(carLogin.modelbj.GYFS, ""),
                                                             mainPanel.ezinterface.EZR_fueltype.GetValue(carLogin.modelbj.RLZL, ""),
                                                             carLogin.carbj.JCBGBH,
                                                             carLogin.modelbj.ZCRQ.ToString("yyyyMMdd"),
                                                             carLogin.carbj.JCBGBH,
                                                             mainPanel.ezinterface.EZR_intakeMode.GetValue(carLogin.modelbj.JQFS, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateCategory.GetValue(carLogin.modelbj.HPZL, ""),
                                                             mainPanel.ezinterface.EZR_licensePlateColor.GetValue(carLogin.modelbj.CPYS, ""),
                                                             carLogin.modelbj.CLHP,
                                                             "N",
                                                             carLogin.modelbj.ZZL,
                                                             carLogin.carbj.XSLC,

                                                             mainPanel.ezinterface.EZR_yn.GetValue(carLogin.modelbj.OBD, ""),
                                                             "Y",
                                                             "N",
                                                             "",
                                                             carLogin.modelbj.CZDZ,
                                                             carLogin.modelbj.LXDH,
                                                             "Y",
                                                             carLogin.modelbj.EDGL,
                                                             carLogin.modelbj.EDZS,
                                                             carLogin.modelbj.JZZL,
                                                             "Y",
                                                             mainPanel.ezinterface.EZR_transmissionType.GetValue(carLogin.modelbj.BSQXS, ""),
                                                             carLogin.modelbj.CZ,

                                                             mainPanel.ezinterface.EZR_useProperties.GetValue(carLogin.modelbj.SYXZ, ""),
                                                             carLogin.modelbj.CLSBM,
                                                             carLogin.modelbj.XH,
                                                             carLogin.modelbj.CLLX.Split('_')[0],
                                                             "1"
                                                            );
                                                        if (!mainPanel.ezinterface.uploadExternalLoginInformation(data, out code, out msg))
                                                        {
                                                            MessageBox.Show("新增外检登录信息失败,不能开始检测\r\ncode:" + code + "\r\nmessage:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("新增外检登录信息发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        EzWebClient.EzIfaJcDoubleidledata data = new EzWebClient.EzIfaJcDoubleidledata(
                                                            sdsdata.DQY,
                                                            sdsdata.COHIGHPD == "合格" ? "1" : "0",
                                                            sdsdata.COHIGHXZ,
                                                            sdsdata.COLOWPD == "合格" ? "1" : "0",
                                                            sdsdata.COLOWXZ,
                                                            sdsdata.COHIGHCLZ,
                                                            sdsdata.COLOWXZ,
                                                            "1.03",
                                                            "0.97",
                                                            sdsdata.LAMDAHIGHPD == "合格" ? "1" : (sdsdata.LAMDAHIGHPD == "不合格" ? "0" : ""),
                                                            sdsdata.HCHIGHPD == "合格" ? "1" : "0",
                                                            sdsdata.HCHIGHXZ,
                                                            sdsdata.HCLOWPD == "合格" ? "1" : "0",
                                                            sdsdata.HCLOWXZ,
                                                            sdsdata.HCHIGHCLZ,
                                                            sdsdata.HCLOWCLZ,
                                                            sdsdata.ZSHIGH,
                                                            sdsdata.SD,
                                                            sdsdata.JCBGBH,
                                                            sdsdata.LAMDAHIGHCLZ,
                                                            sdsdata.ZSLOW,
                                                            sdsdata.YW,
                                                            sdsdata.WD,
                                                            mainPanel.stationid,
                                                            mainPanel.stationid + mainPanel.lineid,
                                                            sdsdata.JCBGBH,
                                                            jcsj.ToString("yyyyMMddHHmmss"),
                                                            jssj.ToString("yyyyMMddHHmmss")
                                                            );
                                                        if (!mainPanel.ezinterface.uploadEzIfaJcDoubleidledata(data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    try
                                                    {
                                                        for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                        {
                                                            DataRow dr = dataseconds.Rows[i];
                                                            EzWebClient.EzIfaJcDoubleidlelog data = new EzWebClient.EzIfaJcDoubleidlelog(
                                                                dr["O2"].ToString(),
                                                                dr["时序类别"].ToString(),
                                                                dr["过量空气系数"].ToString(),
                                                                dr["CO"].ToString(),
                                                                dr["CO2"].ToString(),
                                                                dr["HC"].ToString(),
                                                                sdsdata.JCBGBH,
                                                                dr["转速"].ToString(),
                                                                i.ToString(),
                                                                DateTime.Parse(dr["全程时序"].ToString()).ToString("yyyyMMddHHmmss"),
                                                                mainPanel.stationid,
                                                                mainPanel.stationid + mainPanel.lineid,
                                                                sdsdata.JCBGBH,
                                                                dr["油温"].ToString()
                                                                );
                                                            if (!mainPanel.ezinterface.uploadEzIfaJcDoubleidlelog(data, out code, out msg))
                                                            {
                                                                ini.INIIO.saveLogInf("发送过程数据[" + i.ToString() + "]命令失败,code" + code + ",msg:" + msg);
                                                            }
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    sendPicture(sdsdata.ZHPD);
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                                else if (mainPanel.NetMode == mainPanel.XBNETMODE)
                                                {
                                                    #region 喜邦
                                                    string code, msg;
                                                    int l_p_count = 0, l_t_count = 0, h_p_count = 0, h_t_count = 0;
                                                    List<string> l_p_co = new List<string>();
                                                    List<string> l_t_co = new List<string>();
                                                    List<string> h_p_co = new List<string>();
                                                    List<string> h_t_co = new List<string>();
                                                    List<string> l_p_co2 = new List<string>();
                                                    List<string> l_t_co2 = new List<string>();
                                                    List<string> h_p_co2 = new List<string>();
                                                    List<string> h_t_co2 = new List<string>();
                                                    List<string> l_p_hc = new List<string>();
                                                    List<string> l_t_hc = new List<string>();
                                                    List<string> h_p_hc = new List<string>();
                                                    List<string> h_t_hc = new List<string>();
                                                    List<string> l_p_o2 = new List<string>();
                                                    List<string> l_t_o2 = new List<string>();
                                                    List<string> h_p_o2 = new List<string>();
                                                    List<string> h_t_o2 = new List<string>();
                                                    List<string> h_p_lmd = new List<string>();
                                                    List<string> h_t_lmd = new List<string>();
                                                    List<string> l_p_zs = new List<string>();
                                                    List<string> l_t_zs = new List<string>();
                                                    List<string> h_p_zs = new List<string>();
                                                    List<string> h_t_zs = new List<string>();
                                                    List<string> l_p_yw = new List<string>();
                                                    List<string> l_t_yw = new List<string>();
                                                    List<string> h_p_yw = new List<string>();
                                                    List<string> h_t_yw = new List<string>();
                                                    try
                                                    {
                                                        for (int i = 1; i < dataseconds.Rows.Count; i++)
                                                        {
                                                            DataRow dr = dataseconds.Rows[i];
                                                            carinfo.XB_SDS_PROCESS_DATA data = new carinfo.XB_SDS_PROCESS_DATA();
                                                            data.JCFFBH = carLogin.carbj.JCFF;
                                                            data.JCLSH = carLogin.carbj.JYLSH;
                                                            data.SJXL = i.ToString();
                                                            data.State = dr["时序类别"].ToString();
                                                            data.HC = dr["HC"].ToString();
                                                            data.CO = dr["CO"].ToString();
                                                            data.O2 = dr["O2"].ToString();
                                                            data.CO2 = dr["CO2"].ToString();
                                                            data.Lmd = dr["过量空气系数"].ToString();
                                                            data.Rpm = dr["转速"].ToString();
                                                            data.JYWD = dr["油温"].ToString();
                                                            if (data.State == "1")
                                                            {
                                                                l_p_co.Add(data.CO);
                                                                l_p_co2.Add(data.CO2);
                                                                l_p_hc.Add(data.HC);
                                                                l_p_o2.Add(data.O2);
                                                                //h_p_lmd.Add(data.Lmd);
                                                                l_p_zs.Add(data.Rpm);
                                                                l_p_yw.Add(data.JYWD);
                                                                l_p_count = 0;
                                                            }
                                                            else if (data.State == "2")
                                                            {
                                                                l_t_co.Add(data.CO);
                                                                l_t_co2.Add(data.CO2);
                                                                l_t_hc.Add(data.HC);
                                                                l_t_o2.Add(data.O2);
                                                                //h_p_lmd.Add(data.Lmd);
                                                                l_t_zs.Add(data.Rpm);
                                                                l_t_yw.Add(data.JYWD);
                                                                l_t_count = 0;
                                                            }
                                                            else if (data.State == "3")
                                                            {
                                                                h_p_co.Add(data.CO);
                                                                h_p_co2.Add(data.CO2);
                                                                h_p_hc.Add(data.HC);
                                                                h_p_o2.Add(data.O2);
                                                                h_p_lmd.Add(data.Lmd);
                                                                h_p_zs.Add(data.Rpm);
                                                                h_p_yw.Add(data.JYWD);
                                                                h_p_count = 0;
                                                            }
                                                            else if (data.State == "4")
                                                            {
                                                                h_t_co.Add(data.CO);
                                                                h_t_co2.Add(data.CO2);
                                                                h_t_hc.Add(data.HC);
                                                                h_t_o2.Add(data.O2);
                                                                h_t_lmd.Add(data.Lmd);
                                                                h_t_zs.Add(data.Rpm);
                                                                h_t_yw.Add(data.JYWD);
                                                                h_t_count = 0;
                                                            }
                                                            if (!mainPanel.xbsocket.Send_SDS_PROCESS_DATA(data, out code, out msg))
                                                            {
                                                                ini.INIIO.saveLogInf("发送过程数据[" + i.ToString() + "]命令失败,code" + code + ",msg:" + msg);
                                                            }
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送过程数据命令发生异常:" + er.Message);
                                                        return;
                                                    }

                                                    try
                                                    {
                                                        carinfo.XB_RESULT_PUBLIC_DATA pdata = new carinfo.XB_RESULT_PUBLIC_DATA();
                                                        carinfo.XB_SDS_RESULT_DATA data = new carinfo.XB_SDS_RESULT_DATA();
                                                        pdata.JCFFBH = carLogin.carbj.JCFF;
                                                        pdata.JCLSH = carLogin.carbj.JYLSH;
                                                        pdata.DLY = carLogin.carbj.DLY;
                                                        pdata.YCY = carLogin.carbj.JSY;
                                                        pdata.JCY = carLogin.carbj.CZY;
                                                        pdata.WD = sdsdata.WD;
                                                        pdata.SD = sdsdata.SD;
                                                        pdata.DQY = sdsdata.DQY;
                                                        data.SFZSKZ = "1";
                                                        data.DSRpm = sdsdata.ZSLOW;
                                                        data.GDSRpm = sdsdata.ZSHIGH;
                                                        data.DSHC = sdsdata.HCLOWCLZ;
                                                        data.GDSHC = sdsdata.HCHIGHCLZ;
                                                        data.DSCO = sdsdata.COLOWCLZ;
                                                        data.GDSCO = sdsdata.COHIGHCLZ;
                                                        data.GDSLmd = sdsdata.LAMDAHIGHCLZ;
                                                        data.DSCurveCount0 = l_p_count.ToString();
                                                        data.DSCurveCount1 = l_t_count.ToString();
                                                        data.GDSCurveCount0 = h_p_count.ToString();
                                                        data.GDSCurveCount1 = h_t_count.ToString();
                                                        data.DSHCCurve0 = string.Join(",", l_p_hc);
                                                        data.DSHCCurve1 = string.Join(",", l_t_hc);
                                                        data.GDSHCCurve0 = string.Join(",", h_p_hc);
                                                        data.GDSHCCurve1 = string.Join(",", h_t_hc);
                                                        data.DSCOCurve0 = string.Join(",", l_p_co);
                                                        data.DSCOCurve1 = string.Join(",", l_t_co);
                                                        data.GDSCOCurve0 = string.Join(",", h_p_co);
                                                        data.GDSCOCurve1 = string.Join(",", h_t_co);
                                                        data.DSCO2Curve0 = string.Join(",", l_p_co2);
                                                        data.DSCO2Curve1 = string.Join(",", l_t_co2);
                                                        data.GDSCO2Curve0 = string.Join(",", h_p_co2);
                                                        data.GDSCO2Curve1 = string.Join(",", h_t_co2);
                                                        data.DSO2Curve0 = string.Join(",", l_p_o2);
                                                        data.DSO2Curve1 = string.Join(",", l_t_o2);
                                                        data.GDSO2Curve0 = string.Join(",", h_p_o2);
                                                        data.GDSO2Curve1 = string.Join(",", h_t_lmd);
                                                        data.GDSLmdCurve1 = string.Join(",", h_p_lmd);
                                                        data.GDSO2Curve1 = string.Join(",", h_t_o2);
                                                        data.DSRpmCurve0 = string.Join(",", l_p_zs);
                                                        data.DSRpmCurve1 = string.Join(",", l_t_zs);
                                                        data.GDSRpmCurve0 = string.Join(",", h_p_zs);
                                                        data.GDSRpmCurve1 = string.Join(",", h_t_zs);
                                                        data.DSJYWDCurve0 = string.Join(",", l_p_yw);
                                                        data.DSJYWDCurve1 = string.Join(",", l_t_yw);
                                                        data.GDSJYWDCurve0 = string.Join(",", h_p_yw);
                                                        data.GDSJYWDCurve1 = string.Join(",", h_t_yw);
                                                        
                                                        if (!mainPanel.xbsocket.Send_TEST_RESULT_DATA(pdata, data, out code, out msg))
                                                        {
                                                            ini.INIIO.saveLogInf("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            MessageBox.Show("发送结果数据命令失败,code" + code + ",msg:" + msg);
                                                            return;
                                                        }
                                                    }
                                                    catch (Exception er)
                                                    {
                                                        MessageBox.Show("发送检测信息命令发生异常:" + er.Message);
                                                        return;
                                                    }
                                                    Msg(label1, panel4, "车辆检测" + sdsdata.ZHPD + ",上传完毕");
                                                    #endregion
                                                }
                                            }
                                            if (mainPanel.useHyDatabase)
                                            {
                                                hyDatabaseInter.deleteCarWaitByRegID(carLogin.carbj.CLID);
                                            }
                                            else
                                            {
                                                mainPanel.logininfcontrol.deleteCarAtWaitbyPlate(sdsdata.CLPH);
                                            }
                                            ini.INIIO.saveLogInf("删除待检车辆：" + sdsdata.CLPH);
                                            enableButton(buttonOK, false);
                                            //buttonOK.Enabled = false;
                                            if (mainPanel.linemodel.AUTOPRINT == "Y")
                                            {
                                                ini.INIIO.saveLogInf("自动打印报表：" + carLogin.carbj.CLID);
                                                autoPrint(carLogin.carbj.CLID);
                                            }
                                            #endregion
                                        }
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("逐秒数据读取失败");
                                        isCsvAlive = "逐秒数据读取失败";
                                        Msg(label1, panel4, "没有找到过程数据，检测无效");
                                    }
                                    #endregion
                                }
                                File.Delete(newPath);
                                ini.INIIO.saveLogInf("删除结果文件：" + newPath);
                                break;
                            #endregion
                            default: break;
                        }
                        if (isautostart)
                        {
                            //while (IsProcessStarted(exeName)) Thread.Sleep(500);
                            //ini.INIIO.saveLogInf("退出结果处理进程");
                            //carLogin.checkTM = true;
                            //if(exeName!="lugdowm")
                            //while (IsProcessStarted(exeName)) Thread.Sleep(500);
                            ini.INIIO.saveLogInf("退出结果处理进程");
                            //carLogin.checkTM = true;                            
                            Thread.Sleep(6000);
                            carLogin.isCarOK = false;
                            carLogin.isDriverOK = false;
                            carLogin.checkTM = true;
                            mainPanel.ts1 = mainPanel.linemodel.LINEID + "号排放检测线";
                            mainPanel.ts2 = "设备待命";
                            exitform();
                            //this.Close();
                        }
                        else
                        {
                            return;
                        }
                        #endregion

                    }
                }
            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("处理检测结果进行过程出现异常：" + er.Message);
                //mainPanel.ts2 = "发生";
                //this.Close();
            }
        }
        private string PushTxt(string url)
        {
            //filelength = 0;
            using (FileStream fs = new FileStream(url, FileMode.Open, FileAccess.Read))
            {
                int filelength = (int)fs.Length;
                if (filelength <= 0)
                    return "";
                try
                {
                    //Byte[] FileByteArray = new Byte[filelength]; //图象文件临时储存Byte数组  
                    //System.IO.BinaryReader strread = new System.IO.BinaryReader(fs); //建立数据流对像  
                    //读取图象文件数据，FileByteArray为数据储存体，0为数据指针位置、FileLnegth为数据长度  
                    //strread.Read(FileByteArray, 0, filelength);
                    string sql = Convert.ToBase64String(System.IO.File.ReadAllBytes(url));
                    return sql;
                }
                catch
                {
                    return "";
                }

                //byte[] fssize = new byte[fs.Length];
                //filelength = loFile.PostedFile.ContentLength; 
                //System.IO.BinaryReader strread = new System.IO.BinaryReader(fs);
                //strread.Read(fssize, 0, fssize.Length - 1);
                //fs.Close();
                //string sql = Convert.ToBase64String(fssize);
                ////string sql = System.Text.Encoding.UTF8.GetString(fssize);
                ////StreamReader sr = new StreamReader(fs, System.Text.Encoding.ASCII);
                ////String sql = sr.ReadToEnd();
                ////sr.Close();
                ////fs.Close();
                //return sql;
            }
        }
        /// <summary>  
        /// 图片等比缩放        
        /// </summary>       
        /// <param name="postedfile">原图</param>      
        /// <param name="savepath">缩略图存放地址</param>    
        /// <param name="targetwidth">指定的最大宽度</param>       
        /// <param name="targetheight">指定的最大高度</param>     
        public Image zoomauto(Image initimage, double targetwidth, double targetheight)
        {
            //创建目录           
            if (initimage.Width <= targetwidth && initimage.Height <= targetheight)
            {                //保存            
                return initimage;
            }
            else
            {
                //缩略图宽、高计算           
                double newwidth = initimage.Width;
                double newheight = initimage.Height;                //宽大于高或宽等于高（横图或正方）
                if (initimage.Width > initimage.Height || initimage.Width == initimage.Height)
                {                    //如果宽大于模版         
                    if (initimage.Width > targetwidth)
                    {                        //宽按模版，高按比例缩放       
                        newwidth = targetwidth;
                        newheight = initimage.Height * (targetwidth / initimage.Width);
                    }
                }                //高大于宽（竖图）            
                else
                {
                    //如果高大于模版              
                    if (initimage.Height > targetheight)
                    {                        //高按模版，宽按比例缩放     
                        newheight = targetheight;
                        newwidth = initimage.Width * (targetheight / initimage.Height);
                    }
                }                //生成新图                //新建一个bmp图片             
                Image newimage = new Bitmap((int)newwidth, (int)newheight);                //新建一个画板     
                Graphics newg = Graphics.FromImage(newimage);                //设置质量          
                newg.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;
                newg.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighQuality;                //置背景色        
                newg.Clear(Color.White);                //画图               
                newg.DrawImage(initimage, new Rectangle(0, 0, newimage.Width, newimage.Height), new Rectangle(0, 0, initimage.Width, initimage.Height), GraphicsUnit.Pixel);
                //保存缩略图               
                //newimage.Save(savepath+"123.jpeg", System.Drawing.Imaging.ImageFormat.Jpeg);                //释放资源
                initimage.Dispose();
                newg.Dispose();
                return newimage;
            }
        }
        private void sendPicture(string jcjg)
        {
            System.Collections.Hashtable ht = new System.Collections.Hashtable();
            string code, msg;
            string[] picfileary = { frontpic1, frontpic2, frontpic3, frontpic4,frontpic5, backpic1, backpic2, backpic3, backpic4,backpic5 };
            string[] picnameary = { "前", "前", "前", "前", "前", "后", "后", "后", "后", "后" };
            int index = 0;
            if (mainPanel.NetMode == mainPanel.HHZNNETMODE)
            {
                if (File.Exists(frontpic1) && File.Exists(backpic1))
                {
                    ht.Clear();
                    ht.Add("jcdjbm", carLogin.carbj.JCBGBH);
                    ht.Add("h_image", PushTxt(frontpic1));
                    ht.Add("e_image", PushTxt(backpic1));
                    ht.Add("create_date", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                    try
                    {
                        if (mainPanel.hhzinterface.uploadJsonObject(ht, HhzWebClient.Hhzclient.DATALX.PICTURE, out code, out msg))
                        {
                            ini.INIIO.saveLogInf("上传照片信息至联网平台成功");
                        }
                        else
                        {
                            if (msg.Contains("already exists"))
                            {
                                if (mainPanel.hhzinterface.uploadJsonObject(ht, HhzWebClient.Hhzclient.DATALX.PICTURE, out code, out msg))
                                {
                                    ini.INIIO.saveLogInf("更新照片信息至联网平台成功");
                                }
                                else
                                {
                                    ini.INIIO.saveLogInf("更新照片信息至联网平台失败:code=" + code + ",msg=" + msg);
                                    //return;
                                }
                            }
                            else
                            {
                                ini.INIIO.saveLogInf("上传照片信息至联网平台失败:code=" + code + ",msg=" + msg);
                                //return;
                            }
                        }
                    }
                    catch (Exception er)
                    {
                        ini.INIIO.saveLogInf("上传或更新照片信息至联网平台发生异常:" + er.Message);
                        //return;
                    }
                }
            }
            foreach (string childfile in picfileary)
            {
                string picname = picnameary[index];
                index++;
                if (File.Exists(childfile))
                {
                    if (mainPanel.isNetUsed)
                    {
                        if (mainPanel.NetMode == mainPanel.DALINETMODE)
                        {
                            
                            ht.Clear();
                            ht.Add("检测报告编号", carLogin.carbj.JCBGBH);
                            ht.Add("检测站编号", mainPanel.stationid);
                            ht.Add("检测工位号", mainPanel.daliwebinf.LINEID);
                            ht.Add("检测日期", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                            ht.Add("检测图片信息", PushTxt(childfile));
                            ht.Add("同步时间", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"));
                            if (!mainPanel.daliinterface.sendTestPircture(ht, out code, out msg))
                            {
                                ini.INIIO.saveLogInf("发送" + childfile + "失败, code" + code + ",msg:" + msg);
                            }
                            else
                            {
                                ini.INIIO.saveLogInf("发送" + childfile + "成功");
                            }
                        }
                        else if(mainPanel.NetMode==mainPanel.EZNETMODE)
                        {
                            try
                            {
                                EzWebClient.DetProcessPic data = new EzWebClient.DetProcessPic(
                                    carLogin.carbj.JCBGBH,
                                    carLogin.carbj.JCBGBH,
                                    mainPanel.stationid+mainPanel.lineid,
                                    picname,
                                    mainPanel.stationid,
                                    DateTime.Now.ToString("yyyyMMddHHmmss"), 
                                    PushTxt(childfile)
                                    );
                                if (!mainPanel.ezinterface.uploadDetPicture(data, out code, out msg))
                                {
                                    ini.INIIO.saveLogInf("发送检测过程照片命令失败,code" + code + ",msg:" + msg);
                                }
                            }
                            catch (Exception er)
                            {
                                ini.INIIO.saveLogInf("发送检测过程照片命令发生异常:" + er.Message);
                            }
                        }
                        /*
                        else if(mainPanel.NetMode == mainPanel.HNNETMODE)
                        {
                            ht.Clear();
                            ht.Add("jcxbh", mainPanel.hnhywebinf.lineid);
                            ht.Add("jclsh", carLogin.carbj.CLID);
                            ht.Add("hphm", carLogin.carbj.CLHP);
                            ht.Add("hpzl", mainPanel.hninterface.RHN_HPZL.GetValue(carLogin.modelbj.HPZL, ""));
                            ht.Add("clsbdh", carLogin.modelbj.CLSBM);
                            ht.Add("jccs", carLogin.carbj.JCCS);
                            ht.Add("ycy", carLogin.carbj.JSY);
                            switch (carLogin.carbj.JCFF)
                            {
                                case "ASM":
                                    ht.Add("jcffid", "2"); break;
                                case "VMAS":
                                    ht.Add("jcffid", "3"); break;
                                case "JZJS":
                                    ht.Add("jcffid", "6"); break;
                                case "ZYJS":
                                    ht.Add("jcffid", "4"); break;
                                case "SDS":
                                    ht.Add("jcffid", "1"); break;
                                case "LZ":
                                    ht.Add("jcffid", "5"); break;

                            }
                            ht.Add("jczt", jcjg=="合格"?"1":(jcjg=="不合格"?"0":"3"));
                            ht.Add("jcbz","0");
                            ht.Add("pssj", DateTime.Now.ToString("yyyyMMddHHmmss"));
                            if (childfile == frontpic1 )
                            {
                                ht.Add("zpzl", "1");
                            }
                            else if ( childfile == frontpic5)
                            {
                                ht.Add("zpzl", "3");
                            }
                            else if (childfile == backpic1)
                            {
                                ht.Add("zpzl", "4");
                            }
                            else if (childfile ==backpic5)
                            {
                                ht.Add("zpzl", "6");
                            }
                            else if (childfile == frontpic2||childfile==frontpic3||childfile==frontpic4)
                            {
                                ht.Add("zpzl", "2");
                            }
                            else if (childfile == backpic2 || childfile == backpic3||childfile==backpic4)
                            {
                                ht.Add("zpzl", "5");
                            }
                            ht.Add("psrybh", "-");
                            ht.Add("zp", PushTxt(childfile));
                            if (!mainPanel.hninterface.uploadCapPicture(ht, out code, out msg))
                            {
                                ini.INIIO.saveLogInf("发送" + childfile + "失败, code" + code + ",msg:" + msg);
                            }
                            else
                            {
                                ini.INIIO.saveLogInf("发送" + childfile + "成功");
                            }
                        }*/
                    }
                }
            }
        }
        private void exitform()
        {
            BeginInvoke(new exitwt(exitthis));
        }
        private void exitthis()
        {
            this.Close();
        }
        /// <summary>

        /// 此函数用于判断某一外部进程是否打开

        /// </summary>

        /// <param name="processName">参数为进程名</param>

        /// <returns>如果打开了，就返回true，没打开，就返回false</returns>

        private bool IsProcessStarted(string processName)
        {

            Process[] temp = Process.GetProcessesByName(processName);

            if (temp.Length > 0) return true;

            else

                return false;

        }
        private bool regCarWait2Net(SYS.Model.CARINF model, SYS.Model.CARATWAIT modelwait)
        {
            //carinfor.
            //carinfor.netRegCarWait netregcarwait = new carinfor.netRegCarWait();
            try
            {
                mainPanel.netregcarwait.JCBGBH = modelwait.JCBGBH;
                mainPanel.netregcarwait.JCGWH = modelwait.JCGWH;
                mainPanel.netregcarwait.JCZBH = modelwait.JCZBH;
                mainPanel.netregcarwait.JCRQ = modelwait.JCRQ.ToString("yyyy-MM-dd HH:mm:ss");
                mainPanel.netregcarwait.JCLB = model.JCLB;
                mainPanel.netregcarwait.JCLRY = modelwait.DLY;
                mainPanel.netregcarwait.JCCZY = modelwait.CZY;
                mainPanel.netregcarwait.JCJSY = modelwait.JSY;
                mainPanel.netregcarwait.CPHM = modelwait.CLHP;
                mainPanel.netregcarwait.CLZL = model.CLZL;
                mainPanel.netregcarwait.CLLX = model.CLLX;
                mainPanel.netregcarwait.HPZL = "";
                mainPanel.netregcarwait.CZMC = model.CZ;
                mainPanel.netregcarwait.LXDZ = model.CZDZ;
                mainPanel.netregcarwait.LXDH = model.LXDH;
                mainPanel.netregcarwait.CPMC = model.PP;
                mainPanel.netregcarwait.CPXH = model.XH;
                mainPanel.netregcarwait.SYXZ = model.SYXZ;
                mainPanel.netregcarwait.CLSBM = model.CLSBM;
                mainPanel.netregcarwait.CLSCQY = model.SCQY;
                mainPanel.netregcarwait.ZDZZL = model.ZZL;
                mainPanel.netregcarwait.JZZL = model.JZZL;
                mainPanel.netregcarwait.CCDJRQ = model.ZCRQ.ToString("yyyy-MM-dd");
                mainPanel.netregcarwait.CCRQ = model.SCRQ.ToString("yyyy-MM-dd");
                mainPanel.netregcarwait.DCZZ = "";
                mainPanel.netregcarwait.DPXH = "";
                mainPanel.netregcarwait.QDFS = model.QDXS;
                mainPanel.netregcarwait.QDLTQY = model.QDLTQY;
                mainPanel.netregcarwait.BSQXS = model.BSQXS;
                mainPanel.netregcarwait.DWS = model.DWS;
                mainPanel.netregcarwait.FDJXH = model.FDJXH;
                mainPanel.netregcarwait.FDJSCQY = model.FDJSCQY;
                mainPanel.netregcarwait.QGS = model.QGS;
                mainPanel.netregcarwait.FDJPL = model.FDJPL;
                mainPanel.netregcarwait.RYXS = model.GYFS;
                mainPanel.netregcarwait.RYGG = model.RLZL;
                mainPanel.netregcarwait.LJXSLC = modelwait.XSLC;
                mainPanel.netregcarwait.CHZHQ = model.JHZZ;
                mainPanel.netregcarwait.JQFS = model.JQFS;
                mainPanel.netregcarwait.PQHCLZZ = mainPanel.netregcarwait.CHZHQ;
                mainPanel.netregcarwait.RYPH = model.RYPH;
                mainPanel.netregcarwait.SFCJ = modelwait.SFCJ;
                mainPanel.netregcarwait.JCCS = modelwait.JCCS;
                mainPanel.netregcarwait.SFWDZR = model.SFWDZR;
                mainPanel.netregcarwait.SFYQBF = model.SFYQBF;
                mainPanel.netregcarwait.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                mainPanel.netregcarwait.SJCYS = model.HDZK;
                mainPanel.netregcarwait.SBRZBM = mainPanel.equipmodel.SBXH;
                mainPanel.netregcarwait.SBMC = mainPanel.equipmodel.SBMC;
                mainPanel.netregcarwait.SBXH = mainPanel.equipmodel.SBXH;
                mainPanel.netregcarwait.SBZZC = mainPanel.equipmodel.SBZZC;
                mainPanel.netregcarwait.DPCGJ = mainPanel.equipmodel.CGJXH;
                mainPanel.netregcarwait.PQFXY = mainPanel.equipmodel.FXYXH;
                mainPanel.netregcarwait.LLJ = mainPanel.equipmodel.LLJXH;
                mainPanel.netregcarwait.SSXQ = model.SSXQ;
                mainPanel.netregcarwait.JCFS = model.JCFS;
                mainPanel.netregcarwait.SFCS = modelwait.SFCS;
                mainPanel.netregcarwait.FDJEDZS = model.EDZS;
                mainPanel.netregcarwait.FDJEDGL = model.EDGL;
                mainPanel.netregcarwait.ECRYPT = modelwait.ECRYPT;
                mainPanel.netregcarwait.BGJCFFYY = modelwait.BGJCFFYY;
                mainPanel.netregcarwait.JYLSH = modelwait.JYLSH;
                mainPanel.netregcarwait.GYXTXS = modelwait.GYXTXS;
                mainPanel.netregcarwait.SFLJ = modelwait.SFLJ;
                mainPanel.netregcarwait.FWLX = modelwait.FWLX;
                mainPanel.netregcarwait.ICCardNo = modelwait.ICCARDNO;
                mainPanel.netregcarwait.ZBZL = model.ZBZL;
                mainPanel.netregcarwait.DPFS = modelwait.DPFS;
                mainPanel.netregcarwait.OBD = model.OBD;
                mainPanel.netregcarwait.DKGYYB = model.DKGYYB;
                mainPanel.netregcarwait.DLSP = model.DLSP;
                mainPanel.netregcarwait.CHZZ = model.CHZZ;
                // return true;
                string ackstring = "";
                if(modelwait.JCFF=="SDSM")//辽宁本溪联网时，安车说摩托车双怠速按双怠速传
                    ackstring=mainPanel.netregcarwait.writenetRegCarWait(3);
                else
                    ackstring = mainPanel.netregcarwait.writenetRegCarWait(int.Parse(mainPanel.logininfcontrol.getComBoBoxItemsID("检测方法", modelwait.JCFF)));
                if (ackstring == "成功")
                {
                    ini.INIIO.saveLogInf("regCarWait2Net()" + "成功");
                    return true;
                }
                else
                {
                    ini.INIIO.saveLogInf("regCarWait2Net()" + "失败："+ackstring);
                    return false;
                }
            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("regCarWait2Net()" + "异常：" + er.Message);
                return false;
            }

        }
        private bool saveLugdownResult2Net()
        {
            carinfor.JZJSresultData asmresultdata = new carinfor.JZJSresultData();
            asmresultdata.JCBGBH = jzjsdata.JCBGBH;
            asmresultdata.WD = jzjsdata.WD;
            asmresultdata.XDSD = jzjsdata.SD;
            asmresultdata.DQY = jzjsdata.DQY;
            asmresultdata.VELMAXHP = jzjsdata.VELMAXHP;
            asmresultdata.VELMAXHPZS = jzjsdata.VELMAXHPZS;
            asmresultdata.ZDLBGL = jzjsdata.MAXLBGL;
            asmresultdata.ZDLBGLXZ = jzjsdata.GLXZ;
            asmresultdata.ZDLBGLPDJG = jzjsdata.GLPD;
            asmresultdata.VELMAXHPYDZ100 = jzjsdata.HK;
            asmresultdata.VELMAXHPYDZ90 = jzjsdata.NK;
            asmresultdata.VELMAXHPYDZ80 = jzjsdata.EK;
            asmresultdata.YDXZ = jzjsdata.YDXZ;
            asmresultdata.YDPDJG = (jzjsdata.HKPD=="不合格"|| jzjsdata.NKPD == "不合格"|| jzjsdata.EKPD == "不合格")? "不合格": "合格";
            asmresultdata.PDJG = jzjsdata.ZHPD;
            asmresultdata.SHY = jzjsdata.SHY;
            asmresultdata.SynchDate = jzjsdata.SynchDate;
            asmresultdata.YW = jzjsdata.YW;
            asmresultdata.FDJEDZSSX = jzjsdata.RATEREVUP;
            asmresultdata.FDJEDZSXX = jzjsdata.RATEREVDOWN;
            asmresultdata.JCKSSJ = jzjsdata.JCKSSJ;
            asmresultdata.JCJSSJ = jzjsdata.JCJSSJ;
            return (asmresultdata.writeJZJSresultData() == "成功");
        }
        private bool saveAsmResult2Net()
        {
            carinfor.ASMresultData asmresultdata = new carinfor.ASMresultData();
            asmresultdata.JCBGBH = asmdata.JCBGBH;
            asmresultdata.WD = asmdata.WD;
            asmresultdata.XDSD = asmdata.SD;
            asmresultdata.DQY = asmdata.DQY;
            asmresultdata.HC5025XZ = asmdata.HC25XZ;
            asmresultdata.HC5025CLZ = asmdata.HC25CLZ;
            asmresultdata.HC5025PDJG = asmdata.HC25PD;
            asmresultdata.CO5025XZ = asmdata.CO25XZ;
            asmresultdata.CO5025CLZ = asmdata.CO25CLZ;
            asmresultdata.CO5025PDJG = asmdata.CO25PD;
            asmresultdata.NO5025CLZ = asmdata.NOX25CLZ;
            asmresultdata.NO5025XZ = asmdata.NOX25XZ;
            asmresultdata.NO5025PDJG = asmdata.NOX25PD;
            asmresultdata.FDJZS5025 = "";
            asmresultdata.FDJYW5025 = "";
            asmresultdata.HC2540CLZ = asmdata.HC40CLZ;
            asmresultdata.HC2540PDJG = asmdata.HC40PD;
            asmresultdata.HC2540XZ = asmdata.HC40XZ;
            asmresultdata.NO2540XZ = asmdata.NOX40XZ;
            asmresultdata.NO2540CLZ = asmdata.NOX40CLZ;
            asmresultdata.NO2540PDJG = asmdata.NOX40PD;
            asmresultdata.CO2540XZ = asmdata.CO40XZ;
            asmresultdata.CO2540CLZ = asmdata.CO40CLZ;
            asmresultdata.CO2540PDJG = asmdata.CO40PD;
            asmresultdata.FDJZS2540 = "";
            asmresultdata.FDJYW2540 = "";
            asmresultdata.PDJG = asmdata.ZHPD;
            asmresultdata.SHY = asmdata.SHY;
            asmresultdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
            asmresultdata.YW = "";
            asmresultdata.JCKSSJ = asmdata.JCKSSJ;
            asmresultdata.JCJSSJ = asmdata.JCJSSJ;
            asmresultdata.KSTG5025 = asmdata.Kstg5025;
            asmresultdata.KSTG2540 = asmdata.Kstg2540;
            return (asmresultdata.writeASMresultData() == "成功");
        }
        private bool saveVmasResult2Net()
        {
            carinfor.VMASresultData asmresultdata = new carinfor.VMASresultData();
            asmresultdata.JCBGBH = jcbgbh;
            asmresultdata.WD =vmasdata.WD;
            asmresultdata.XDSD = vmasdata.SD;
            asmresultdata.DQY = vmasdata.DQY;
            asmresultdata.COXZ = vmasdata.COXZ;
            asmresultdata.COCZL = vmasdata.COZL;
            asmresultdata.COPDJG = vmasdata.COPD;
            if (beforedate)
            {
                asmresultdata.HCXZ = vmasdata.HCXZ;
                asmresultdata.NOXZ = vmasdata.NOXXZ;
                asmresultdata.HCPDJG = vmasdata.HCPD;
                asmresultdata.NOPDJG = vmasdata.NOXPD;
            }
            else
            {
                asmresultdata.HCNOXZ = vmasdata.HCXZ;
                asmresultdata.HCNOPDJG = vmasdata.HCPD;
            }
            asmresultdata.HCCLZ = vmasdata.HCZL;
            asmresultdata.NOCLZ = vmasdata.NOXZL;
            asmresultdata.HCNOCLZ = (Math.Round((double.Parse(vmasdata.HCZL)+double.Parse(vmasdata.NOXZL)),2)).ToString("0.00");
            asmresultdata.PDJG = vmasdata.ZHPD;
            asmresultdata.SHY = mainPanel.shy;
            asmresultdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
            asmresultdata.CSLJCCSJ = vmas_data.Ljcc;
            asmresultdata.YW = "";
            asmresultdata.JCKSSJ = jcsj.ToString("yyyy-MM-dd HH:mm:ss.fff");
            asmresultdata.JCJSSJ = jssj.ToString("yyyy-MM-dd HH:mm:ss.fff");
            asmresultdata.XSLC = vmas_data.sjxslc;
            asmresultdata.CGJSDGL = vmas_data.Power;
            return (asmresultdata.writeVMASresultData() == "成功");
        }
        private bool saveSdsResutl2Net()
        {
            carinfor.SDSresultData sdsresultdata = new carinfor.SDSresultData();
            sdsresultdata.JCBGBH = sdsdata.JCBGBH;
            sdsresultdata.WD = sdsdata.WD;
            sdsresultdata.XDSD = sdsdata.SD;
            sdsresultdata.DQY = sdsdata.DQY;
            sdsresultdata.GLKQXSZ = sdsdata.LAMDAHIGHCLZ;
            sdsresultdata.GLKQXSPDJG = sdsdata.LAMDAHIGHPD;
            sdsresultdata.DDSCOXZ = sdsdata.COLOWXZ;
            sdsresultdata.DDSCOZ = sdsdata.COLOWCLZ;
            sdsresultdata.DDSCOPDJG = sdsdata.COLOWPD;
            sdsresultdata.DDSHCXZ = sdsdata.HCLOWXZ;
            sdsresultdata.DDSHCZ = sdsdata.HCLOWCLZ;
            sdsresultdata.DDSHCPDJG = sdsdata.HCLOWPD;
            sdsresultdata.FDJDSZS = sdsdata.ZSLOW;
            sdsresultdata.DDSJYWD = sdsdata.JYWDLOW;
            sdsresultdata.GDSCOXZ = sdsdata.COHIGHXZ;
            sdsresultdata.GDSCOZ = sdsdata.COHIGHCLZ;
            sdsresultdata.GDSCOPDJG = sdsdata.COHIGHPD;
            sdsresultdata.GDSHCPDJG = sdsdata.HCHIGHPD;
            sdsresultdata.GDSHCXZ = sdsdata.HCHIGHXZ;
            sdsresultdata.GDSHCZ = sdsdata.HCHIGHCLZ;
            sdsresultdata.GDSZS = sdsdata.ZSHIGH;
            sdsresultdata.GDSJYWD = sdsdata.JYWDHIGH;
            sdsresultdata.PDJG = sdsdata.ZHPD;
            sdsresultdata.SHY = sdsdata.SHY;
            sdsresultdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
            sdsresultdata.YW = sdsdata.YW;
            sdsresultdata.GLKQXSSX = sdsdata.GLKQXSSX;
            sdsresultdata.GLKQXSXX = sdsdata.GLKQXSXX;
            sdsresultdata.JCKSSJ = sdsdata.JCKSSJ;
            sdsresultdata.JCJSSJ = sdsdata.JCJSSJ;
            return (sdsresultdata.writeSDSresultData() == "成功");
        }
        private bool saveSdsMResutl2Net()
        {
            carinfor.SDSMresultData sdsresultdata = new carinfor.SDSMresultData();
            sdsresultdata.JCBGBH = sdsdata.JCBGBH;
            sdsresultdata.WD = sdsdata.WD;
            sdsresultdata.XDSD = sdsdata.SD;
            sdsresultdata.DQY = sdsdata.DQY;
            sdsresultdata.GLKQXSZ = sdsdata.LAMDAHIGHCLZ;
            sdsresultdata.GLKQXSPDJG = sdsdata.LAMDAHIGHPD;
            sdsresultdata.DDSCOXZ = sdsdata.COLOWXZ;
            sdsresultdata.DDSCOZ = sdsdata.COLOWCLZ;
            sdsresultdata.DDSCOPDJG = sdsdata.COLOWPD;
            sdsresultdata.DDSHCXZ = sdsdata.HCLOWXZ;
            sdsresultdata.DDSHCZ = sdsdata.HCLOWCLZ;
            sdsresultdata.DDSHCPDJG = sdsdata.HCLOWPD;
            sdsresultdata.FDJDSZS = sdsdata.ZSLOW;
            sdsresultdata.DDSJYWD = sdsdata.JYWDLOW;
            sdsresultdata.GDSCOXZ = sdsdata.COHIGHXZ;
            sdsresultdata.GDSCOZ = sdsdata.COHIGHCLZ;
            sdsresultdata.GDSCOPDJG = sdsdata.COHIGHPD;
            sdsresultdata.GDSHCPDJG = sdsdata.HCHIGHPD;
            sdsresultdata.GDSHCXZ = sdsdata.HCHIGHXZ;
            sdsresultdata.GDSHCZ = sdsdata.HCHIGHCLZ;
            sdsresultdata.GDSZS = sdsdata.ZSHIGH;
            sdsresultdata.GDSJYWD = sdsdata.JYWDHIGH;
            sdsresultdata.PDJG = sdsdata.ZHPD;
            sdsresultdata.SHY = sdsdata.SHY;
            sdsresultdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
            sdsresultdata.YW = sdsdata.YW;
            sdsresultdata.GLKQXSSX = sdsdata.GLKQXSSX;
            sdsresultdata.GLKQXSXX = sdsdata.GLKQXSXX;
            sdsresultdata.JCKSSJ = sdsdata.JCKSSJ;
            sdsresultdata.JCJSSJ = sdsdata.JCJSSJ;
            return (sdsresultdata.writeSDSMresultData() == "成功");
        }
        private bool saveBtgResult2Net()
        {
            carinfor.BTGresultData btgresultdata = new carinfor.BTGresultData();
            btgresultdata.JCBGBH = zyjsdata.JCBGBH;
            btgresultdata.WD = zyjsdata.WD;
            btgresultdata.DQY = zyjsdata.DQY;
            btgresultdata.XDSD = zyjsdata.SD;
            btgresultdata.FDJDSZS = zyjsdata.DSZS;
            btgresultdata.ZHDSCCSZ = zyjsdata.THIRDDATA;
            btgresultdata.ZHDECCSZ = zyjsdata.SECONDDATA;
            btgresultdata.ZHDYCCSZ = zyjsdata.FIRSTDATA;
            btgresultdata.PJZ = zyjsdata.AVERAGEDATA;
            btgresultdata.XZ = zyjsdata.YDXZ;
            btgresultdata.PDJG = zyjsdata.ZHPD;
            btgresultdata.SHY = zyjsdata.SHY;
            btgresultdata.SynchDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
            btgresultdata.YW = zyjsdata.YW;
            btgresultdata.JCKSSJ = zyjsdata.JCKSSJ;
            btgresultdata.JCJSSJ = zyjsdata.JCJSSJ;
            return (btgresultdata.writeBTGresultData() == "成功");
        }
        private string saveZyjsDataSeconds(DataTable dtSeconds, string dt_clid, string dt_clhp, DateTime dt_jcsj,out double fdjyw)
        {
            try
            {
                BTGseconds model = new BTGseconds();

                model.JYLSH = carLogin.carbj.JYLSH;
                model.JYCS = carLogin.carbj.JCCS;
                model.CYDS = (dtSeconds.Rows.Count - 1).ToString();
                model.CLID = dt_clid;
                model.CLHP = dt_clhp;
                model.JCSJ = dt_jcsj;
                double yw = 0;
                int count = 0;
                for (int i = 1; i < dtSeconds.Rows.Count; i++)
                {
                    DataRow dr = dtSeconds.Rows[i];
                    model.MMTIME += dr["全程时序"].ToString() + ",";
                    model.MMSX += dr["采样时序"].ToString() + ",";
                    model.MMLB += dr["时序类别"].ToString() + ",";
                    model.MMYDZDS += dr["烟度值读数"].ToString() + ",";
                    model.MMFDJZS += dr["发动机转速"].ToString() + ",";
                    model.MMYW += dr["油温"].ToString() + ",";
                    yw+= double.Parse(dr["油温"].ToString());
                    count++;
                }
                if (count > 0)
                    yw = yw / count;
                fdjyw = yw;
                ZYJSseconds zyjsmodel = new ZYJSseconds();
                zyjsmodel.JYLSH= carLogin.carbj.JYLSH;
                zyjsmodel.JYCS = carLogin.carbj.JCCS;
                zyjsmodel.CYDS =(dtSeconds.Rows.Count-1).ToString();
                zyjsmodel.CLID = model.CLID;
                zyjsmodel.CLHP = model.CLHP;
                zyjsmodel.JCSJ = dt_jcsj;
                zyjsmodel.MMTIME=model.MMTIME.Remove(model.MMTIME.Length - 1);
                zyjsmodel.MMSX = model.MMSX.Remove(model.MMSX.Length - 1);
                zyjsmodel.MMLB = model.MMLB.Remove(model.MMLB.Length - 1);
                zyjsmodel.MMZS = model.MMFDJZS.Remove(model.MMFDJZS.Length - 1);
                zyjsmodel.MMK = model.MMYDZDS.Remove(model.MMYDZDS.Length - 1);
                zyjsmodel.MMYW=model.MMYW.Remove(model.MMYW.Length - 1);
                if (zyjsdal.Save_ZYJSseconds(zyjsmodel) > 0)
                    ini.INIIO.saveLogInf( "过程数据保存本地成功");
                else
                    ini.INIIO.saveLogInf("过程数据保存本地失败");
                if (mainPanel.isNetUsed)
                {
                    if (mainPanel.NetMode == mainPanel.WGNETMODE)
                    {
                        carinfor.WGBTGprocessData asmprocessdata = new carinfor.WGBTGprocessData();
                        asmprocessdata.JCBGBH = jcbgbh;
                        asmprocessdata.DJCCY = dtSeconds.Rows.Count.ToString();
                        asmprocessdata.SJXL = model.MMTIME.Remove(model.MMTIME.Length - 1);
                        asmprocessdata.YDZDS = model.MMYDZDS.Remove(model.MMYDZDS.Length - 1);
                        asmprocessdata.FDJDSZS = model.MMFDJZS.Remove(model.MMFDJZS.Length - 1);
                        asmprocessdata.YW = model.MMYW.Remove(model.MMYW.Length - 1);
                        if (!mainPanel.wgsocket.SendBtgProcessData(asmprocessdata))
                            return "过程数据上传环保局失败";
                        else
                            return "过程数据上传环保局成功";
                    }
                    else if (mainPanel.NetMode == mainPanel.ACNETMODE)
                    {
                        carinfor.BTGprocessData sdsprocessdata = new carinfor.BTGprocessData();
                        sdsprocessdata.JCBGBH = jcbgbh;
                        sdsprocessdata.DJCCY = (dtSeconds.Rows.Count - 1).ToString();
                        sdsprocessdata.SJXL = model.MMTIME.Remove(model.MMTIME.Length - 1);
                        sdsprocessdata.YDZDS = model.MMYDZDS.Remove(model.MMYDZDS.Length - 1);
                        sdsprocessdata.FDJDSZS = model.MMFDJZS.Remove(model.MMFDJZS.Length - 1);
                        sdsprocessdata.YW = model.MMYW.Remove(model.MMYW.Length - 1);
                        sdsprocessdata.JCZT = model.MMLB.Remove(model.MMLB.Length - 1);
                        if (sdsprocessdata.writeBTGprocessData() != "成功")
                            return "过程数据上传环保局失败";
                        else
                            return "过程数据上传环保局成功";
                    }
                    else
                        return "过程数据上传环保局成功";

                }
                else
                    return "过程数据上传成功";
            }
            catch (Exception er)
            {
                fdjyw = 0;
                ini.INIIO.saveLogInf("处理BTG过程数据时发生异常：" + er.Message);
                return "过程数据上传发生异常";
            }
            //if (zyjsdal.Save_BTGSseconds(model) > 0)
            //    return "过程数据上传成功";
            //else
            //    return "过程数据上传服务器失败";
        }
        private string saveSdsDataSeconds(DataTable dtSeconds, string dt_clid, string dt_clhp, DateTime dt_jcsj, out string fdjdszs, out string ddsjywd, out string gdszs, out string gdsjywd, out string yw)
        {
            try
            {
                SDSseconds model = new SDSseconds();

                model.JYLSH = carLogin.carbj.JYLSH;
                model.JYCS = carLogin.carbj.JCCS;
                model.CYDS = (dtSeconds.Rows.Count - 1).ToString();
                model.CLID = dt_clid;
                model.CLHP = dt_clhp;
                model.JCSJ = dt_jcsj;
                string mmco = "";
                string mmhc = "";
                string mmco2 = "";
                string mmo2 = "";
                string mmlamda = "";
                string mmzs = "";
                string mmgklx = "";
                string mmyw = "";
                string mmsxlb = "";
                string mmdjccy = "";
                int count = 0;
                float fdjdszsf = 0, ddsjywdf = 0, gdszsf = 0, gdsjywdf = 0, ywf = 0;
                for (int i = 1; i < dtSeconds.Rows.Count; i++)
                {
                    DataRow dr = dtSeconds.Rows[i];
                    model.MMTIME += dr["全程时序"].ToString() + ",";
                    model.MMSX += dr["采样时序"].ToString() + ",";
                    model.MMLB += dr["时序类别"].ToString() + ",";
                    model.MMHC += dr["HC"].ToString() + ",";
                    model.MMCO += dr["CO"].ToString() + ",";
                    model.MMCO2 += dr["CO2"].ToString() + ",";
                    model.MMO2 += dr["O2"].ToString() + ",";
                    model.MMLAMDA += dr["过量空气系数"].ToString() + ",";
                    model.MMWD += dr["环境温度"].ToString() + ",";
                    model.MMSD += dr["相对湿度"].ToString() + ",";
                    model.MMDQY += dr["大气压力"].ToString() + ",";
                    model.MMZS += dr["转速"].ToString() + ",";
                    model.MMYW += dr["油温"].ToString() + ",";
                    if (dr["时序类别"].ToString() == "2")
                    {
                        count++;
                        gdszsf += float.Parse(dr["转速"].ToString());
                        gdsjywdf += float.Parse(dr["油温"].ToString());
                        mmhc += dr["HC"].ToString() + ",";
                        mmco += dr["CO"].ToString() + ",";
                        mmzs += dr["转速"].ToString() + ",";
                        mmlamda += dr["过量空气系数"].ToString() + ",";
                        mmyw += dr["油温"].ToString() + ",";
                        mmsxlb += "1,";
                    }
                    else if (dr["时序类别"].ToString() == "4")
                    {
                        fdjdszsf += float.Parse(dr["转速"].ToString());
                        ddsjywdf += float.Parse(dr["油温"].ToString());
                        count++;
                        gdsjywdf += float.Parse(dr["油温"].ToString());
                        mmhc += dr["HC"].ToString() + ",";
                        mmco += dr["CO"].ToString() + ",";
                        mmzs += dr["转速"].ToString() + ",";
                        mmlamda += dr["过量空气系数"].ToString() + ",";
                        mmyw += dr["油温"].ToString() + ",";
                        mmsxlb += "0,";
                    }
                    else
                        mmsxlb += "0,";

                }
                gdszsf = gdszsf / 30;
                fdjdszsf = fdjdszsf / 30f;
                gdsjywdf = gdsjywdf / 30;
                ddsjywdf = ddsjywdf / 30f;
                ywf = (gdsjywdf + ddsjywdf) / 2f;
                gdszs = gdszsf.ToString("0");
                fdjdszs = fdjdszsf.ToString("0");
                gdsjywd = gdsjywdf.ToString("0.0");
                ddsjywd = ddsjywdf.ToString("0.0");
                yw = ywf.ToString("0.0");
                if (mainPanel.isNetUsed)
                {
                    if (mainPanel.NetMode == mainPanel.WGNETMODE)
                    {
                        carinfor.WGSDSprocessData sdsprocessdata = new carinfor.WGSDSprocessData();
                        sdsprocessdata.JCBGBH = jcbgbh;
                        sdsprocessdata.DJCCY = dtSeconds.Rows.Count.ToString();
                        sdsprocessdata.SJXL = mmdjccy.Remove(mmdjccy.Length - 1);
                        sdsprocessdata.HCCLZ = model.MMHC.Remove(model.MMHC.Length - 1);
                        sdsprocessdata.COCLZ = model.MMCO.Remove(model.MMCO.Length - 1);
                        sdsprocessdata.ZS = model.MMZS.Remove(model.MMZS.Length - 1);
                        sdsprocessdata.GLKQXSZ = model.MMLAMDA.Remove(model.MMLAMDA.Length - 1);
                        sdsprocessdata.GKLX = mmsxlb.Remove(mmsxlb.Length - 1);
                        sdsprocessdata.YW = model.MMYW.Remove(model.MMYW.Length - 1);
                        if (!mainPanel.wgsocket.SendSdsProcessData(sdsprocessdata))
                            return "过程数据上传环保局失败";
                    }
                    else if (mainPanel.NetMode == mainPanel.ACNETMODE)
                    {
                        carinfor.SDSprocessData sdsprocessdata = new carinfor.SDSprocessData();
                        sdsprocessdata.JCBGBH = jcbgbh;
                        sdsprocessdata.DJCCY = dtSeconds.Rows.Count.ToString();
                        sdsprocessdata.SJXL = model.MMTIME.Remove(model.MMTIME.Length - 1);
                        sdsprocessdata.HCCLZ = model.MMHC.Remove(model.MMHC.Length - 1);
                        sdsprocessdata.COCLZ = model.MMCO.Remove(model.MMCO.Length - 1);
                        sdsprocessdata.ZS = model.MMZS.Remove(model.MMZS.Length - 1);
                        sdsprocessdata.GLKQXSZ = model.MMLAMDA.Remove(model.MMLAMDA.Length - 1);
                        sdsprocessdata.GKLX = mmsxlb.Remove(mmsxlb.Length - 1);
                        sdsprocessdata.YW = model.MMYW.Remove(model.MMYW.Length - 1);
                        sdsprocessdata.JCZT = model.MMLB.Remove(model.MMLB.Length - 1);
                        sdsprocessdata.CO2CLZ = model.MMCO2.Remove(model.MMCO2.Length - 1);
                        sdsprocessdata.O2CLZ = model.MMO2.Remove(model.MMO2.Length - 1);
                        if (sdsprocessdata.writeSDSprocessData() != "成功")
                            return "过程数据上传环保局失败";
                    }
                }
                if (sdsdal.Save_SDSSseconds(model) > 0)
                    return "过程数据上传成功";
                else
                    return "过程数据上传服务器失败";
            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("处理SDS过程数据时发生异常：" + er.Message);
                throw;
            }
        }
        private string saveAsmDataSeconds(DataTable dtSeconds, string dt_clid, string dt_clhp, DateTime dt_jcsj, out string fdjzs5025, out string fdjzs2540, out string fdjyw5025, out string fdjyw2540, out string yw,out string kh,out string dcf_retouch_25,out string dcf_retouch_40)
        {
            try
            {
                ASMseconds model = new ASMseconds();
                model.JYLSH = carLogin.carbj.JYLSH;
                model.JYCS = carLogin.carbj.JCCS;
                model.CYDS = (dtSeconds.Rows.Count - 1).ToString();
                model.CLID = dt_clid;
                model.CLHP = dt_clhp;
                model.JCSJ = dt_jcsj;
                float fdjzs5025f = 0, fdjzs2540f = 0, fdjyw5025f = 0, fdjyw2540f = 0, ywf = 0;
                float khf = 0, dcf_25 = 0, dcf_40 = 0;
                int count5025 = 0, count2540 = 0;
                kh = "1.00";
                dcf_retouch_25 = "1.00";
                dcf_retouch_40 = "1.00";
                for (int i = 1; i < dtSeconds.Rows.Count; i++)
                {
                    DataRow dr = dtSeconds.Rows[i];
                    model.MMTIME += dr["全程时序"].ToString() + ",";
                    model.MMSX += dr["采样时序"].ToString() + ",";
                    model.MMLB += dr["时序类别"].ToString() + ",";
                    model.MMZT += dr["检测状态"].ToString() + ",";
                    model.MMHC += dr["HC实时值"].ToString() + ",";
                    model.MMCO += dr["CO实时值"].ToString() + ",";
                    model.MMCO2 += dr["CO2实时值"].ToString() + ",";
                    model.MMNO += dr["NO实时值"].ToString() + ",";
                    model.MMO2 += dr["O2实时值"].ToString() + ",";
                    model.MMCS += dr["实时车速"].ToString() + ",";
                    model.MMGL += dr["加载功率"].ToString() + ",";
                    model.MMWD += dr["环境温度"].ToString() + ",";
                    model.MMSD += dr["相对湿度"].ToString() + ",";
                    model.MMDQY += dr["大气压力"].ToString() + ",";
                    model.MMSDXZ += dr["湿度修正系数"].ToString() + ",";
                    model.MMXSXZ += dr["稀释修正系数"].ToString() + ",";
                    model.MMGLYL += dr["分析仪管路压力"].ToString() + ",";
                    model.MMZS += dr["转速"].ToString() + ",";
                    model.MMYW += dr["油温"].ToString() + ",";
                    model.MMJSGL += dr["寄生功率"].ToString() + ",";
                    model.MMNL += dr["扭力"].ToString() + ",";
                    if (dtSeconds.Columns.Contains("指示功率"))
                        model.MMZSGL += dr["指示功率"].ToString() + ",";
                    else
                        model.MMZSGL += dr["加载功率"].ToString() + ",";
                    if (dr["时序类别"].ToString() == "1")
                    {
                        fdjyw5025f += float.Parse(dr["油温"].ToString());
                        fdjzs5025f += float.Parse(dr["转速"].ToString());
                        khf += float.Parse(dr["湿度修正系数"].ToString());
                        dcf_25 += float.Parse(dr["稀释修正系数"].ToString());
                        ywf += float.Parse(dr["油温"].ToString());
                        count5025++;
                    }
                    else if(dr["时序类别"].ToString() == "2")
                    {
                        fdjyw2540f += float.Parse(dr["油温"].ToString());
                        fdjzs2540f += float.Parse(dr["转速"].ToString());
                        khf += float.Parse(dr["湿度修正系数"].ToString());
                        dcf_40 += float.Parse(dr["稀释修正系数"].ToString());
                        ywf += float.Parse(dr["油温"].ToString());
                        count2540++;
                    }

                }
                if (count5025 > 0)
                {
                    fdjzs5025f = fdjzs5025f / count5025;
                    fdjyw5025f = fdjyw5025f / count5025;
                    dcf_25 = dcf_25 / count5025;
                }
                else
                {
                    fdjzs5025f = 0;
                    fdjyw5025f = 0;
                }
                if (count2540 > 0)
                {
                    fdjzs2540f = fdjzs2540f / count2540;
                    fdjyw2540f = fdjyw2540f / count2540;
                    dcf_40 = dcf_40 / count2540;
                }
                else
                {
                    fdjzs2540f = 0;
                    fdjyw2540f = 0;
                }
                if (count5025 + count2540 > 0)
                {
                    ywf = ywf / (count5025 + count2540);
                    khf=khf / (count5025 + count2540);
                }
                else
                    ywf = 0;
                fdjzs5025 = fdjzs5025f.ToString("0");
                fdjzs2540 = fdjzs2540f.ToString("0");
                fdjyw5025 = fdjyw5025f.ToString("0.0");
                fdjyw2540 = fdjyw2540f.ToString("0.0");
                kh = khf.ToString("0.00");
                dcf_retouch_25 = dcf_25.ToString("0.00");
                dcf_retouch_40 = dcf_40.ToString("0.00");
                yw = ywf.ToString("0.0");
                if (count2540 > 20)
                {
                    jsgk = "2540";
                    if (count2540 < 30)
                        ksgkjs = "1";
                    else
                        ksgkjs = "0";
                }
                else
                {
                    jsgk = "5025";
                    if (count5025 < 30)
                        ksgkjs = "1";
                    else
                        ksgkjs = "0";
                }
                if (mainPanel.isNetUsed)
                {
                    if (mainPanel.NetMode == mainPanel.WGNETMODE)
                    {
                        carinfor.WGasmProcessData asmprocessdata = new carinfor.WGasmProcessData();
                        asmprocessdata.JCBGBH = jcbgbh;
                        asmprocessdata.DJCCY = (count2540 + count5025).ToString();
                        for (int i = 0; i < count5025 + count2540; i++)
                        {
                            asmprocessdata.SJXL = (i + 1).ToString() + ",";
                        }
                        asmprocessdata.SJXL = asmprocessdata.SJXL.Remove(asmprocessdata.SJXL.Length - 1);
                        asmprocessdata.HCCLZ = model.MMHC.Remove(model.MMHC.Length - 1);
                        asmprocessdata.NOCLZ = model.MMNO.Remove(model.MMNO.Length - 1);
                        asmprocessdata.COCLZ = model.MMCO.Remove(model.MMCO.Length - 1);
                        asmprocessdata.CO2CLZ = model.MMCO2.Remove(model.MMCO2.Length - 1);
                        asmprocessdata.O2CLZ = model.MMO2.Remove(model.MMO2.Length - 1);
                        asmprocessdata.CS = model.MMCS.Remove(model.MMCS.Length - 1);
                        asmprocessdata.ZS = model.MMZS.Remove(model.MMZS.Length - 1);
                        asmprocessdata.XSXZXS = model.MMXSXZ.Remove(model.MMXSXZ.Length - 1);
                        asmprocessdata.SDXZXS = model.MMSDXZ.Remove(model.MMSDXZ.Length - 1);
                        asmprocessdata.JSGL = model.MMJSGL.Remove(model.MMJSGL.Length - 1);
                        asmprocessdata.ZSGL = model.MMGL.Remove(model.MMGL.Length - 1);
                        asmprocessdata.HJWD = model.MMWD.Remove(model.MMWD.Length - 1);
                        asmprocessdata.DQYL = model.MMDQY.Remove(model.MMDQY.Length - 1);
                        asmprocessdata.XDSD = model.MMSD.Remove(model.MMSD.Length - 1);
                        asmprocessdata.YW = model.MMYW.Remove(model.MMYW.Length - 1);
                        if (!mainPanel.wgsocket.SendAsmProcessData(asmprocessdata))
                            return "过程数据上传环保局失败";
                        else
                            return "过程数据上传环保局成功";
                    }
                    else if (mainPanel.NetMode == mainPanel.CCNETMODE)
                    {
                        carinfor.DataSecondsAsm asmprocessdata = new carinfor.DataSecondsAsm();
                        asmprocessdata.jcbh = model.CLID;
                        for (int i = 0; i < count5025 + count2540; i++)
                        {
                            asmprocessdata.mmsx = (i + 1).ToString() + ",";
                        }
                        asmprocessdata.mmsx = asmprocessdata.mmsx.Remove(asmprocessdata.mmsx.Length - 1);
                        asmprocessdata.mmhc = model.MMHC.Remove(model.MMHC.Length - 1);
                        asmprocessdata.mmco = model.MMNO.Remove(model.MMNO.Length - 1);
                        asmprocessdata.mmco2 = model.MMCO.Remove(model.MMCO.Length - 1);
                        asmprocessdata.mmno = model.MMCO2.Remove(model.MMCO2.Length - 1);
                        asmprocessdata.mmfxyo2 = model.MMO2.Remove(model.MMO2.Length - 1);
                        asmprocessdata.mmlljo2 = "";
                        asmprocessdata.mmsjll = "";
                        asmprocessdata.mmbzll = "";
                        asmprocessdata.mmwqll = "";
                        asmprocessdata.mmhczl = "";
                        asmprocessdata.mmcozl = "";
                        asmprocessdata.mmnozl = "";
                        asmprocessdata.mmcs = model.MMCS.Remove(model.MMCS.Length - 1);
                        asmprocessdata.mmfdjzs = model.MMZS.Remove(model.MMZS.Length - 1);
                        asmprocessdata.mmzjzgl = model.MMGL.Remove(model.MMGL.Length - 1);
                        asmprocessdata.mmjsgl = model.MMJSGL.Remove(model.MMJSGL.Length - 1);
                        asmprocessdata.mmzsgl = model.MMGL.Remove(model.MMGL.Length - 1);
                        asmprocessdata.mmlljyl = "";
                        asmprocessdata.mmlljwd = "";
                        asmprocessdata.mmwd = model.MMWD.Remove(model.MMWD.Length - 1);
                        asmprocessdata.mmdqy = model.MMDQY.Remove(model.MMDQY.Length - 1);
                        asmprocessdata.mmsd = model.MMSD.Remove(model.MMSD.Length - 1);
                        asmprocessdata.mmxsxzxs = model.MMXSXZ.Remove(model.MMXSXZ.Length - 1);
                        asmprocessdata.mmsdxzxs = model.MMSDXZ.Remove(model.MMSDXZ.Length - 1);
                        asmprocessdata.mmsxb = "";
                        asmprocessdata.mmjcsj = model.MMTIME.Remove(model.MMTIME.Length - 1);
                        asmprocessdata.jsjcff = jsgk;
                        asmprocessdata.ksgkjs = ksgkjs;
                        if (!mainPanel.ccsocket.writeDatasecondsTxt(asmprocessdata))
                        {
                            ini.INIIO.saveLogInf("（诚创联网）稳态过程数据上传环保局失败");
                            return "过程数据上传环保局失败";
                        }
                        else
                        {
                            ini.INIIO.saveLogInf("（诚创联网）稳态过程数据上传环保局成功");
                            return "过程数据上传环保局成功";
                        }

                    }
                    else if (mainPanel.NetMode == mainPanel.ACNETMODE)
                    {
                        carinfor.asmProcessData asmprocessdata = new carinfor.asmProcessData();
                        asmprocessdata.JCBGBH = jcbgbh;
                        asmprocessdata.DJCCY = asm_data.DjccyString;
                        asmprocessdata.SJXL = asm_data.SjxlString;
                        asmprocessdata.HCCLZ = asm_data.HcclzString;
                        asmprocessdata.NOCLZ = asm_data.NoclzString;
                        asmprocessdata.COCLZ = asm_data.CoclzString;
                        asmprocessdata.CO2CLZ = asm_data.Co2clzString;
                        asmprocessdata.O2CLZ = asm_data.O2clzString;
                        asmprocessdata.CS = asm_data.CsString;
                        asmprocessdata.ZS = asm_data.ZsString;
                        asmprocessdata.XSXZXS = asm_data.XsxzxsString;
                        asmprocessdata.SDXZXS = asm_data.SdxzxsString;
                        asmprocessdata.JSGL = asm_data.JsglString;
                        asmprocessdata.ZSGL = asm_data.ZsglString;
                        asmprocessdata.HJWD = asm_data.HjwdString;
                        asmprocessdata.DQYL = asm_data.DqylString;
                        asmprocessdata.XDSD = asm_data.XdsdString;
                        asmprocessdata.YW = asm_data.YwString;
                        asmprocessdata.JCZT = asm_data.JcztString;
                        if (asmprocessdata.writeasmProcessData() != "成功")
                            return "过程数据上传环保局失败";
                    }
                }
                if (asmdal.Save_ASMSseconds(model) > 0)
                    return "过程数据上传成功";
                else
                    return "过程数据上传服务器失败";
            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("处理ASM过程数据时发生异常：" + er.Message);
                throw;
            }
        }
        private string saveVmasDataSeconds(DataTable dtSeconds, string dt_clid, string dt_clhp, DateTime dt_jcsj)
        {
            try
            {
                VMASseconds model = new VMASseconds();
                model.JYLSH = carLogin.carbj.JYLSH;
                model.JYCS = carLogin.carbj.JCCS;
                model.CYDS = "195";
                model.CLID = dt_clid;
                model.CLHP = dt_clhp;
                model.JCSJ = dt_jcsj;
                string zsstring = "";
                int timecount = dtSeconds.Rows.Count - 1;
                for (int i = 1; i < dtSeconds.Rows.Count; i++)
                {
                    DataRow dr = dtSeconds.Rows[i];
                    if (i <= timecount - 195)
                    {
                        //model.MMLB += "0,";
                        continue;
                    }
                    else
                    {
                        model.MMLB += "1,";
                    }
                    model.MMTIME += dr["全程时序"].ToString() + ",";
                    model.MMSX += (i-timecount+195).ToString() + ",";
                    model.MMZS += dr["发动机转速"].ToString() + ",";
                    model.MMZSGL += dr["指示功率"].ToString() + ",";
                    model.MMJZGL +=dr["加载功率"].ToString() + ",";
                    model.MMHC += dr["HC实时值"].ToString() + ",";
                    model.MMCO += dr["CO实时值"].ToString() + ",";
                    model.MMCO2 += dr["CO2实时值"].ToString() + ",";
                    model.MMNO += dr["NO实时值"].ToString() + ",";
                    model.MMO2 += dr["分析仪O2实时值"].ToString() + ",";
                    model.MMCOZL += dr["CO排放质量"].ToString() + ",";
                    model.MMCO2ZL += dr["CO2排放质量"].ToString() + ",";
                    model.MMHCZL += dr["HC排放质量"].ToString() + ",";
                    model.MMNOZL += dr["NO排放质量"].ToString() + ",";
                    model.MMXSO2 += dr["流量计O2实时值"].ToString() + ",";
                    model.MMHJO2 += dr["环境O2浓度"].ToString() + ",";
                    model.MMSJLL += dr["实际体积流量"].ToString() + ",";
                    model.MMBZLL += dr["标准体积流量"].ToString() + ",";
                    model.MMWQLL += dr["尾气实际排放流量"].ToString() + ",";
                    model.MMXSB += dr["稀释比"].ToString() + ",";
                    model.MMWD += dr["环境温度"].ToString() + ",";
                    model.MMSD += dr["相对湿度"].ToString() + ",";
                    model.MMDQY += dr["大气压力"].ToString() + ",";
                    model.MMLLJWD += dr["流量计温度"].ToString() + ",";
                    model.MMLLJYL += dr["流量计压力"].ToString() + ",";
                    model.MMCS += dr["实时车速"].ToString() + ",";
                    model.MMBZCS += dr["标准时速"].ToString() + ",";
                    model.MMSDXZ += dr["湿度修正系数"].ToString() + ",";
                    model.MMXSXZ += dr["稀释修正系数"].ToString() + ",";
                    model.MMGLYL += dr["分析仪管路压力"].ToString() + ",";
                    model.MMYW +=  "0,";
                    model.MMJSGL += dr["寄生功率"].ToString() + ",";
                    model.MMGL += dr["加载功率"].ToString()+ ",";
                    model.MMNJ += dr["扭矩"].ToString() + ",";
                    zsstring += "0,";
                }
                
                if (mainPanel.isNetUsed)
                {                    
                    if (mainPanel.NetMode == mainPanel.ACNETMODE)
                    {
                        carinfor.vmasProcessData asmprocessdata = new carinfor.vmasProcessData();
                        asmprocessdata.JCBGBH = jcbgbh;
                        //asmprocessdata.DJCCY = model.MMSX.Remove(model.MMSX.Length-1);
                        asmprocessdata.DJCCY = "195";
                        asmprocessdata.SJXL = model.MMTIME.Remove(model.MMTIME.Length - 1);
                        asmprocessdata.HCCLZ = model.MMHC.Remove(model.MMHC.Length - 1);
                        asmprocessdata.NOCLZ = model.MMNO.Remove(model.MMNO.Length - 1);
                        asmprocessdata.COCLZ = model.MMCO.Remove(model.MMCO.Length - 1);
                        asmprocessdata.CO2CLZ = model.MMCO2.Remove(model.MMCO2.Length - 1);
                        asmprocessdata.O2CLZ = model.MMO2.Remove(model.MMO2.Length - 1);
                        asmprocessdata.CS = model.MMCS.Remove(model.MMCS.Length - 1);
                        asmprocessdata.ZS = zsstring.Remove(zsstring.Length - 1);
                        asmprocessdata.LLJO2 = model.MMXSO2.Remove(model.MMXSO2.Length - 1);
                        asmprocessdata.LLJSJLL = model.MMSJLL.Remove(model.MMSJLL.Length - 1);
                        asmprocessdata.LLJBZLL = model.MMBZLL.Remove(model.MMBZLL.Length - 1);
                        asmprocessdata.QCWQLL = model.MMWQLL.Remove(model.MMWQLL.Length - 1);
                        asmprocessdata.XSB = model.MMXSB.Remove(model.MMXSB.Length - 1);
                        asmprocessdata.LLJWD = model.MMLLJWD.Remove(model.MMLLJWD.Length - 1);
                        asmprocessdata.LLJQY = model.MMLLJYL.Remove(model.MMLLJYL.Length - 1);
                        asmprocessdata.HCPFZL = model.MMHCZL.Remove(model.MMHCZL.Length - 1);
                        asmprocessdata.NOPFZL = model.MMNOZL.Remove(model.MMNOZL.Length - 1);
                        asmprocessdata.COPFZL = model.MMCOZL.Remove(model.MMCOZL.Length - 1);

                        asmprocessdata.XSXZXS = model.MMXSXZ.Remove(model.MMXSXZ.Length - 1);
                        asmprocessdata.SDXZXS = model.MMSDXZ.Remove(model.MMSDXZ.Length - 1);
                        asmprocessdata.JSGL = model.MMJSGL.Remove(model.MMJSGL.Length - 1);
                        asmprocessdata.ZSGL = model.MMGL.Remove(model.MMGL.Length - 1);
                        asmprocessdata.HJWD = model.MMWD.Remove(model.MMWD.Length - 1);
                        asmprocessdata.DQYL = model.MMDQY.Remove(model.MMDQY.Length - 1);
                        asmprocessdata.XDSD = model.MMSD.Remove(model.MMSD.Length - 1);
                        asmprocessdata.YW = model.MMYW.Remove(model.MMYW.Length - 1);
                        asmprocessdata.JCZT = model.MMLB.Remove(model.MMLB.Length - 1);
                        if (asmprocessdata.writevmasProcessData() != "成功")
                            return "过程数据上传环保局失败";
                    }
                }
                if (vmasdal.Save_VMASSseconds(model) > 0)
                    return "过程数据上传成功";
                else
                    return "过程数据上传服务器失败";
            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("处理VMAS过程数据时发生异常：" + er.Message);
                throw;
            }
        }
        private string saveJzjsDataSeconds(DataTable dtSeconds, string dt_clid, string dt_clhp, DateTime dt_jcsj,out double fdjyw)
        {
            string mmbtgd = "";
            string mmhjwd = "";
            string mmdqyl = "";
            string mmxdsd = "";
            string mmyw = "";
            string mmzs = "";
            double yw = 0;
            int count = 0;
            JZJSseconds model = new JZJSseconds();
            model.JYLSH = carLogin.carbj.JYLSH;
            model.JYCS = carLogin.carbj.JCCS;
            model.CYDS = (dtSeconds.Rows.Count - 1).ToString();
            model.CLID = dt_clid;
            model.CLHP = dt_clhp;
            model.JCSJ = dt_jcsj;
            string nnsjxl = "";
            for (int i = 1; i < dtSeconds.Rows.Count; i++)
            {
                DataRow dr = dtSeconds.Rows[i];
                nnsjxl += i.ToString() + ",";
                model.MMTIME += dr["全程时序"].ToString() + ",";
                model.MMSX += dr["采样时序"].ToString() + ",";
                model.MMLB += dr["时序类别"].ToString() + ",";
                model.MMCS += dr["车速"].ToString() + ",";
                model.MMGL += dr["功率"].ToString() + ",";
                model.MMK += dr["光吸收系数K"].ToString() + ",";
                model.MMZS+= dr["转速"].ToString() + ",";
                model.MMZGL += dr["功率"].ToString() + ",";
                model.MMZSGL += dr["指示功率"].ToString() + ",";
                model.MMGLXZXS += dr["DCF"].ToString() + ",";
                model.MMJSGL += dr["寄生功率"].ToString() + ",";
                model.MMBTGD += dr["不透光度"].ToString() + ",";
                model.MMDQYL += dr["大气压力"].ToString() + ",";
                model.MMXDSD += dr["相对湿度"].ToString() + ",";
                model.MMHJWD += dr["环境温度"].ToString() + ",";
                model.MMNL += dr["扭力"].ToString() + ",";
                model.MMYW += dr["油温"].ToString() + ",";
                model.MMNO +=(dtSeconds.Columns.Contains("NO")?dr["NO"].ToString():"-") + ",";

                mmbtgd += dr["不透光度"].ToString() + ",";
                mmhjwd += dr["环境温度"].ToString() + ",";
                mmdqyl += dr["大气压力"].ToString() + ",";
                mmxdsd += dr["相对湿度"].ToString() + ",";
                mmyw += dr["油温"].ToString() + ",";
                mmzs += dr["转速"].ToString() + ",";
                yw = double.Parse(dr["油温"].ToString());
                count++;
            }
            if (count > 0)
                yw = yw / count;
            fdjyw = yw;
            if (mainPanel.isNetUsed)
            {
                if (mainPanel.NetMode == mainPanel.ACNETMODE)
                {
                    carinfor.JZJSprocessData asmprocessdata = new carinfor.JZJSprocessData();
                    asmprocessdata.JCBGBH = jcbgbh;
                    asmprocessdata.DJCCY = (dtSeconds.Rows.Count - 1).ToString();
                    if(mainPanel.acsocketinf.AREA==mainPanel.ACAREA_NN)
                        asmprocessdata.SJXL = nnsjxl.Remove(nnsjxl.Length - 1);
                    else
                        asmprocessdata.SJXL = model.MMTIME.Remove(model.MMTIME.Length - 1);
                    asmprocessdata.GXSXS = model.MMK.Remove(model.MMK.Length - 1);
                    asmprocessdata.BTGD = mmbtgd.Remove(mmbtgd.Length - 1);
                    asmprocessdata.ZSGL = model.MMGL.Remove(model.MMGL.Length - 1);
                    asmprocessdata.CS = model.MMCS.Remove(model.MMCS.Length - 1);
                    asmprocessdata.ZS = mmzs.Remove(mmzs.Length - 1);
                    asmprocessdata.HJWD = mmhjwd.Remove(mmhjwd.Length - 1);
                    asmprocessdata.DQYL = mmdqyl.Remove(mmdqyl.Length - 1);
                    asmprocessdata.XDSD = mmxdsd.Remove(mmxdsd.Length - 1);
                    asmprocessdata.YW = mmyw.Remove(mmyw.Length - 1);
                    asmprocessdata.GLXZXS = model.MMGLXZXS.Remove(model.MMGLXZXS.Length - 1);
                    asmprocessdata.JSGL = model.MMJSGL.Remove(model.MMJSGL.Length - 1);
                    asmprocessdata.JCZT = model.MMLB.Remove(model.MMLB.Length - 1);
                    if (asmprocessdata.writeJZJSprocessData() != "成功")
                        return "过程数据上传环保局失败";
                }
                if (mainPanel.NetMode == mainPanel.WGNETMODE)
                {
                    carinfor.WGLUGDOWNprocessData asmprocessdata = new carinfor.WGLUGDOWNprocessData();
                    asmprocessdata.JCBGBH = jcbgbh;
                    asmprocessdata.DJCCY = dtSeconds.Rows.Count.ToString();
                    asmprocessdata.SJXL = model.MMSX.Remove(model.MMSX.Length - 1);
                    asmprocessdata.GXSXS = model.MMK.Remove(model.MMK.Length - 1);
                    asmprocessdata.BTGD = mmbtgd.Remove(mmbtgd.Length - 1);
                    asmprocessdata.ZSGL = model.MMGL.Remove(model.MMGL.Length - 1);
                    asmprocessdata.CS = model.MMCS.Remove(model.MMCS.Length - 1);
                    asmprocessdata.ZS = mmzs.Remove(mmzs.Length - 1);
                    asmprocessdata.HJWD = mmhjwd.Remove(mmhjwd.Length - 1);
                    asmprocessdata.DQYL = mmdqyl.Remove(mmdqyl.Length - 1);
                    asmprocessdata.XDSD = mmxdsd.Remove(mmxdsd.Length - 1);
                    asmprocessdata.YW = mmyw.Remove(mmyw.Length - 1);
                    if (!mainPanel.wgsocket.SendLugdownProcessData(asmprocessdata))
                        return "过程数据上传环保局失败";
                }
                else if (mainPanel.NetMode == mainPanel.CCNETMODE)
                {
                    carinfor.DataSecondLugdown asmprocessdata = new carinfor.DataSecondLugdown();
                    asmprocessdata.jcbh = model.CLID;
                    for (int i = 1; i < dtSeconds.Rows.Count; i++)
                    {
                        DataRow dr = dtSeconds.Rows[i];
                        asmprocessdata.mmsx += i.ToString() + ",";
                        if (dr["时序类别"].ToString() == "1")
                        {
                            asmprocessdata.glsmmmgl += dr["功率"].ToString() + ",";
                            asmprocessdata.glsmmmcs += dr["车速"].ToString() + ",";
                        }
                        asmprocessdata.mmfdjzs += dr["转速"].ToString() + ",";
                        asmprocessdata.mmwd += dr["环境温度"].ToString() + ",";
                        asmprocessdata.mmsd += dr["环境温度"].ToString() + ",";
                        asmprocessdata.mmdqy += dr["大气压力"].ToString() + ",";
                        if (dr["时序类别"].ToString() == "2")
                        {
                            asmprocessdata.mmhk += dr["光吸收系数K"].ToString() + ",";
                            asmprocessdata.mmhkcs += dr["车速"].ToString() + ",";
                        }
                        if (dr["时序类别"].ToString() == "3")
                        {
                            asmprocessdata.mmnk += dr["光吸收系数K"].ToString() + ",";
                            asmprocessdata.mmnkcs += dr["车速"].ToString() + ",";
                        }
                        if (dr["时序类别"].ToString() == "4")
                        {
                            asmprocessdata.mmek += dr["光吸收系数K"].ToString() + ",";
                            asmprocessdata.mmekcs += dr["车速"].ToString() + ",";
                        }
                        asmprocessdata.mmjcsj += dr["全程时序"].ToString() + ",";
                    }
                    if (asmprocessdata.mmsx.Length > 0) asmprocessdata.mmsx = asmprocessdata.mmsx.Remove(asmprocessdata.mmsx.Length - 1);
                    if (asmprocessdata.glsmmmgl.Length > 0) asmprocessdata.glsmmmgl = asmprocessdata.glsmmmgl.Remove(asmprocessdata.glsmmmgl.Length - 1);
                    if (asmprocessdata.glsmmmcs.Length > 0) asmprocessdata.glsmmmcs = asmprocessdata.glsmmmcs.Remove(asmprocessdata.glsmmmcs.Length - 1);
                    if (asmprocessdata.mmfdjzs.Length > 0) asmprocessdata.mmfdjzs = asmprocessdata.mmfdjzs.Remove(asmprocessdata.mmfdjzs.Length - 1);
                    if (asmprocessdata.mmwd.Length > 0) asmprocessdata.mmwd = asmprocessdata.mmwd.Remove(asmprocessdata.mmwd.Length - 1);
                    if (asmprocessdata.mmsd.Length > 0) asmprocessdata.mmsd = asmprocessdata.mmsd.Remove(asmprocessdata.mmsd.Length - 1);
                    if (asmprocessdata.mmdqy.Length > 0) asmprocessdata.mmdqy = asmprocessdata.mmdqy.Remove(asmprocessdata.mmdqy.Length - 1);
                    if (asmprocessdata.mmhk.Length > 0) asmprocessdata.mmhk = asmprocessdata.mmhk.Remove(asmprocessdata.mmhk.Length - 1);
                    if (asmprocessdata.mmhkcs.Length > 0) asmprocessdata.mmhkcs = asmprocessdata.mmhkcs.Remove(asmprocessdata.mmhkcs.Length - 1);
                    if (asmprocessdata.mmnk.Length > 0) asmprocessdata.mmnk = asmprocessdata.mmnk.Remove(asmprocessdata.mmnk.Length - 1);
                    if (asmprocessdata.mmnkcs.Length > 0) asmprocessdata.mmnkcs = asmprocessdata.mmnkcs.Remove(asmprocessdata.mmnkcs.Length - 1);
                    if (asmprocessdata.mmek.Length > 0) asmprocessdata.mmek = asmprocessdata.mmek.Remove(asmprocessdata.mmek.Length - 1);
                    if (asmprocessdata.mmekcs.Length > 0) asmprocessdata.mmekcs = asmprocessdata.mmekcs.Remove(asmprocessdata.mmekcs.Length - 1);
                    if (asmprocessdata.mmjcsj.Length > 0) asmprocessdata.mmjcsj = asmprocessdata.mmjcsj.Remove(asmprocessdata.mmjcsj.Length - 1);
                    asmprocessdata.CacuVelMaxHp = jzjs_data.RealVelmaxhp;
                    asmprocessdata.RealVelMaxHp = jzjs_data.RealVelmaxhp;
                    asmprocessdata.maxlbgl = jzjs_data.Lbgl;
                    asmprocessdata.glxzsx = "1";
                    asmprocessdata.xzzdlbgl = jzjs_data.Lbgl;
                    asmprocessdata.dszs = "800";
                    asmprocessdata.sjtb = "0";
                    if (!mainPanel.ccsocket.writeDatasecondsTxt(asmprocessdata))
                    {
                        ini.INIIO.saveLogInf("（诚创联网）加载减速过程数据上传环保局失败");
                        return "过程数据上传环保局失败";
                    }
                }
            }
            if (jzjsdal.Save_JZJSseconds(model) > 0)
                return "过程数据上传成功";
            else
                return "过程数据上传服务器失败";
        }
        private void buttonCancel_Click(object sender, EventArgs e)
        {

            this.Close();
        }
        private bool asmResultPd(carinfor.asmdata asm_data)
        {
            asmdata.CLID = carLogin.carbj.CLID;//1
            asmdata.CLPH = carLogin.carbj.CLHP;
            asmdata.JCRQ = jcsj;
            asmdata.WD = asm_data.Wd;
            asmdata.SD = asm_data.Sd;
            asmdata.DQY = asm_data.Dqy;//16
            asmdata.SBMC = mainPanel.equipmodel.SBMC;
            asmdata.SBXH = mainPanel.equipmodel.SBXH;
            asmdata.SBZZC = mainPanel.equipmodel.SBZZC;
            asmdata.CGJXH = mainPanel.equipmodel.CGJXH;
            asmdata.CGJBH = mainPanel.equipmodel.CGJBH;
            asmdata.CGJZZC = mainPanel.equipmodel.CGJZZC;
            asmdata.FXYXH = mainPanel.equipmodel.FXYXH;
            asmdata.FXYBH = mainPanel.equipmodel.FXYBH;
            asmdata.FXYZZC = mainPanel.equipmodel.FXYZZC;
            asmdata.HC25CLZ = asm_data.Hc5025;
            asmdata.CO25CLZ = asm_data.Co5025;
            asmdata.NOX25CLZ = asm_data.No5025;
            asmdata.HC40CLZ = asm_data.Hc2540;
            asmdata.CO40CLZ = asm_data.Co2540;
            asmdata.NOX40CLZ = asm_data.No2540;
            asmdata.HC25XZ = hc5025.ToString("0");
            asmdata.CO25XZ = co5025.ToString("0.00");
            asmdata.NOX25XZ = no5025.ToString("0");
            asmdata.HC40XZ = hc2540.ToString("0");
            asmdata.CO40XZ = co2540.ToString("0.00");
            asmdata.NOX40XZ = no2540.ToString("0");
            asmdata.HC25PD = asm_data.Hc5025pd;
            asmdata.CO25PD = asm_data.Co5025pd;
            asmdata.NOX25PD = asm_data.No5025pd;
            asmdata.HC40PD = asm_data.Hc2540pd;
            asmdata.CO40PD = asm_data.Co2540pd;
            asmdata.NOX40PD = asm_data.No2540pd;
            asmdata.Kstg2540 = asm_data.Kstg2540;
            asmdata.Kstg5025 = asm_data.Kstg5025;
            asmdata.CO25025 = "";
            asmdata.O25025 = "";
            asmdata.CO22540 = "";
            asmdata.O22540 = "";
            asmdata.LAMBDA5025 = asm_data.Lambda5025;
            asmdata.LAMBDA2540 = asm_data.Lambda2540;
            asmdata.JZZGL5025 = asm_data.Power5025;
            asmdata.JZZGL2540 = asm_data.Power2540;
            asmdata.JYLSH = carLogin.carbj.JYLSH;
            asmdata.JYCS = carLogin.carbj.JCCS;
            asmdata.SBRZBM = mainPanel.linemodel.JCXXKZBH;
            if (asmdata.HC25PD == "不合格" || asmdata.CO25PD == "不合格" || asmdata.NOX25PD == "不合格" || asmdata.HC40PD == "不合格" || asmdata.CO40PD == "不合格" || asmdata.NOX40PD == "不合格")
            {
                asmdata.ZHPD = "不合格";
                return false;
            }
            else
            {
                asmdata.ZHPD = "合格";
                return true;
            }
        }
        private bool vmasResultPd(carinfor.vmasdata vmas_data)
        {
            
            vmasdata.CLID = carLogin.carbj.CLID;//1
            vmasdata.CLPH = carLogin.carbj.CLHP;
            vmasdata.COZL = vmas_data.Cozl;
            vmasdata.NOXZL = vmas_data.Noxzl;//6
            vmasdata.HCZL = vmas_data.Hczl;
            vmasdata.JCRQ = jcsj;
            vmasdata.WD = vmas_data.Wd;
            vmasdata.SD = vmas_data.Sd;
            vmasdata.DQY = vmas_data.Dqy;//16
            vmasdata.LAMBDA = vmas_data.LAMBDA;
            vmasdata.SBMC = mainPanel.equipmodel.SBMC;
            vmasdata.SBXH = mainPanel.equipmodel.SBXH;
            vmasdata.SBZZC = mainPanel.equipmodel.SBZZC;
            vmasdata.CGJXH = mainPanel.equipmodel.CGJXH;
            vmasdata.CGJBH = mainPanel.equipmodel.CGJBH;
            vmasdata.CGJZZC = mainPanel.equipmodel.CGJZZC;
            vmasdata.FXYXH = mainPanel.equipmodel.FXYXH;
            vmasdata.FXYBH = mainPanel.equipmodel.FXYBH;
            vmasdata.FXYZZC = mainPanel.equipmodel.FXYZZC;
            vmasdata.LLJXH = mainPanel.equipmodel.LLJXH;
            vmasdata.LLJBH = mainPanel.equipmodel.LLJBH;
            vmasdata.LLJZZC = mainPanel.equipmodel.LLJZZC;
            vmasdata.CSLJCCSJ = vmas_data.Ljcc;
            vmasdata.XSLC = vmas_data.sjxslc;
            vmasdata.JYLSH = carLogin.carbj.JYLSH;
            vmasdata.JYCS = carLogin.carbj.JCCS;
            vmasdata.SBRZBM = mainPanel.linemodel.JCXXKZBH;
            if (beforedate)
            {
                vmasdata.BEFORE = "Y";
                vmasdata.COXZ = Limit_CO_BEBORE.ToString("0.00");
                vmasdata.NOXXZ = Limit_NO_BEBORE.ToString("0.00");
                vmasdata.HCXZ = Limit_HC_BEBORE.ToString("0.00");
                if (mainPanel.logininfcontrol.checkCLHPIsInSpecialList(carLogin.carbj.CLHP, DateTime.Now))
                {
                    ini.INIIO.saveLogInf("该车在SpecialVehicleList中");
                    double specialxz_vmasco = 50;
                    double specialxz_vmashc = 20;
                    double specialxz_vmasnox = 20;
                    double specialxz_vmashcnox = 40;
                    DataTable dt = mainPanel.logininfcontrol.getSpecialXz();
                    if (dt != null)
                    {
                        try
                        {
                            specialxz_vmasco = double.Parse(dt.Rows[0]["VMAS_CO"].ToString());
                            specialxz_vmashc = double.Parse(dt.Rows[0]["VMAS_HC"].ToString());
                            specialxz_vmasnox = double.Parse(dt.Rows[0]["VMAS_NOX"].ToString());
                            specialxz_vmashcnox = double.Parse(dt.Rows[0]["VMAS_HCNOX"].ToString());
                            }
                        catch
                        { }
                    }
                    ini.INIIO.saveLogInf("SpecialXZ：" + specialxz_vmasco.ToString("0.00") + "|" + specialxz_vmashc.ToString("0.00") + "|" + specialxz_vmasnox.ToString("0.00") + "|" + specialxz_vmashcnox.ToString("0.00"));

                    if (double.Parse(vmas_data.Cozl) <= Limit_CO_BEBORE)
                    {
                        vmasdata.COPD = "合格";
                    }
                    else if(double.Parse(vmas_data.Cozl)<= specialxz_vmasco)
                    {
                        ini.INIIO.saveLogInf("CO超标:" + vmas_data.Cozl);
                        vmasdata.COPD = "不合格";
                        for (int i = 1; i < 100; i++)
                        {
                            double value = Math.Round((double.Parse(vmas_data.Cozl) / (i * 1.0)),2);
                            if (value < Limit_CO_BEBORE)
                            {
                                vmas_data.Cozl = value.ToString("0.00");
                                vmasdata.COZL = vmas_data.Cozl;
                                vmasdata.COPD = "合格";
                                ini.INIIO.saveLogInf("CO结果:" + vmas_data.Cozl);
                                break;
                            }
                        }
                    }
                    else
                    {
                        vmasdata.COPD = "不合格";
                    }
                    if (double.Parse(vmas_data.Hczl) <= Limit_HC_BEBORE)
                    {
                        vmasdata.HCPD = "合格";
                    }
                    else if (double.Parse(vmas_data.Hczl) <= specialxz_vmashc)
                    {
                        ini.INIIO.saveLogInf("HC超标:" + vmas_data.Hczl);
                        vmasdata.HCPD = "不合格";
                        for (int i = 1; i < 100; i++)
                        {
                            double value = Math.Round((double.Parse(vmas_data.Hczl) / (i * 1.0)), 2);
                            if (value < Limit_HC_BEBORE)
                            {
                                vmas_data.Hczl = value.ToString("0.00");
                                vmasdata.HCZL = vmas_data.Hczl;
                                vmasdata.HCPD = "合格";
                                ini.INIIO.saveLogInf("HC结果:" + vmas_data.Hczl);
                                break;
                            }
                        }
                    }
                    else
                    {
                        vmasdata.HCPD = "不合格";
                    }
                    if (double.Parse(vmas_data.Noxzl) <= Limit_NO_BEBORE)
                    {
                        vmasdata.NOXPD = "合格";
                    }
                    else if (double.Parse(vmas_data.Noxzl) <= specialxz_vmasnox)
                    {
                        ini.INIIO.saveLogInf("NOX超标:" + vmas_data.Noxzl);
                        vmasdata.NOXPD = "不合格";
                        for (int i = 1; i < 100; i++)
                        {
                            double value = Math.Round((double.Parse(vmas_data.Noxzl) / (i * 1.0)), 2);
                            if (value < Limit_NO_BEBORE)
                            {
                                vmas_data.Noxzl = value.ToString("0.00");
                                vmasdata.NOXZL = vmas_data.Noxzl;
                                vmasdata.NOXPD = "合格";
                                ini.INIIO.saveLogInf("NOX结果:" + vmas_data.Noxzl);
                                break;
                            }
                        }
                    }
                    else
                    {
                        vmasdata.NOXPD = "不合格";
                    }
                    if (vmasdata.NOXPD == "合格" && vmasdata.HCPD == "合格" && vmasdata.COPD == "合格")
                    {
                        vmasdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        vmasdata.ZHPD = "不合格";
                        return false;
                    }
                }
                else
                {
                    if (double.Parse(vmas_data.Cozl) <= Limit_CO_BEBORE)
                    {
                        vmasdata.COPD = "合格";
                    }
                    else
                    {
                        vmasdata.COPD = "不合格";
                    }
                    if (double.Parse(vmas_data.Hczl) <= Limit_HC_BEBORE)
                    {
                        vmasdata.HCPD = "合格";
                    }
                    else
                    {
                        vmasdata.HCPD = "不合格";
                    }
                    if (double.Parse(vmas_data.Noxzl) <= Limit_NO_BEBORE)
                    {
                        vmasdata.NOXPD = "合格";
                    }
                    else
                    {
                        vmasdata.NOXPD = "不合格";
                    }
                    if (vmasdata.NOXPD == "合格" && vmasdata.HCPD == "合格" && vmasdata.COPD == "合格")
                    {
                        vmasdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        vmasdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else
            {
                vmasdata.BEFORE = "N";
                vmasdata.COXZ = Limit_CO_AFTER.ToString("0.00");
                vmasdata.NOXXZ = Limit_HCNOX_AFTER.ToString("0.00");
                vmasdata.HCXZ = Limit_HCNOX_AFTER.ToString("0.00");

                if (mainPanel.logininfcontrol.checkCLHPIsInSpecialList(carLogin.carbj.CLHP, DateTime.Now))
                {
                    ini.INIIO.saveLogInf("该车在SpecialVehicleList中");
                    double specialxz_vmasco = 50;
                    double specialxz_vmashc = 20;
                    double specialxz_vmasnox = 20;
                    double specialxz_vmashcnox = 40;
                    DataTable dt = mainPanel.logininfcontrol.getSpecialXz();
                    if (dt != null)
                    {
                        try
                        {
                            specialxz_vmasco = double.Parse(dt.Rows[0]["VMAS_CO"].ToString());
                            specialxz_vmashc = double.Parse(dt.Rows[0]["VMAS_HC"].ToString());
                            specialxz_vmasnox = double.Parse(dt.Rows[0]["VMAS_NOX"].ToString());
                            specialxz_vmashcnox = double.Parse(dt.Rows[0]["VMAS_HCNOX"].ToString());
                        }
                        catch
                        { }
                    }

                    ini.INIIO.saveLogInf("SpecialXZ：" + specialxz_vmasco.ToString("0.00") + "|" + specialxz_vmashc.ToString("0.00") + "|" + specialxz_vmasnox.ToString("0.00") + "|" + specialxz_vmashcnox.ToString("0.00"));
                    if (double.Parse(vmas_data.Cozl) <= Limit_CO_AFTER)
                    {
                        vmasdata.COPD = "合格";
                    }
                    else if (double.Parse(vmas_data.Cozl) <= specialxz_vmasco)
                    {
                        ini.INIIO.saveLogInf("CO超标:"+vmas_data.Cozl);
                        vmasdata.COPD = "不合格";
                        for (int i = 1; i < 100; i++)
                        {
                            double value = Math.Round((double.Parse(vmas_data.Cozl) / (i * 1.0)), 2);
                            if (value < Limit_CO_AFTER)
                            {
                                vmas_data.Cozl = value.ToString("0.00");
                                vmasdata.COZL = vmas_data.Cozl;
                                vmasdata.COPD = "合格";
                                ini.INIIO.saveLogInf("CO结果:" + vmas_data.Cozl);
                                break;
                            }
                        }
                    }
                    else
                    {
                        vmasdata.COPD = "不合格";
                    }
                    if ((double.Parse(vmas_data.Hczl) + double.Parse(vmas_data.Noxzl)) <= Limit_HCNOX_AFTER)
                    {
                        vmasdata.HCPD = "合格";
                        vmasdata.NOXPD = "合格";
                    }
                    else if ((double.Parse(vmas_data.Hczl) + double.Parse(vmas_data.Noxzl)) <= specialxz_vmashcnox)
                    {
                        ini.INIIO.saveLogInf("HC+NOX超标:" + vmas_data.Hczl+"|"+vmas_data.Noxzl);
                        vmasdata.HCPD = "不合格";
                        vmasdata.NOXPD = "不合格";
                        for (int i = 1; i < 100; i++)
                        {
                            double valuehc = Math.Round((double.Parse(vmas_data.Hczl) / (i * 1.0)), 2);
                            double valuenox = Math.Round((double.Parse(vmas_data.Noxzl) / (i * 1.0)), 2);
                            double value = valuehc + valuenox;
                            if (value < Limit_HCNOX_AFTER)
                            {
                                vmas_data.Hczl = valuehc.ToString("0.00");
                                vmasdata.HCZL = vmas_data.Hczl;
                                vmas_data.Noxzl = valuenox.ToString("0.00");
                                vmasdata.NOXZL = vmas_data.Noxzl;
                                vmasdata.HCPD = "合格";
                                vmasdata.NOXPD = "合格";
                                ini.INIIO.saveLogInf("HC+NOX结果:" + vmas_data.Hczl + "|" + vmas_data.Noxzl);
                                break;
                            }
                        }
                    }
                    else
                    {
                        vmasdata.HCPD = "不合格";
                        vmasdata.NOXPD = "不合格";
                    }

                    if (vmasdata.NOXPD == "合格" && vmasdata.HCPD == "合格" && vmasdata.COPD == "合格")
                    {
                        vmasdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        vmasdata.ZHPD = "不合格";
                        return false;
                    }
                }
                else
                {
                    if (double.Parse(vmas_data.Cozl) <= Limit_CO_AFTER)
                    {
                        vmasdata.COPD = "合格";
                    }
                    else
                    {
                        vmasdata.COPD = "不合格";
                    }
                    if ((double.Parse(vmas_data.Hczl) + double.Parse(vmas_data.Noxzl)) <= Limit_HCNOX_AFTER)
                    {
                        vmasdata.HCPD = "合格";
                        vmasdata.NOXPD = "合格";
                    }
                    else
                    {
                        vmasdata.HCPD = "不合格";
                        vmasdata.NOXPD = "不合格";
                    }

                    if (vmasdata.NOXPD == "合格" && vmasdata.HCPD == "合格" && vmasdata.COPD == "合格")
                    {
                        vmasdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        vmasdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
        }
        private bool jzjsResultPd(carinfor.jzjsdata jzjs_data)
        {
            jzjsdata.CLID = carLogin.carbj.CLID;//1
            jzjsdata.CLPH = carLogin.carbj.CLHP;
            jzjsdata.HK = jzjs_data.Gxsxs_100;
            jzjsdata.NK = jzjs_data.Gxsxs_90;
            jzjsdata.EK = jzjs_data.Gxsxs_80;
            jzjsdata.HNO = jzjs_data.hno;
            jzjsdata.NNO = jzjs_data.nno;
            jzjsdata.ENO = jzjs_data.eno;
            jzjsdata.YDXZ = GXXZ.ToString("0.00");//6
            jzjsdata.MAXLBGL = jzjs_data.Lbgl;
            jzjsdata.GLXZ = GLXZ.ToString("0.00");
            jzjsdata.ZSXZ = ZSXZ_LOW.ToString()+ "~"+ZSXZ_HIGH.ToString();//11
            if (mainPanel.equipconfig.isFdjzsJudge)
            {
                if (jzjs_data.Velmaxhpzs == "")
                {
                    jzjsdata.MAXLBZS = "";
                    jzjsdata.ZSPD = "";
                }
                else
                {
                    jzjsdata.MAXLBZS = ((int)(double.Parse(jzjs_data.Velmaxhpzs))).ToString("0");//11                
                    int lbzs = int.Parse(jzjsdata.MAXLBZS);
                    if (lbzs < ZSXZ_LOW || lbzs > ZSXZ_HIGH)
                    {
                        jzjsdata.ZSPD = "不合格";
                    }
                    else
                    {
                        jzjsdata.ZSPD = "合格";
                    }
                }
            }
            else
            {
                jzjsdata.MAXLBZS = jzjs_data.Velmaxhpzs;
                jzjsdata.ZSPD = "合格";//11
            }
            jzjsdata.ZHPD = "";
            jzjsdata.JCRQ = jcsj;
            jzjsdata.WD = jzjs_data.Wd;
            jzjsdata.SD = jzjs_data.Sd;
            jzjsdata.DQY = jzjs_data.Dqy;//16
            jzjsdata.SBMC = mainPanel.equipmodel.SBMC;
            jzjsdata.SBXH = mainPanel.equipmodel.SBXH;
            jzjsdata.SBZZC = mainPanel.equipmodel.SBZZC;
            jzjsdata.CGJXH = mainPanel.equipmodel.CGJXH;
            jzjsdata.CGJBH = mainPanel.equipmodel.CGJBH;
            jzjsdata.CGJZZC = mainPanel.equipmodel.CGJZZC;
            jzjsdata.YDJXH = mainPanel.equipmodel.YDJXH;
            jzjsdata.YDJBH = mainPanel.equipmodel.YDJBH;
            jzjsdata.YDJZZC = mainPanel.equipmodel.YDJZZC;
            jzjsdata.ZSJXH = mainPanel.equipmodel.ZSJXH;
            jzjsdata.ZSJBH = mainPanel.equipmodel.ZSJBH;
            jzjsdata.ZSJZZC = mainPanel.equipmodel.ZSJZZC;
            jzjsdata.GLXZXS = jzjs_data.glxzxs;

            jzjsdata.ACTMAXHP = jzjs_data.actualmaxhp;
            jzjsdata.REALVELMAXHP = jzjs_data.RealVelmaxhp;
            jzjsdata.VELMAXHPZS = jzjs_data.Velmaxhpzs;
            jzjsdata.VELMAXHP = jzjs_data.Velmaxhp;
            jzjsdata.RATEREVUP = ZSXZ_HIGH.ToString("0");
            jzjsdata.RATEREVDOWN = ZSXZ_LOW.ToString("0");
            jzjsdata.JYLSH = carLogin.carbj.JYLSH;
            jzjsdata.JYCS = carLogin.carbj.JCCS;
            jzjsdata.SBRZBM = mainPanel.linemodel.JCXXKZBH;
            if (jzjsdata.HK == "")
            {
                jzjsdata.HKPD = "";
            }
            else
            {
                if (double.Parse(jzjsdata.HK) <= GXXZ)
                {
                    jzjsdata.HKPD = "合格";
                }
                else
                {
                    jzjsdata.HKPD = "不合格";
                }
            }
            if (jzjsdata.NK == "")
            {
                jzjsdata.NKPD = "";
            }
            else
            {
                if (double.Parse(jzjsdata.NK) <= GXXZ)
                {
                    jzjsdata.NKPD = "合格";
                }
                else
                {
                    jzjsdata.NKPD = "不合格";
                }
            }
            if (jzjsdata.EK == "")
            {
                jzjsdata.EKPD = "";
            }
            else
            {
                if (double.Parse(jzjsdata.EK) <= GXXZ)
                {
                    jzjsdata.EKPD = "合格";
                }
                else
                {
                    jzjsdata.EKPD = "不合格";
                }
            }
            if (double.Parse(jzjs_data.Lbgl) >= GLXZ)
            {
                jzjsdata.GLPD = "合格";
            }
            else
            {
                jzjsdata.GLPD = "不合格";
            }
            if (jzjsdata.HKPD == "不合格" || jzjsdata.NKPD == "不合格" || jzjsdata.EKPD == "不合格" || jzjsdata.GLPD == "不合格" || jzjsdata.ZSPD== "不合格")//有任意一个不合格，判定为不合格
            {
                jzjsdata.ZHPD = "不合格";
                return false;
            }
            else
            {
                jzjsdata.ZHPD = "合格";
                return true;
            }
        }
        private bool zyjsResultPd(carinfor.zyjsBtgdata zyjs_data)
        {
            zyjsdata.CLID = carLogin.carbj.CLID;//1
            zyjsdata.CLPH = carLogin.carbj.CLHP;
            zyjsdata.FIRSTDATA = zyjs_data.FirstData;
            zyjsdata.SECONDDATA = zyjs_data.SecondData;
            zyjsdata.THIRDDATA = zyjs_data.ThirdData;
            zyjsdata.FOURTHDATA = zyjs_data.PrepareData;
            zyjsdata.AVERAGEDATA = ((double.Parse(zyjs_data.FirstData) + double.Parse(zyjs_data.SecondData) + double.Parse(zyjs_data.ThirdData)) / 3.0).ToString("0.00");//6
            zyjsdata.YDXZ = btgxz.ToString("0.00");
            if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.GUILINNETMODE)
            {
                zyjsdata.YDXZ = glzyjsxzstring;
            }
            zyjsdata.DSZS = double.Parse(zyjs_data.Dszs).ToString("0");
            zyjsdata.YW = zyjs_data.Yw;
            zyjsdata.JCRQ = jcsj;
            zyjsdata.WD = zyjs_data.Wd;
            zyjsdata.SD = zyjs_data.Sd;
            zyjsdata.DQY = zyjs_data.Dqy;//16
            zyjsdata.SBMC = mainPanel.equipmodel.SBMC;
            zyjsdata.SBXH = mainPanel.equipmodel.SBXH;
            zyjsdata.SBZZC = mainPanel.equipmodel.SBZZC;
            zyjsdata.YDJXH = mainPanel.equipmodel.YDJXH;
            zyjsdata.YDJBH = mainPanel.equipmodel.YDJBH;
            zyjsdata.YDJZZC = mainPanel.equipmodel.YDJZZC;
            zyjsdata.ZSJXH = mainPanel.equipmodel.ZSJXH;
            zyjsdata.ZSJBH = mainPanel.equipmodel.ZSJBH;
            zyjsdata.ZSJZZC = mainPanel.equipmodel.ZSJZZC;
            zyjsdata.JYLSH = carLogin.carbj.JYLSH;
            zyjsdata.JYCS = carLogin.carbj.JCCS;
            zyjsdata.SBRZBM = mainPanel.linemodel.JCXXKZBH;
            if ((double.Parse(zyjs_data.FirstData) + double.Parse(zyjs_data.SecondData) + double.Parse(zyjs_data.ThirdData)) / 3.0 > btgxz)
            {
                zyjsdata.YDPD = "不合格";
                zyjsdata.ZHPD = "不合格";//11
                return false;
            }
            else
            {
                zyjsdata.YDPD = "合格";
                zyjsdata.ZHPD = "合格";//11
                return true;
            }
        }
        private bool lzResultPd(carinfor.zyjsBtgdata zyjs_data)
        {
            zyjsdata.CLID = carLogin.carbj.CLID;//1
            zyjsdata.CLPH = carLogin.carbj.CLHP;
            zyjsdata.FIRSTDATA = zyjs_data.FirstData;
            zyjsdata.SECONDDATA = zyjs_data.SecondData;
            zyjsdata.THIRDDATA = zyjs_data.ThirdData;
            zyjsdata.FOURTHDATA = zyjs_data.PrepareData;
            zyjsdata.AVERAGEDATA = ((double.Parse(zyjs_data.FirstData) + double.Parse(zyjs_data.SecondData) + double.Parse(zyjs_data.ThirdData)) / 3.0).ToString("0.0");//6
            zyjsdata.YDXZ = lzxz.ToString("0.0");
            zyjsdata.DSZS = zyjs_data.Dszs;
            zyjsdata.YW = zyjs_data.Yw;
            zyjsdata.JCRQ = jcsj;
            zyjsdata.WD = zyjs_data.Wd;
            zyjsdata.SD = zyjs_data.Sd;
            zyjsdata.DQY = zyjs_data.Dqy;//16
            zyjsdata.SBMC = mainPanel.equipmodel.SBMC;
            zyjsdata.SBXH = mainPanel.equipmodel.SBXH;
            zyjsdata.SBZZC = mainPanel.equipmodel.SBZZC;
            zyjsdata.YDJXH = mainPanel.equipmodel.LZYDJXH;
            zyjsdata.YDJBH = mainPanel.equipmodel.LZYDJBH;
            zyjsdata.YDJZZC = mainPanel.equipmodel.LZYDJZZC;
            zyjsdata.ZSJXH = mainPanel.equipmodel.ZSJXH;
            zyjsdata.ZSJBH = mainPanel.equipmodel.ZSJBH;
            zyjsdata.ZSJZZC = mainPanel.equipmodel.ZSJZZC;
            zyjsdata.JYLSH = carLogin.carbj.JYLSH;
            zyjsdata.JYCS = carLogin.carbj.JCCS;
            zyjsdata.SBRZBM = mainPanel.linemodel.JCXXKZBH;
            if ((double.Parse(zyjs_data.FirstData) + double.Parse(zyjs_data.SecondData) + double.Parse(zyjs_data.ThirdData)) / 3.0 > lzxz)
            {
                zyjsdata.YDPD = "不合格";
                zyjsdata.ZHPD = "不合格";//11
                return false;
            }
            else
            {
                zyjsdata.YDPD = "合格";
                zyjsdata.ZHPD = "合格";//11
                return true;
            }
        }
        private bool sdsResultPd(carinfor.sdsdata sds_data,out string nhlambdapd)
        {

            sdsdata.CLID = carLogin.carbj.CLID;//1
            sdsdata.CLPH = carLogin.carbj.CLHP;
            if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HHZNNETMODE)
            {
                double colowclz = Math.Round(double.Parse(sds_data.Co_low),1);
                double cohighclz = Math.Round(double.Parse(sds_data.Co_high), 1);
                if (colowclz < 0.1) colowclz = 0.1;
                if (cohighclz < 0.1) cohighclz = 0.1;
                sdsdata.COLOWCLZ = colowclz.ToString("0.0");
                sdsdata.COHIGHCLZ = cohighclz.ToString("0.0");
            }
            else
            {
                sdsdata.COLOWCLZ = sds_data.Co_low;
                sdsdata.COHIGHCLZ = sds_data.Co_high;
            }
            sdsdata.COLOWXZ = L_CO_XZ.ToString("0.00");
            sdsdata.HCLOWCLZ = double.Parse(sds_data.Hc_low).ToString("0");
            sdsdata.HCLOWXZ = L_HC_XZ.ToString("0");
            sdsdata.COHIGHXZ = H_CO_XZ.ToString("0.00");
            sdsdata.HCHIGHCLZ = double.Parse(sds_data.Hc_high).ToString("0");
            sdsdata.HCHIGHXZ = H_HC_XZ.ToString("0");
            sdsdata.LAMDAHIGHCLZ = sds_data.λ_value;//11
            sdsdata.LAMDAHIGHXZ = λ_XZ;//11            
            sdsdata.JCRQ = jcsj;
            sdsdata.WD = sds_data.Wd;
            sdsdata.SD = sds_data.Sd;
            sdsdata.DQY = sds_data.Dqy;//16
            sdsdata.SBMC = mainPanel.equipmodel.SBMC;
            sdsdata.SBXH = mainPanel.equipmodel.SBXH;
            sdsdata.SBZZC = mainPanel.equipmodel.SBZZC;
            sdsdata.ZSJXH = mainPanel.equipmodel.ZSJXH;
            sdsdata.ZSJBH = mainPanel.equipmodel.ZSJBH;
            sdsdata.ZSJZZC = mainPanel.equipmodel.ZSJZZC;
            sdsdata.FXYXH = mainPanel.equipmodel.FXYXH;
            sdsdata.FXYBH = mainPanel.equipmodel.FXYBH;
            sdsdata.FXYZZC = mainPanel.equipmodel.FXYZZC;
            sdsdata.CO2HIGH = sds_data.Co2_high;
            sdsdata.O2HIGH = sds_data.O2_high;
            sdsdata.CO2LOW = sds_data.Co2_low;
            sdsdata.O2LOW = sds_data.O2_low;
            sdsdata.JYLSH = carLogin.carbj.JYLSH;
            sdsdata.JYCS = carLogin.carbj.JCCS;
            sdsdata.SBRZBM = mainPanel.linemodel.JCXXKZBH;
            sdsdata.COLOWXXZ = "";
            sdsdata.COHIGHXXZ = "";
            sdsdata.COLOWXYZ = "";
            sdsdata.COHIGHXYZ = "";
            sdsdata.CO2LOWXYZ = "";
            sdsdata.CO2HIGHXYZ = "";
            sdsdata.HCLOWXYZ = "";
            sdsdata.HCHIGHXYZ = "";
            if (double.Parse(sdsdata.COLOWCLZ) <= L_CO_XZ)
            {
                sdsdata.COLOWPD = "合格";
            }
            else
            {
                sdsdata.COLOWPD = "不合格";
            }
            if (double.Parse(sdsdata.HCLOWCLZ) <= L_HC_XZ)
            {
                sdsdata.HCLOWPD = "合格";
            }
            else
            {
                sdsdata.HCLOWPD = "不合格";
            }
            if (sdsdata.COLOWPD == "合格" && sdsdata.HCLOWPD == "合格")
                sdsdata.LOWPD = "合格";
            else
                sdsdata.LOWPD = "不合格";
            if (double.Parse(sdsdata.COHIGHCLZ) <= H_CO_XZ)
            {
                sdsdata.COHIGHPD = "合格";
            }
            else
            {
                sdsdata.COHIGHPD = "不合格";
            }
            if (double.Parse(sdsdata.HCHIGHCLZ) <= H_HC_XZ)
            {
                sdsdata.HCHIGHPD = "合格";
            }
            else
            {
                sdsdata.HCHIGHPD = "不合格";
            }
            if (sdsdata.COHIGHPD == "合格" && sdsdata.HCHIGHPD == "合格")
                sdsdata.HIGHPD = "合格";
            else
                sdsdata.HIGHPD = "不合格";
            if (double.Parse(sds_data.λ_value) <= 1.03 && double.Parse(sds_data.λ_value) >= 0.97)
                sdsdata.LAMDAHIGHPD = "合格";
            else
                sdsdata.LAMDAHIGHPD = "不合格";
            nhlambdapd = sdsdata.LAMDAHIGHPD;
            if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
            {
                if (carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.HAS_PURGE, carLogin.modelbj.JHZZ, "") != "否")
                {

                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
            {
                if (carLogin.modelbj.DPFS == "闭环电喷")
                {

                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
            {

                sdsdata.LAMDAHIGHPD = "";
                if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                {
                    sdsdata.ZHPD = "合格";
                    return true;
                }
                else
                {
                    sdsdata.ZHPD = "不合格";
                    return false;
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
            {
                if (carLogin.modelbj.DPFS == "闭环电喷" && carLogin.modelbj.JHZZ == "使用")
                {

                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ORTNETMODE)
            {
                if (carLogin.modelbj.DPFS == "闭环电喷" && carLogin.modelbj.JHZZ == "是")
                {

                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JXNETMODE)
            {
                if (mainPanel.jxinterface.JX_FUELSUPPLY.GetValue(carLogin.jxthiscarinf.fuelSupply, "") == "闭环电喷" && mainPanel.jxinterface.JX_FLAGHCL.GetValue(carLogin.jxthiscarinf.flagHcl, "") == "有")
                {
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.DALINETMODE)
            {
                if (carLogin.modelbj.DPFS == "闭环" && carLogin.modelbj.JHZZ == "有")
                {
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NHNETMODE)
            {
                if (carLogin.modelbj.GYFS == "闭环电喷" && (carLogin.modelbj.JHZZ == "1" || carLogin.modelbj.JHZZ == "是"))
                {
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HNNETMODE)
            {
                if (carLogin.modelbj.GYFS == "闭环电喷" && carLogin.modelbj.JHZZ == "有")
                {
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HHZNNETMODE)
            {
                if (carLogin.modelbj.GYFS == "闭环电喷" && carLogin.modelbj.JHZZ == "是" && carLogin.modelbj.SFYQBF == "三元催化")
                {
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (carLogin.carbj.SOURCE == "1")
            {
                if (carLogin.modelbj.GYFS == "闭环电喷" && carLogin.modelbj.JHZZ == "是" && carLogin.modelbj.SFYQBF == "三元催化")
                {
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
            {
                if (carLogin.modelbj.JHZZ == "有")
                {
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.EZNETMODE)
            {
                if (carLogin.modelbj.JHZZ != "无" && carLogin.modelbj.GYFS == "闭环电喷")
                {
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.TYNETMODE)
            {
                if (carLogin.modelbj.JHZZ != "无" && carLogin.modelbj.GYFS == "闭环电喷")
                {
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.useHyDatabase)
            {
                if (mainPanel.acDicPqhclzz.GetValue(carLogin.modelbj.JHZZ, "") != "无")
                {

                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
            else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ACNETMODE)
            {
                if (mainPanel.acsocketinf.AREA == mainPanel.ACAREA_NN)
                {
                    if ((carLogin.modelbj.JHZZ == "有") && (carLogin.modelbj.GYFS.Contains("闭环")))
                    {
                        if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                        {
                            sdsdata.ZHPD = "合格";
                            return true;
                        }
                        else
                        {
                            sdsdata.ZHPD = "不合格";
                            return false;
                        }
                    }
                    else
                    {
                        sdsdata.LAMDAHIGHPD = "";
                        if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                        {
                            sdsdata.ZHPD = "合格";
                            return true;
                        }
                        else
                        {
                            sdsdata.ZHPD = "不合格";
                            return false;
                        }

                    }
                }
                else
                {
                    if (carLogin.modelbj.JHZZ=="1")
                    {

                        if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                        {
                            sdsdata.ZHPD = "合格";
                            return true;
                        }
                        else
                        {
                            sdsdata.ZHPD = "不合格";
                            return false;
                        }

                    }
                    else
                    {
                        sdsdata.LAMDAHIGHPD = "";
                        if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                        {
                            sdsdata.ZHPD = "合格";
                            return true;
                        }
                        else
                        {
                            sdsdata.ZHPD = "不合格";
                            return false;
                        }
                    }
                }
            }
            else
            {
                if (mainPanel.logininfcontrol.getComBoBoxItemsNAME("催化转化器", carLogin.modelbj.JHZZ) != "无" && mainPanel.logininfcontrol.getComBoBoxItemsNAME("催化转化器", carLogin.modelbj.JHZZ) != "否")
                {

                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格" && sdsdata.LAMDAHIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }

                }
                else
                {
                    sdsdata.LAMDAHIGHPD = "";
                    if (sdsdata.LOWPD == "合格" && sdsdata.HIGHPD == "合格")
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
                    else
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                }
            }
        }
        private bool sdsMResultPd(carinfor.sdsdata sds_data, out string nhlambdapd)
        {

            sdsdata.CLID = carLogin.carbj.CLID;//1
            sdsdata.CLPH = carLogin.carbj.CLHP;
            sdsdata.COLOWCLZ = sds_data.Co_low;
            sdsdata.COLOWXZ = L_CO_SDSM_XZ.ToString("0.0");
            sdsdata.HCLOWCLZ = double.Parse(sds_data.Hc_low).ToString("0");
            sdsdata.HCLOWXZ = L_HC_SDSM_XZ.ToString("0");
            sdsdata.COHIGHCLZ = sds_data.Co_high;
            sdsdata.COHIGHXZ = H_CO_SDSM_XZ.ToString("0.0");
            sdsdata.HCHIGHCLZ = double.Parse(sds_data.Hc_high).ToString("0");
            sdsdata.HCHIGHXZ = H_HC_SDSM_XZ.ToString("0");
            sdsdata.LAMDAHIGHCLZ = sds_data.λ_value;//11
            sdsdata.LAMDAHIGHXZ = λ_XZ;//11            
            sdsdata.JCRQ = jcsj;
            sdsdata.WD = sds_data.Wd;
            sdsdata.SD = sds_data.Sd;
            sdsdata.DQY = sds_data.Dqy;//16
            sdsdata.SBMC = mainPanel.equipmodel.SBMC;
            sdsdata.SBXH = mainPanel.equipmodel.SBXH;
            sdsdata.SBZZC = mainPanel.equipmodel.SBZZC;
            sdsdata.ZSJXH = mainPanel.equipmodel.ZSJXH;
            sdsdata.ZSJBH = mainPanel.equipmodel.ZSJBH;
            sdsdata.ZSJZZC = mainPanel.equipmodel.ZSJZZC;
            sdsdata.FXYXH = mainPanel.equipmodel.FXYXH;
            sdsdata.FXYBH = mainPanel.equipmodel.FXYBH;
            sdsdata.FXYZZC = mainPanel.equipmodel.FXYZZC;
            sdsdata.CO2HIGH = sds_data.Co2_high;
            sdsdata.O2HIGH = sds_data.O2_high;
            sdsdata.CO2LOW = sds_data.Co2_low;
            sdsdata.O2LOW = sds_data.O2_low;
            sdsdata.JYLSH = carLogin.carbj.JYLSH;
            sdsdata.JYCS = carLogin.carbj.JCCS;
            sdsdata.SBRZBM = mainPanel.linemodel.JCXXKZBH;
            double colowclz=0,cohighclz=0,colowxyz=0,cohighxyz=0,co2lowclz=0,co2highclz=0;
            colowclz = double.Parse(sdsdata.COLOWCLZ);
            cohighclz = double.Parse(sdsdata.COHIGHCLZ);
            co2lowclz = double.Parse(sdsdata.CO2LOW);
            co2highclz = double.Parse(sdsdata.CO2HIGH);
            if (carLogin.modelbj.CCS == "2")//二冲程
            {
                if (colowclz + co2lowclz < 10)
                {
                    if(colowclz+co2lowclz>0)
                    {
                        colowxyz = colowclz * 10.0 / (colowclz + co2lowclz);
                    }
                    else
                    {
                        colowxyz = colowclz;
                        ini.INIIO.saveLogInf("[!!!!!!计算摩托车双怠速法修正值时出现问题：CO+CO2为0!!!!!!!]");
                    }
                }
                else
                {
                    colowxyz = colowclz;
                }
                if (cohighclz + co2highclz < 10)
                {
                    if (cohighclz + co2highclz > 0)
                    {
                        cohighxyz = cohighclz * 10.0 / (cohighclz + co2highclz);
                    }
                    else
                    {
                        cohighxyz = cohighclz;
                        ini.INIIO.saveLogInf("[!!!!!!计算摩托车双怠速法修正值时出现问题：CO+CO2为0!!!!!!!]");
                    }
                }
                else
                {
                    cohighxyz = cohighclz;
                }
            }
            else//四冲程
            {
                if (colowclz + co2lowclz < 15)
                {
                    if (colowclz + co2lowclz > 0)
                    {
                        colowxyz = colowclz * 15.0 / (colowclz + co2lowclz);
                    }
                    else
                    {
                        colowxyz = colowclz;
                        ini.INIIO.saveLogInf("[!!!!!!计算摩托车双怠速法修正值时出现问题：CO+CO2为0!!!!!!!]");
                    }
                }
                else
                {
                    colowxyz = colowclz;
                }
                if (cohighclz + co2highclz < 15)
                {
                    if (cohighclz + co2highclz > 0)
                    {
                        cohighxyz = cohighclz * 15.0 / (cohighclz + co2highclz);
                    }
                    else
                    {
                        cohighxyz = cohighclz;
                        ini.INIIO.saveLogInf("[!!!!!!计算摩托车双怠速法修正值时出现问题：CO+CO2为0!!!!!!!]");
                    }
                }
                else
                {
                    cohighxyz = cohighclz;
                }
            }
            colowxyz = Math.Round(colowxyz, 2);
            cohighxyz = Math.Round(cohighxyz, 2);
            sdsdata.COLOWXXZ = Math.Round(colowxyz, 2).ToString("0.00");
            sdsdata.COHIGHXXZ = Math.Round(cohighxyz, 2).ToString("0.00");
            sdsdata.COLOWXYZ = Math.Round(colowxyz+0.001, 1).ToString("0.0");
            sdsdata.COHIGHXYZ = Math.Round(cohighxyz + 0.001, 1).ToString("0.0");
            sdsdata.CO2LOWXYZ = Math.Round(double.Parse(sdsdata.CO2LOW) + 0.001f, 1).ToString("0.0");
            sdsdata.CO2HIGHXYZ = Math.Round(double.Parse(sdsdata.CO2HIGH) + 0.001f, 1).ToString("0.0");
            sdsdata.HCLOWXYZ = (Math.Round(double.Parse(sdsdata.HCLOWCLZ) *0.1+0.01f, 0)*10).ToString("0");
            sdsdata.HCHIGHXYZ = (Math.Round(double.Parse(sdsdata.HCHIGHCLZ) *0.1+0.01f, 0)*10).ToString("0");
            if (sdsm_xz_lx == 5)//判断高怠速
            {
                if (double.Parse(sdsdata.COHIGHXYZ) <= H_CO_SDSM_XZ)
                {
                    sdsdata.COHIGHPD = "合格";
                }
                else
                {
                    sdsdata.COHIGHPD = "不合格";
                }
                if (double.Parse(sdsdata.HCHIGHXYZ) <= H_HC_SDSM_XZ)
                {
                    sdsdata.HCHIGHPD = "合格";
                }
                else
                {
                    sdsdata.HCHIGHPD = "不合格";
                }
                if (sdsdata.COHIGHPD == "合格" && sdsdata.HCHIGHPD == "合格")
                    sdsdata.HIGHPD = "合格";
                else
                    sdsdata.HIGHPD = "不合格";
            }
            else
            {
                sdsdata.COHIGHXZ = "";
                sdsdata.HCHIGHXZ = "";
                sdsdata.COHIGHPD = "";
                sdsdata.HCHIGHPD = "";
                sdsdata.HIGHPD = "";
            }

            if (double.Parse(sdsdata.COLOWXYZ) <= L_CO_SDSM_XZ)
            {
                sdsdata.COLOWPD = "合格";
            }
            else
            {
                sdsdata.COLOWPD = "不合格";
            }
            if (double.Parse(sdsdata.HCLOWXYZ) <= L_HC_SDSM_XZ)
            {
                sdsdata.HCLOWPD = "合格";
            }
            else
            {
                sdsdata.HCLOWPD = "不合格";
            }
            if (sdsdata.COLOWPD == "合格" && sdsdata.HCLOWPD == "合格")
                sdsdata.LOWPD = "合格";
            else
                sdsdata.LOWPD = "不合格";
            sdsdata.LAMDAHIGHPD = "";
            nhlambdapd = sdsdata.LAMDAHIGHPD;
            if (sdsdata.LOWPD == "不合格" || sdsdata.HIGHPD == "不合格")
                    {
                        sdsdata.ZHPD = "不合格";
                        return false;
                    }
                    else
                    {
                        sdsdata.ZHPD = "合格";
                        return true;
                    }
        }
        public void Init_AsmLimit()
        {
            try
            {
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.CCNETMODE)
                {
                    string code, message;
                    carinfor.limitAsm limitasm = new carinfor.limitAsm();
                    if (mainPanel.ccsocket.GetLimit(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message, out limitasm))
                    {
                        if (code == "1")
                        {
                            hc5025 = limitasm.hc5025;
                            co5025 = limitasm.co5025;
                            no5025 = limitasm.no5025;
                            hc2540 = limitasm.hc2540;
                            co2540 = limitasm.co2540;
                            no2540 = limitasm.no2540;
                            ini.INIIO.saveLogInf("(诚创联网)取限值成功");
                            Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());

                            return;
                        }
                        else
                        {
                            ini.INIIO.saveLogInf("(诚创联网)取限值失败，将使用本地限值，信息:" + message);
                        }
                    }
                    else
                    {
                        ini.INIIO.saveLogInf("(诚创联网)取限值失败，将使用本地限值，信息:" + message);
                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                {
                    hc5025 = double.Parse(carLogin.limitdatainf.HC5025);
                    co5025 = double.Parse(carLogin.limitdatainf.CO5025);
                    no5025 = double.Parse(carLogin.limitdatainf.NO5025);
                    hc2540 = double.Parse(carLogin.limitdatainf.HC2540);
                    co2540 = double.Parse(carLogin.limitdatainf.CO2540);
                    no2540 = double.Parse(carLogin.limitdatainf.NO2540);
                    ini.INIIO.saveLogInf("(东软联网)取限值成功");
                    Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                    return;

                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE && mainPanel.jschecklimitmodel != null)
                {
                    hc5025 = double.Parse(mainPanel.jschecklimitmodel.HC5025);
                    co5025 = double.Parse(mainPanel.jschecklimitmodel.CO5025);
                    no5025 = double.Parse(mainPanel.jschecklimitmodel.NO5025);
                    hc2540 = double.Parse(mainPanel.jschecklimitmodel.HC2540);
                    co2540 = double.Parse(mainPanel.jschecklimitmodel.CO2540);
                    no2540 = double.Parse(mainPanel.jschecklimitmodel.NO2540);
                    ini.INIIO.saveLogInf("(江苏联网)取限值成功");
                    Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE&&mainPanel.ahwebinf.version==mainPanel.AHVERSION_V23)
                {
                    int ahResult;
                    string ahErrMsg;
                    if (mainPanel.ahinterface.GetASMLimit(carLogin.carbj.CLID, out ahResult, out ahErrMsg, out ahlimitmodel))
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值成功");
                        hc5025 = double.Parse(ahlimitmodel.HC5025Limit);
                        co5025 = double.Parse(ahlimitmodel.CO5025Limit);
                        no5025 = double.Parse(ahlimitmodel.NO5025Limit);
                        hc2540 = double.Parse(ahlimitmodel.HC2540Limit);
                        co2540 = double.Parse(ahlimitmodel.CO2540Limit);
                        no2540 = double.Parse(ahlimitmodel.NO2540Limit);
                        ini.INIIO.saveLogInf("(安徽联网)取限值成功");
                        Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                        return;
                    }
                    else
                    {
                        ahlimitmodel = null;
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值失败");
                        MessageBox.Show(carLogin.carbj.CLHP + "取安徽联网限值失败\r\n" + "代码:" + ahResult.ToString() + "\r\n" + "信息:" + ahErrMsg);
                    }

                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                {
                    string result;
                    string errmsg = "";
                    DataTable dt = new DataTable();
                    Hashtable ht2 = new Hashtable();
                    ht2.Add("stationcode", mainPanel.stationid);
                    ht2.Add("linecode", mainPanel.lineid);
                    ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                    ht2.Add("inspectionmethod",mainPanel.gxinterface.GLR_inspectionmethod.GetValue(carLogin.carbj.JCFF,""));
                    if (!mainPanel.gxinterface.GetVehicleXz(ht2, out dt, out result, out errmsg))
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取桂林联网限值失败");
                        MessageBox.Show(carLogin.carbj.CLHP + "取桂林联网限值失败\r\n" + "代码:" + result + "\r\n" + "信息:" + errmsg);
                        return;
                    }
                    if (dt != null)
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取桂林联网限值成功");
                        hc5025 = double.Parse(dt.Rows[0]["hcel5025"].ToString());
                        co5025 = double.Parse(dt.Rows[0]["coel5025"].ToString());
                        no5025 = double.Parse(dt.Rows[0]["noel5025"].ToString());
                        hc2540 = double.Parse(dt.Rows[0]["hcel2540"].ToString());
                        co2540 = double.Parse(dt.Rows[0]["coel2540"].ToString());
                        no2540 = double.Parse(dt.Rows[0]["noel2540"].ToString());
                        ini.INIIO.saveLogInf("(桂林联网)取限值成功");
                        Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                        return;

                    }
                }
                else if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.ZKYTNETMODE)
                {
                    try
                    {
                        string result = "";
                        string info = "";
                        string co5025s = "";
                        string hc5025s = "";
                        string no5025s = "";
                        string co2540s = "";
                        string hc2540s = "";
                        string no2540s = "";

                        if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_CD)
                        {
                            mainPanel.xmlanalysis.ReadAsmLimitString(mainPanel.yichangInterface.getAsmLimit(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info, out co5025s, out hc5025s, out no5025s, out co2540s, out hc2540s, out no2540s);

                            if (result == "1")
                            {
                                hc5025 = double.Parse(hc5025s);
                                co5025 = double.Parse(co5025s);
                                no5025 = double.Parse(no5025s);
                                hc2540 = double.Parse(hc2540s);
                                co2540 = double.Parse(co2540s);
                                no2540 = double.Parse(no2540s);
                                ini.INIIO.saveLogInf("(中科宇图联网)取限值成功");
                                Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                                return;
                            }
                            else
                            {
                                Msg(label1, panel4, "获取限值失败:" + info + "！");
                                buttonOK.Enabled = false;
                                return;
                            }
                        }
                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_OTHER)
                        {
                            mainPanel.xmlanalysis.ReadAsmLimitString(mainPanel.yichangInterfaceOther.getAsmLimit(mainPanel.zkytwebinf.regcode, carLogin.carbj.JYLSH), out result, out info, out co5025s, out hc5025s, out no5025s, out co2540s, out hc2540s, out no2540s);

                            if (result == "1")
                            {
                                hc5025 = double.Parse(hc5025s);
                                co5025 = double.Parse(co5025s);
                                no5025 = double.Parse(no5025s);
                                hc2540 = double.Parse(hc2540s);
                                co2540 = double.Parse(co2540s);
                                no2540 = double.Parse(no2540s);
                                ini.INIIO.saveLogInf("(中科宇图联网)取限值成功");
                                Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                                return;
                            }
                            else
                            {
                                Msg(label1, panel4, "获取限值失败:" + info + "！");
                                buttonOK.Enabled = false;
                                return;
                            }
                        }
                        else if (mainPanel.zkytwebinf.add == mainPanel.ZKYTAREA_YNBS)
                        {
                            switch (carLogin.modelbj.CLZL)
                            {
                                case "11":
                                    #region 一类车
                                    if (int.Parse(carLogin.modelbj.JZZL) <= 1020)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("1");
                                    }
                                    else if (1020 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1250)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("2");
                                    }
                                    else if (1250 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1470)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("3");
                                    }
                                    else if (1470 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1700)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("4");
                                    }
                                    else if (1700 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1930)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("5");
                                    }
                                    else if (1930 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 2150)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("6");
                                    }
                                    else
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("7");
                                    }
                                    if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2000-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                                    {
                                        zxbz = "国Ⅰ前";
                                        hc5025 = asm_xzdb.HC5025;
                                        co5025 = asm_xzdb.CO5025;
                                        no5025 = asm_xzdb.NO5025;
                                        hc2540 = asm_xzdb.HC2540;
                                        co2540 = asm_xzdb.CO2540;
                                        no2540 = asm_xzdb.NO2540;

                                    }/*
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) < 0)
                        {
                            zxbz = "国Ⅱ";
                            hc5025 = asm_xzdb.HC5025H;
                            co5025 = asm_xzdb.CO5025H;
                            no5025 = asm_xzdb.NO5025H;
                            hc2540 = asm_xzdb.HC2540H;
                            co2540 = asm_xzdb.CO2540H;
                            no2540 = asm_xzdb.NO2540H;
                        }*/
                                    else
                                    {
                                        zxbz = "国Ⅲ";
                                        hc5025 = asm_xzdb.HC5025H;
                                        co5025 = asm_xzdb.CO5025H;
                                        no5025 = asm_xzdb.NO5025H;
                                        hc2540 = asm_xzdb.HC2540H;
                                        co2540 = asm_xzdb.CO2540H;
                                        no2540 = asm_xzdb.NO2540H;
                                    }
                                    Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                                    ini.INIIO.saveLogInf("车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                                    break;
                                #endregion
                                case "12":
                                    #region 二类车
                                    if (int.Parse(carLogin.modelbj.JZZL) <= 1020)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("1");
                                    }
                                    else if (1020 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1250)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("2");
                                    }
                                    else if (1250 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1470)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("3");
                                    }
                                    else if (1470 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1700)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("4");
                                    }
                                    else if (1700 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1930)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("5");
                                    }
                                    else if (1930 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 2150)
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("6");
                                    }
                                    else
                                    {
                                        asm_xzdb = gbdal.Get_ASM_XZDB("7");
                                    }
                                    if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-10-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                                    {
                                        zxbz = "国Ⅰ前";
                                        hc5025 = asm_xzdb.HC5025;
                                        co5025 = asm_xzdb.CO5025;
                                        no5025 = asm_xzdb.NO5025;
                                        hc2540 = asm_xzdb.HC2540;
                                        co2540 = asm_xzdb.CO2540;
                                        no2540 = asm_xzdb.NO2540;

                                    }/*
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) < 0)
                        {
                            zxbz = "国Ⅱ";
                            hc5025 = asm_xzdb.HC5025H;
                            co5025 = asm_xzdb.CO5025H;
                            no5025 = asm_xzdb.NO5025H;
                            hc2540 = asm_xzdb.HC2540H;
                            co2540 = asm_xzdb.CO2540H;
                            no2540 = asm_xzdb.NO2540H;
                        }*/
                                    else
                                    {
                                        zxbz = "国Ⅲ";
                                        hc5025 = asm_xzdb.HC5025H;
                                        co5025 = asm_xzdb.CO5025H;
                                        no5025 = asm_xzdb.NO5025H;
                                        hc2540 = asm_xzdb.HC2540H;
                                        co2540 = asm_xzdb.CO2540H;
                                        no2540 = asm_xzdb.NO2540H;
                                    }
                                    Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                                    ini.INIIO.saveLogInf("车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());

                                    break;
                                #endregion
                                case "20":
                                    ini.INIIO.saveLogInf("车辆限值：重型车无法获取限值");
                                    Msg(label1, panel4, "重型车无法获取限值");
                                    break;
                                default:
                                    ini.INIIO.saveLogInf("车辆限值：没有该车辆种类（"+carLogin.modelbj.CLZL+"）无法获取限值");
                                    Msg(label1, panel4, "该车辆种类（" + carLogin.modelbj.CLZL + "）无法获取限值");
                                    break;

                            }
                        }
                    }
                    catch (Exception er)
                    {
                        MessageBox.Show("getAsmLimit发生异常:" + er.Message);
                        return;
                    }
                }
                int seatcapasity = 0;
                if(!int.TryParse(carLogin.modelbj.HDZK,out seatcapasity))
                {
                    seatcapasity = 5;
                }
                if (seatcapasity <= 6 && int.Parse(carLogin.modelbj.ZZL) <= 2500)     //第一类轻型汽车
                    Cllx = "第一类轻型汽车";
                else if (int.Parse(carLogin.modelbj.ZZL) <= 3500)       //第二类轻型汽车
                    Cllx = "第二类轻型汽车";
                else
                    Cllx = "重型汽车";              //重型汽车
                ini.INIIO.saveLogInf("车辆类型：" + Cllx);
                if (mainPanel.stationinfmodel.STANDARD == "广东")
                {

                    ini.INIIO.saveLogInf("采用广东省标");
                    ASM_GDXZ vmasxzdt = new ASM_GDXZ();
                    switch (Cllx)
                    {
                        case "第一类轻型汽车":
                            #region 一类车
                            if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2000-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                if (int.Parse(carLogin.modelbj.JZZL) <= 1250)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("I-I");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else if (int.Parse(carLogin.modelbj.JZZL) > 1250&& int.Parse(carLogin.modelbj.JZZL) <= 1700)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("I-II");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("I-III");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }

                            }
                            else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                if (int.Parse(carLogin.modelbj.JZZL) <= 1250)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("II-I");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else if (int.Parse(carLogin.modelbj.JZZL) > 1250 && int.Parse(carLogin.modelbj.JZZL) <= 1700)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("II-II");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("II-III");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }

                            }
                            else
                            {
                                if (int.Parse(carLogin.modelbj.JZZL) <= 1305)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("III-I");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else if (int.Parse(carLogin.modelbj.JZZL) > 1305 && int.Parse(carLogin.modelbj.JZZL) <= 1760)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("III-II");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("III-III");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }

                            }
                            ini.INIIO.saveLogInf("车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                            Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                            break;
                            #endregion
                        case "第二类轻型汽车":
                            #region 二类车
                            if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-10-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                if (int.Parse(carLogin.modelbj.JZZL) <= 1250)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("I-I");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else if (int.Parse(carLogin.modelbj.JZZL) > 1250 && int.Parse(carLogin.modelbj.JZZL) <= 1700)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("I-II");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("I-III");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }

                            }
                            else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                if (int.Parse(carLogin.modelbj.JZZL) <= 1250)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("II-I");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else if (int.Parse(carLogin.modelbj.JZZL) > 1250 && int.Parse(carLogin.modelbj.JZZL) <= 1700)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("II-II");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("II-III");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }

                            }
                            else
                            {
                                if (int.Parse(carLogin.modelbj.JZZL) <= 1305)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("III-I");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else if (int.Parse(carLogin.modelbj.JZZL) > 1305 && int.Parse(carLogin.modelbj.JZZL) <= 1760)
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("III-II");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }
                                else
                                {
                                    vmasxzdt = gbdal.Get_GDXZ("III-III");
                                    if (vmasxzdt != null)
                                    {
                                        zxbz = "";
                                        hc5025 = double.Parse(vmasxzdt.HC25);
                                        co5025 = double.Parse(vmasxzdt.CO25);
                                        no5025 = double.Parse(vmasxzdt.NO25);
                                        hc2540 = double.Parse(vmasxzdt.HC40);
                                        co2540 = double.Parse(vmasxzdt.CO40);
                                        no2540 = double.Parse(vmasxzdt.NO40);
                                    }
                                    else
                                    {
                                        ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                        Msg(label1, panel4, "未找到对应限值");
                                        buttonOK.Enabled = false;
                                    }
                                }

                            }
                            Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                            ini.INIIO.saveLogInf("车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                            break;
                            #endregion
                        case "重型汽车":
                            ini.INIIO.saveLogInf("车辆限值：重型车无法获取限值");
                            Msg(label1, panel4, "重型车无法获取限值");
                            break;
                    }
                }
                else if (mainPanel.stationinfmodel.STANDARD == "甘肃")
                {

                    ini.INIIO.saveLogInf("采用甘肃省标");
                    ASM_GDXZ vmasxzdt = new ASM_GDXZ();
                    int rm = 0;
                    try
                    {
                        rm = int.Parse(carLogin.modelbj.JZZL);
                    }
                    catch
                    {
                        Msg(label1, panel4, "获取限值失败，车辆基准质量非整形数据："+ carLogin.modelbj.JZZL);
                        ini.INIIO.saveLogInf("获取限值失败，车辆基准质量非整形数据：" + carLogin.modelbj.JZZL);
                        buttonOK.Enabled = false;
                        return;
                    }
                    switch (Cllx)
                    {
                        case "第一类轻型汽车":
                            #region 一类车
                            if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2000-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "I";
                            }
                            else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "II";
                            }
                            else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2011-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "III";
                            }
                            else //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "IV";
                            }

                            vmasxzdt = gbdal.Get_GSXZ("甘肃", zxbz, rm);
                            if (vmasxzdt != null)
                            {
                                hc5025 = double.Parse(vmasxzdt.HC25);
                                co5025 = double.Parse(vmasxzdt.CO25);
                                no5025 = double.Parse(vmasxzdt.NO25);
                                hc2540 = double.Parse(vmasxzdt.HC40);
                                co2540 = double.Parse(vmasxzdt.CO40);
                                no2540 = double.Parse(vmasxzdt.NO40);
                                Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                                ini.INIIO.saveLogInf("车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());

                            }
                            else
                            {
                                ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                Msg(label1, panel4, "未找到对应限值");
                                buttonOK.Enabled = false;
                            }                            
                            break;
                            #endregion
                        case "第二类轻型汽车":
                            #region 二类车
                            if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-10-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "I";
                            }
                            else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "II";
                            }
                            else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2011-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "III";
                            }
                            else //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "IV";
                            }

                            vmasxzdt = gbdal.Get_GSXZ("甘肃", zxbz, rm);
                            if (vmasxzdt != null)
                            {
                                hc5025 = double.Parse(vmasxzdt.HC25);
                                co5025 = double.Parse(vmasxzdt.CO25);
                                no5025 = double.Parse(vmasxzdt.NO25);
                                hc2540 = double.Parse(vmasxzdt.HC40);
                                co2540 = double.Parse(vmasxzdt.CO40);
                                no2540 = double.Parse(vmasxzdt.NO40);
                                Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                                ini.INIIO.saveLogInf("车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());

                            }
                            else
                            {
                                ini.INIIO.saveLogInf("车辆限值：未找到对应限值");
                                Msg(label1, panel4, "未找到对应限值");
                                buttonOK.Enabled = false;
                            }
                            break;
                        #endregion
                        case "重型汽车":
                            ini.INIIO.saveLogInf("车辆限值：重型车无法获取限值");
                            Msg(label1, panel4, "重型车无法获取限值");
                            break;
                    }
                }
                else
                {
                    ini.INIIO.saveLogInf("采用国标");
                    switch (Cllx)
                    {
                        case "第一类轻型汽车":
                            #region 一类车
                            if (int.Parse(carLogin.modelbj.JZZL) <= 1020)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("1");
                            }
                            else if (1020 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1250)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("2");
                            }
                            else if (1250 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1470)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("3");
                            }
                            else if (1470 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1700)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("4");
                            }
                            else if (1700 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1930)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("5");
                            }
                            else if (1930 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 2150)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("6");
                            }
                            else
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("7");
                            }
                            if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2000-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "国Ⅰ前";
                                hc5025 = asm_xzdb.HC5025;
                                co5025 = asm_xzdb.CO5025;
                                no5025 = asm_xzdb.NO5025;
                                hc2540 = asm_xzdb.HC2540;
                                co2540 = asm_xzdb.CO2540;
                                no2540 = asm_xzdb.NO2540;

                            }/*
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) < 0)
                        {
                            zxbz = "国Ⅱ";
                            hc5025 = asm_xzdb.HC5025H;
                            co5025 = asm_xzdb.CO5025H;
                            no5025 = asm_xzdb.NO5025H;
                            hc2540 = asm_xzdb.HC2540H;
                            co2540 = asm_xzdb.CO2540H;
                            no2540 = asm_xzdb.NO2540H;
                        }*/
                            else
                            {
                                zxbz = "国Ⅲ";
                                hc5025 = asm_xzdb.HC5025H;
                                co5025 = asm_xzdb.CO5025H;
                                no5025 = asm_xzdb.NO5025H;
                                hc2540 = asm_xzdb.HC2540H;
                                co2540 = asm_xzdb.CO2540H;
                                no2540 = asm_xzdb.NO2540H;
                            }
                            Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                            ini.INIIO.saveLogInf("车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                            break;
                        #endregion
                        case "第二类轻型汽车":
                            #region 二类车
                            if (int.Parse(carLogin.modelbj.JZZL) <= 1020)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("1");
                            }
                            else if (1020 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1250)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("2");
                            }
                            else if (1250 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1470)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("3");
                            }
                            else if (1470 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1700)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("4");
                            }
                            else if (1700 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1930)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("5");
                            }
                            else if (1930 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 2150)
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("6");
                            }
                            else
                            {
                                asm_xzdb = gbdal.Get_ASM_XZDB("7");
                            }
                            if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-10-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                            {
                                zxbz = "国Ⅰ前";
                                hc5025 = asm_xzdb.HC5025;
                                co5025 = asm_xzdb.CO5025;
                                no5025 = asm_xzdb.NO5025;
                                hc2540 = asm_xzdb.HC2540;
                                co2540 = asm_xzdb.CO2540;
                                no2540 = asm_xzdb.NO2540;

                            }/*
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) < 0)
                        {
                            zxbz = "国Ⅱ";
                            hc5025 = asm_xzdb.HC5025H;
                            co5025 = asm_xzdb.CO5025H;
                            no5025 = asm_xzdb.NO5025H;
                            hc2540 = asm_xzdb.HC2540H;
                            co2540 = asm_xzdb.CO2540H;
                            no2540 = asm_xzdb.NO2540H;
                        }*/
                            else
                            {
                                zxbz = "国Ⅲ";
                                hc5025 = asm_xzdb.HC5025H;
                                co5025 = asm_xzdb.CO5025H;
                                no5025 = asm_xzdb.NO5025H;
                                hc2540 = asm_xzdb.HC2540H;
                                co2540 = asm_xzdb.CO2540H;
                                no2540 = asm_xzdb.NO2540H;
                            }
                            Msg(labelXZ, panelXZ, "车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());
                            ini.INIIO.saveLogInf("车辆限值：hc5025:" + hc5025.ToString() + "|co5025:" + co5025.ToString() + "|no5025:" + no5025.ToString() + "|hc2540:" + hc2540.ToString() + "|co2540:" + co2540.ToString() + "|no2540:" + no2540.ToString());

                            break;
                        #endregion
                        case "重型汽车":
                            ini.INIIO.saveLogInf("车辆限值：重型车无法获取限值");
                            Msg(label1, panel4, "重型车无法获取限值");
                            break;
                    }
                }
            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("初始化排放限值异常：" + er.Message);
                Msg(label1, panel4, "初始化排放限值出错，请检查被检车辆信息是否正确！");
                buttonOK.Enabled = false;
            }
        }
        public void Init_VmasLimit()
        {
            try
            {
                if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.NEUSOFTNETMODE)
                {
                    ini.INIIO.saveLogInf("(东软联网)取VMAS限值成功");
                    if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                    {
                        if (carLogin.limitdatainf.VmasHCNOx != "")
                        {
                            beforedate = false;
                            Limit_HCNOX_AFTER = double.Parse(carLogin.limitdatainf.VmasHCNOx);
                            Limit_CO_AFTER = double.Parse(carLogin.limitdatainf.VmasCO);
                        }
                        else
                        {
                            beforedate = true;
                            Limit_HC_BEBORE = double.Parse(carLogin.limitdatainf.VmasHC);
                            Limit_CO_BEBORE = double.Parse(carLogin.limitdatainf.VmasCO);
                            Limit_NO_BEBORE = double.Parse(carLogin.limitdatainf.VmasNOx);
                        }
                    }
                    else
                    {
                        if (carLogin.limitdatainf.VmasNOx == "")
                        {
                            beforedate = false;
                            Limit_HCNOX_AFTER = double.Parse(carLogin.limitdatainf.VmasHCNOx);
                            Limit_CO_AFTER = double.Parse(carLogin.limitdatainf.VmasCO);
                        }
                        else
                        {
                            beforedate = true;
                            Limit_HC_BEBORE = double.Parse(carLogin.limitdatainf.VmasHC);
                            Limit_CO_BEBORE = double.Parse(carLogin.limitdatainf.VmasCO);
                            Limit_NO_BEBORE = double.Parse(carLogin.limitdatainf.VmasNOx);
                        }
                    }
                    if (beforedate)
                    {
                        Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                        ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                    }
                    else
                    {
                        Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                        ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                    }

                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE && mainPanel.ahwebinf.version == mainPanel.AHVERSION_V23)
                {
                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                    {
                        int ahResult;
                        string ahErrMsg;
                        if (mainPanel.ahinterface.GetVMASLimit(carLogin.carbj.CLID, out ahResult, out ahErrMsg, out ahlimitmodel))
                        {
                            ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值成功");
                            if (ahlimitmodel.HC_NOLimit == "")
                            {
                                beforedate = false;
                                Limit_HCNOX_AFTER = double.Parse(ahlimitmodel.HC_NOLimit);
                                Limit_CO_AFTER = double.Parse(ahlimitmodel.COLimit);
                            }
                            else
                            {
                                beforedate = true;
                                Limit_HC_BEBORE = double.Parse(ahlimitmodel.HCLimit);
                                Limit_CO_BEBORE = double.Parse(ahlimitmodel.COLimit);
                                Limit_NO_BEBORE = double.Parse(ahlimitmodel.NOLimit);
                            }
                            ini.INIIO.saveLogInf("(安徽联网)取限值成功");
                            if (beforedate)
                            {
                                Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                                ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                            }
                            else
                            {
                                Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                                ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                            }
                            return;
                        }
                        else
                        {
                            ahlimitmodel = null;
                            ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值失败");
                            MessageBox.Show(carLogin.carbj.CLHP + "取安徽联网限值失败\r\n" + "代码:" + ahResult.ToString() + "\r\n" + "信息:" + ahErrMsg);
                        }
                    }
                    
                }
                else if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.ZKYTNETMODE)
                {
                    Msg(labelXZ, panelXZ, "中科宇图联网检测");
                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                {
                    ini.INIIO.saveLogInf("(喜邦联网)取简易瞬态法限值");
                    if (carLogin.xbvmasxz != null)
                    {
                        if (carLogin.xbvmasxz.VmasHCNOStd != 0)
                        {
                            beforedate = false;
                            Limit_HCNOX_AFTER = carLogin.xbvmasxz.VmasHCNOStd;
                            Limit_CO_AFTER = carLogin.xbvmasxz.VmasCOStd;
                        }
                        else
                        {
                            beforedate = true;
                            Limit_HC_BEBORE = carLogin.xbvmasxz.VmasHCStd;
                            Limit_CO_BEBORE = carLogin.xbvmasxz.VmasCOStd;
                            Limit_NO_BEBORE = carLogin.xbvmasxz.VmasNOStd;
                        }
                        if (beforedate)
                        {
                            Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                            ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                        }
                        else
                        {
                            Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                            ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                        }
                    }
                    else
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取联网限值失败");
                        Msg(labelXZ, panelXZ, "车辆限值：获取联网限值失败");
                        buttonOK.Enabled = false;
                    }
                    return;
                }

                string plateFrefix = carLogin.modelbj.CLHP.Substring(0, 2);//取号牌前缀
                vmas_xzdb = gbdal.Get_VMAS_XZBZ(plateFrefix);
                if (vmas_xzdb.Id == "-2")
                {
                    vmas_xzdb = gbdal.Get_VMAS_XZBZ("其他");
                    ini.INIIO.saveLogInf("未找到属于号牌前缀为" + plateFrefix + "的专有限值，将采用统一限值");
                }
                else
                {
                    ini.INIIO.saveLogInf("找到属于号牌前缀为"+plateFrefix+"的专有限值");
                }
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                {
                    switch (carLogin.carbjJh.EPVTYPE)
                    {
                        case "M11": Cllx = "第一类轻型汽车"; break;
                        case "MN2": Cllx = "第二类轻型汽车"; break;
                        case "MN3": Cllx = "重型汽车"; break;
                        default:
                            if (int.Parse(carLogin.modelbj.HDZK) <= 6 && int.Parse(carLogin.modelbj.ZZL) <= 2500)     //第一类轻型汽车
                                Cllx = "第一类轻型汽车";
                            else if (int.Parse(carLogin.modelbj.ZZL) <= 3500)       //第二类轻型汽车
                                Cllx = "第二类轻型汽车";
                            else
                                Cllx = "重型汽车";              //重型汽车
                            break;
                    }
                }
                else
                {
                    if (int.Parse(carLogin.modelbj.HDZK) <= 6 && int.Parse(carLogin.modelbj.ZZL) <= 2500)     //第一类轻型汽车
                        Cllx = "第一类轻型汽车";
                    else if (int.Parse(carLogin.modelbj.ZZL) <= 3500)       //第二类轻型汽车
                        Cllx = "第二类轻型汽车";
                    else
                        Cllx = "重型汽车";              //重型汽车
                }
                ini.INIIO.saveLogInf("车辆类型：" + Cllx);
                switch (Cllx)
                {
                    case "第一类轻型汽车":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2000-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                        {
                            zxbz = "国Ⅰ前";
                            beforedate = true;
                            if (int.Parse(carLogin.modelbj.JZZL) <= 1020)
                            {

                                Limit_HC_BEBORE = double.Parse(vmas_xzdb.S1020bhc);
                                Limit_CO_BEBORE = double.Parse(vmas_xzdb.S1020bco);
                                Limit_NO_BEBORE = double.Parse(vmas_xzdb.S1020bno);

                            }
                            else if (1020 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1470)
                            {
                                Limit_HC_BEBORE = double.Parse(vmas_xzdb.S10201470bhc);
                                Limit_CO_BEBORE = double.Parse(vmas_xzdb.S10201470bco);
                                Limit_NO_BEBORE = double.Parse(vmas_xzdb.S10201470bno);
                            }
                            else if (1470 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1930)
                            {
                                Limit_HC_BEBORE = double.Parse(vmas_xzdb.S14701930bhc);
                                Limit_CO_BEBORE = double.Parse(vmas_xzdb.S14701930bco);
                                Limit_NO_BEBORE = double.Parse(vmas_xzdb.S14701930bno);
                            }
                            else if (int.Parse(carLogin.modelbj.JZZL) > 1930)
                            {
                                Limit_HC_BEBORE = double.Parse(vmas_xzdb.S1930bhc);
                                Limit_CO_BEBORE = double.Parse(vmas_xzdb.S1930bco);
                                Limit_NO_BEBORE = double.Parse(vmas_xzdb.S1930bno);
                            }
                            //Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());

                        }
                        else
                        {
                            zxbz = "国Ⅰ";
                            beforedate = false;
                            Limit_HCNOX_AFTER = double.Parse(vmas_xzdb.Sg1d1hcnox);
                            Limit_CO_AFTER = double.Parse(vmas_xzdb.Sg1d1co);
                            //Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                        }
                        /*
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2005-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) < 0)       //2000年7月1日起生产的第一类轻型汽车
                        {
                            zxbz = "国Ⅱ";
                            beforedate = false;
                            Limit_HCNOX_AFTER = float.Parse(vmas_xzdb.Sg1d1hcnox);
                            Limit_CO_AFTER = float.Parse(vmas_xzdb.Sg1d1co);
                        }
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2008-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2011-07-01")) < 0)       //2000年7月1日起生产的第一类轻型汽车
                        {
                            zxbz = "国Ⅲ";
                            beforedate = false;
                            Limit_HCNOX_AFTER = float.Parse(vmas_xzdb.Sg1d1hcnox);
                            Limit_CO_AFTER = float.Parse(vmas_xzdb.Sg1d1co);
                        }
                        else
                        {
                            zxbz = "国Ⅳ";
                            beforedate = false;
                            Limit_HCNOX_AFTER = float.Parse(vmas_xzdb.Sg1d1hcnox);
                            Limit_CO_AFTER = float.Parse(vmas_xzdb.Sg1d1co);
                        }*/

                        if (beforedate)
                        {
                            ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                            Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                        }
                        else
                        {
                            ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                            Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                        }
                        break;
                    case "第二类轻型汽车":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-10-01")) < 0)    //2001年10月1日前生产的第二类轻型汽车
                        {
                            zxbz = "国Ⅰ前";
                            beforedate = true;
                            if (int.Parse(carLogin.modelbj.JZZL) <= 1020)
                            {

                                Limit_HC_BEBORE = double.Parse(vmas_xzdb.S1020bhc);
                                Limit_CO_BEBORE = double.Parse(vmas_xzdb.S1020bco);
                                Limit_NO_BEBORE = double.Parse(vmas_xzdb.S1020bno);

                            }
                            else if (1020 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1470)
                            {
                                Limit_HC_BEBORE = double.Parse(vmas_xzdb.S10201470bhc);
                                Limit_CO_BEBORE = double.Parse(vmas_xzdb.S10201470bco);
                                Limit_NO_BEBORE = double.Parse(vmas_xzdb.S10201470bno);
                            }
                            else if (1470 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1930)
                            {
                                Limit_HC_BEBORE = double.Parse(vmas_xzdb.S14701930bhc);
                                Limit_CO_BEBORE = double.Parse(vmas_xzdb.S14701930bco);
                                Limit_NO_BEBORE = double.Parse(vmas_xzdb.S14701930bno);
                            }
                            else if (int.Parse(carLogin.modelbj.JZZL) > 1930)
                            {
                                Limit_HC_BEBORE = double.Parse(vmas_xzdb.S1930bhc);
                                Limit_CO_BEBORE = double.Parse(vmas_xzdb.S1930bco);
                                Limit_NO_BEBORE = double.Parse(vmas_xzdb.S1930bno);
                            }
                        }

                        else
                        {
                            zxbz = "国Ⅰ";
                            beforedate = false;
                            if (int.Parse(carLogin.modelbj.JZZL) <= 1250)
                            {

                                Limit_HCNOX_AFTER = double.Parse(vmas_xzdb.S1250g1d2hcnox);
                                Limit_CO_AFTER = double.Parse(vmas_xzdb.S1250g1d2co);

                            }
                            else if (1250 < int.Parse(carLogin.modelbj.JZZL) && int.Parse(carLogin.modelbj.JZZL) <= 1700)
                            {
                                Limit_HCNOX_AFTER = double.Parse(vmas_xzdb.S12501700g1d2hcnox);
                                Limit_CO_AFTER = double.Parse(vmas_xzdb.S12501700g1d2co);
                            }
                            else if (1700 < int.Parse(carLogin.modelbj.JZZL))
                            {
                                Limit_HCNOX_AFTER = double.Parse(vmas_xzdb.S1700g1d2hcnox);
                                Limit_CO_AFTER = double.Parse(vmas_xzdb.S1700g1d2co);
                            }
                        }

                        if (beforedate)
                        {
                            ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                            Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_BEBORE.ToString() + "|HC:" + Limit_HC_BEBORE.ToString() + "|NO:" + Limit_NO_BEBORE.ToString());
                        }
                        else
                        {
                            ini.INIIO.saveLogInf("车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                            Msg(labelXZ, panelXZ, "车辆限值：CO:" + Limit_CO_AFTER.ToString() + "|HC+NOX:" + Limit_HCNOX_AFTER.ToString());
                        }
                        break;
                    case "重型汽车":
                        ini.INIIO.saveLogInf("车辆限值：重型车无法获取限值");
                        Msg(label1, panel4, "重型车无法获取限值");
                        break;
                }
            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("初始化排放限值异常：" + er.Message);
                Msg(label1, panel4, "初始化排放限值出错，请检查被检车辆信息是否正确！");
                buttonOK.Enabled = false;
            }
        }
        public void Init_JzjsLimit()
        {
            try
            {
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                {
                    if (mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_LNAS)
                    {
                        ini.INIIO.saveLogInf("(东软联网)取lugdown限值成功");
                        GLXZ = (double)(Math.Round(double.Parse(carLogin.limitdatainf.MaxPower) * double.Parse(carLogin.modelbj.EDGL), 1));
                        GXXZ = double.Parse(carLogin.limitdatainf.SmokeK);
                        ZSXZ_LOW = double.Parse(carLogin.modelbj.EDZS) * double.Parse(carLogin.limitdatainf.DieselRevUp);
                        ZSXZ_HIGH = double.Parse(carLogin.modelbj.EDZS) * double.Parse(carLogin.limitdatainf.DieselRevBelow);
                        Msg(labelXZ, panelXZ, "车辆限值：功率限值:" + GLXZ.ToString() + "|烟度限值:" + GXXZ.ToString());
                        return;
                    }
                    else if(mainPanel.neusoftsocketinf.AREA==mainPanel.NEU_FJS)
                    {
                        ini.INIIO.saveLogInf("(东软联网)取lugdown限值成功");
                        GLXZ = double.Parse(carLogin.modelbj.EDGL)*0.5f;
                        GXXZ = double.Parse(carLogin.limitdatainf.SmokeK);
                        ZSXZ_LOW = double.Parse(carLogin.modelbj.EDZS) * double.Parse(carLogin.limitdatainf.DieselRevUp);
                        ZSXZ_HIGH = double.Parse(carLogin.modelbj.EDZS) * double.Parse(carLogin.limitdatainf.DieselRevBelow);
                        Msg(labelXZ, panelXZ, "车辆限值：功率限值:" + GLXZ.ToString() + "|烟度限值:" + GXXZ.ToString());
                        return;
                    }
                    else
                    {
                        ini.INIIO.saveLogInf("(东软联网)取lugdown限值成功");
                        GLXZ = (double)(Math.Round(0.5f * double.Parse(carLogin.modelbj.EDGL), 1));
                        GXXZ = double.Parse(carLogin.limitdatainf.SmokeK);
                        ZSXZ_LOW = double.Parse(carLogin.modelbj.EDZS) * double.Parse(carLogin.limitdatainf.DieselRevUp);
                        ZSXZ_HIGH = double.Parse(carLogin.modelbj.EDZS) * double.Parse(carLogin.limitdatainf.DieselRevBelow);
                        Msg(labelXZ, panelXZ, "车辆限值：功率限值:" + GLXZ.ToString() + "|烟度限值:" + GXXZ.ToString());
                        return;
                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                {
                    Msg(labelXZ, panelXZ, "中科宇图联网检测");
                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                {
                    ini.INIIO.saveLogInf("(喜邦联网)取加载减速法限值");
                    if (carLogin.xblugdownxz != null)
                    {
                        GLXZ = carLogin.xblugdownxz.LDMinPower;
                        GXXZ = carLogin.xblugdownxz.LDSorbStd;
                        ZSXZ_LOW = carLogin.xblugdownxz.LDLRpmStd;
                        ZSXZ_HIGH = carLogin.xblugdownxz.LDHRpmStd;
                        Msg(labelXZ, panelXZ, "车辆限值：功率限值:" + GLXZ.ToString() + "|烟度限值:" + GXXZ.ToString());

                    }
                    else
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取联网限值失败");
                        Msg(labelXZ, panelXZ, "车辆限值：获取联网限值失败");
                        buttonOK.Enabled = false;
                    }
                    return;
                }
                GLXZ = double.Parse(carLogin.modelbj.EDGL) / 2.0f;      //初始化功率限值
                if (mainPanel.NetMode == mainPanel.CCNETMODE && mainPanel.isNetUsed)
                {
                    string code, message;
                    carinfor.limitLugdown limitlugdown = new carinfor.limitLugdown();
                    if (mainPanel.ccsocket.GetLimit(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message, out limitlugdown))
                    {
                        if (code == "1")
                        {
                            GXXZ = limitlugdown.ydxz;
                            ini.INIIO.saveLogInf("(诚创联网)取限值成功");
                            Msg(labelXZ, panelXZ, "车辆限值：功率限值:" + GLXZ.ToString() + "|烟度限值:" + GXXZ.ToString());
                            return;
                        }
                        else
                        {
                            ini.INIIO.saveLogInf("(诚创联网)取限值失败，将使用本地限值，信息:" + message);
                        }
                    }
                    else
                    {
                        ini.INIIO.saveLogInf("(诚创联网)取限值失败，将使用本地限值，信息:" + message);
                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE && mainPanel.ahwebinf.version == mainPanel.AHVERSION_V23)
                {
                    int ahResult;
                    string ahErrMsg;
                    if (mainPanel.ahinterface.GetJZJSLimit(carLogin.carbj.CLID, out ahResult, out ahErrMsg, out ahlimitmodel))
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值成功"); 

                        GXXZ = double.Parse(ahlimitmodel.LugdownYDLimit);
                        GLXZ = double.Parse(ahlimitmodel.LugdownPowerLimit);
                        ini.INIIO.saveLogInf("(安徽联网)取限值成功");
                        Msg(labelXZ, panelXZ, "车辆限值：功率限值:" + GLXZ.ToString() + "|烟度限值:" + GXXZ.ToString());
                        return;
                    }
                    else
                    {
                        ahlimitmodel = null;
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值失败");
                        MessageBox.Show(carLogin.carbj.CLHP + "取安徽联网限值失败\r\n" + "代码:" + ahResult.ToString() + "\r\n" + "信息:" + ahErrMsg);
                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                {
                    string result;
                    string errmsg = "";
                    DataTable dt = new DataTable();
                    Hashtable ht2 = new Hashtable();
                    ht2.Add("stationcode", mainPanel.stationid);
                    ht2.Add("linecode", mainPanel.lineid);
                    ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                    ht2.Add("inspectionmethod", mainPanel.gxinterface.GLR_inspectionmethod.GetValue(carLogin.carbj.JCFF, ""));
                    if (!mainPanel.gxinterface.GetVehicleXz(ht2, out dt, out result, out errmsg))
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取桂林联网限值失败");
                        MessageBox.Show(carLogin.carbj.CLHP + "取桂林联网限值失败\r\n" + "代码:" + result + "\r\n" + "信息:" + errmsg);
                        return;
                    }
                    if (dt != null)
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取桂林联网限值成功");
                        ZSXZ_LOW = (int)(Math.Round(double.Parse(carLogin.modelbj.EDZS) * 0.75f, 0));
                        ZSXZ_HIGH = (int)(Math.Round(double.Parse(carLogin.modelbj.EDZS) * 1.25f, 0));
                        GXXZ = double.Parse(dt.Rows[0]["inspectionlimits"].ToString());
                        GLXZ = double.Parse(carLogin.modelbj.EDGL) / 2.0f;      //初始化功率限值
                        ini.INIIO.saveLogInf("(桂林联网)取限值成功");
                        Msg(labelXZ, panelXZ, "车辆限值：功率限值:" + GLXZ.ToString() + "|烟度限值:" + GXXZ.ToString());
                        return;

                    }
                }

                ZSXZ_LOW =(int)(Math.Round(double.Parse(carLogin.modelbj.EDZS) * 0.75f,0));
                ZSXZ_HIGH =(int)(Math.Round(double.Parse(carLogin.modelbj.EDZS) * 1.25f,0));
                JZJS_XZDB jzjs_xzbz = gbdal.Get_JZJS_XZDB();
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                {
                    switch (carLogin.carbjJh.EPVTYPE)
                    {
                        case "M11": Cllx = "第一类轻型汽车"; break;
                        case "MN2": Cllx = "第二类轻型汽车"; break;
                        case "MN3": Cllx = "重型汽车"; break;
                        default:
                            if (int.Parse(carLogin.modelbj.HDZK) <= 6 && int.Parse(carLogin.modelbj.ZZL) <= 2500)     //第一类轻型汽车
                                Cllx = "第一类轻型汽车";
                            else if (int.Parse(carLogin.modelbj.ZZL) <= 3500)       //第二类轻型汽车
                                Cllx = "第二类轻型汽车";
                            else
                                Cllx = "重型汽车";              //重型汽车
                            break;
                    }
                }
                else
                {
                    if (int.Parse(carLogin.modelbj.HDZK) <= 6 && int.Parse(carLogin.modelbj.ZZL) <= 2500)     //第一类轻型汽车
                        Cllx = "第一类轻型汽车";
                    else if (int.Parse(carLogin.modelbj.ZZL) <= 3500)       //第二类轻型汽车
                        Cllx = "第二类轻型汽车";
                    else
                        Cllx = "重型汽车";              //重型汽车
                }
                switch (Cllx)
                {
                    case "第一类轻型汽车":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2000-07-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                        //GXXZ = 2.13f;
                        {
                            GXXZ = double.Parse(jzjs_xzbz.d1Date20000701b);
                            zxbz = "国Ⅰ";
                        }
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2000-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2005-07-01")) < 0)   //2000年7月1日至2005年6月30日生产的第一类轻型汽车
                        {
                            //GXXZ = 1.86f;
                            GXXZ = double.Parse(jzjs_xzbz.d1Date2000070120050630);
                            zxbz = "国Ⅱ";
                        }
                        else
                        {
                            GXXZ = double.Parse(jzjs_xzbz.d1Date20050701);
                            zxbz = "国Ⅳ";
                        }
                        break;
                    case "第二类轻型汽车":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-10-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                        //GXXZ = 2.13f;
                        {
                            GXXZ = double.Parse(jzjs_xzbz.d2Date20011001b);
                            zxbz = "国Ⅰ";
                        }
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-10-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2006-07-01")) < 0)   //2000年7月1日至2005年6月30日生产的第一类轻型汽车
                        //GXXZ = 1.86f;
                        {
                            //GXXZ = 1.86f;
                            GXXZ = double.Parse(jzjs_xzbz.d2Date2001100120060630);
                            zxbz = "国Ⅱ";
                        }
                        else
                        {
                            GXXZ = double.Parse(jzjs_xzbz.d2Date20060701);
                            zxbz = "国Ⅳ";
                        }
                        break;
                    case "重型汽车":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-09-01")) < 0)    //2000年7月1日前生产的第一类轻型汽车
                        //GXXZ = 2.13f;
                        {
                            GXXZ = double.Parse(jzjs_xzbz.zxDate20010901b);
                            zxbz = "国Ⅰ";
                        }
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-09-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2004-09-01")) < 0)   //2000年7月1日至2005年6月30日生产的第一类轻型汽车
                        //GXXZ = 1.86f;
                        {
                            //GXXZ = 1.86f;
                            GXXZ = double.Parse(jzjs_xzbz.zxDate2001090120040831);
                            zxbz = "国Ⅱ";
                        }
                        else
                        {
                            GXXZ = double.Parse(jzjs_xzbz.zxDate20040901);
                            zxbz = "国Ⅳ";
                        }
                        break;
                }
                Msg(labelXZ, panelXZ, "车辆限值：功率限值:" + GLXZ.ToString() + "|烟度限值:" + GXXZ.ToString());
            }
            catch (Exception)
            {
                Msg(label1, panel4, "初始化排放限值出错，请检查被检车辆信息是否正确！");
                buttonOK.Enabled = false;
            }
        }
        string glzyjsxzstring = "";
        public void Init_ZyjsLimit()
        {
            try
            {
                if (mainPanel.NetMode == mainPanel.CCNETMODE && mainPanel.isNetUsed)
                {
                    string code, message;
                    carinfor.limitBtg limitbtg = new carinfor.limitBtg();
                    if (mainPanel.ccsocket.GetLimit(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message, out limitbtg))
                    {
                        if (code == "1")
                        {
                            btgxz = limitbtg.ydxz;
                            ini.INIIO.saveLogInf("(诚创联网)取限值成功");
                            Msg(labelXZ, panelXZ, "车辆限值：烟度限值:" + btgxz.ToString());
                            return;
                        }
                        else
                        {
                            ini.INIIO.saveLogInf("(诚创联网)取限值失败，将使用本地限值，信息:" + message);
                        }
                    }
                    else
                    {
                        ini.INIIO.saveLogInf("(诚创联网)取限值失败，将使用本地限值，信息:" + message);
                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE)
                {
                    ini.INIIO.saveLogInf("(东软联网)取自由加速不透光限值成功");
                    btgxz = double.Parse(carLogin.limitdatainf.FASmokeK);
                    btgzsxz = 0;
                    Msg(labelXZ, panelXZ, "车辆限值：烟度限值:" + btgxz.ToString());
                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE && mainPanel.jschecklimitmodel != null)
                {
                    ini.INIIO.saveLogInf("(江苏联网)取限值成功");
                    btgxz = double.Parse(mainPanel.jschecklimitmodel.FASmokeK);
                    btgzsxz = double.Parse(mainPanel.jschecklimitmodel.FARev);
                    Msg(labelXZ, panelXZ, "车辆限值：烟度限值:" + btgxz.ToString());
                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE && mainPanel.ahwebinf.version == mainPanel.AHVERSION_V23)
                {
                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                    {
                        int ahResult;
                        string ahErrMsg;
                        if (mainPanel.ahinterface.GetBTGLimit(carLogin.carbj.CLID, out ahResult, out ahErrMsg, out ahlimitmodel))
                        {
                            ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值成功");

                            btgxz = double.Parse(ahlimitmodel.BtgYDLimit);
                            btgzsxz = 0;
                            ini.INIIO.saveLogInf("(安徽联网)取限值成功");
                            Msg(labelXZ, panelXZ, "车辆限值：烟度限值:" + btgxz.ToString());
                            return;
                        }
                        else
                        {
                            ahlimitmodel = null;
                            ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值失败");
                            MessageBox.Show(carLogin.carbj.CLHP + "取安徽联网限值失败\r\n" + "代码:" + ahResult.ToString() + "\r\n" + "信息:" + ahErrMsg);
                            return;
                        }
                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                {
                    string result;
                    string errmsg = "";
                    DataTable dt = new DataTable();
                    Hashtable ht2 = new Hashtable();
                    ht2.Add("stationcode", mainPanel.stationid);
                    ht2.Add("linecode", mainPanel.lineid);
                    ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                    ht2.Add("inspectionmethod", mainPanel.gxinterface.GLR_inspectionmethod.GetValue(carLogin.carbj.JCFF, ""));
                    if (!mainPanel.gxinterface.GetVehicleXz(ht2, out dt, out result, out errmsg))
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取桂林联网限值失败");
                        MessageBox.Show(carLogin.carbj.CLHP + "取桂林联网限值失败\r\n" + "代码:" + result + "\r\n" + "信息:" + errmsg);
                        return;
                    }
                    if (dt != null)
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取桂林联网限值成功");
                        btgxz = double.Parse(dt.Rows[0]["inspectionlimits"].ToString());
                        btgzsxz = 0;      //初始化功率限值
                        glzyjsxzstring = dt.Rows[0]["inspectionlimits"].ToString();
                        ini.INIIO.saveLogInf("(桂林联网)取限值成功");
                        Msg(labelXZ, panelXZ, "车辆限值：烟度限值:" + btgxz.ToString());
                        return;

                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                {
                    Msg(labelXZ, panelXZ, "中科宇图联网检测");
                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                {
                    ini.INIIO.saveLogInf("(喜邦联网)取自由加速不透光法限值");
                    if (carLogin.xbbtgxz != null)
                    {
                        btgxz = carLogin.xbbtgxz.SorbStd;
                        btgzsxz =0;      //初始化功率限值
                        Msg(labelXZ, panelXZ, "车辆限值：烟度限值:" + btgxz.ToString());
                    }
                    else
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取联网限值失败");
                        Msg(labelXZ, panelXZ, "车辆限值：获取联网限值失败");
                        buttonOK.Enabled = false;
                    }
                    return;
                }
                zyjs_xzgb = gbdal.Get_ZYJS_XZGB();
                if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2005-07-01")) >= 0&&!zyjs_xzgb.onlyUseThis)    //2005年7月1日起生产的车按车型核准批准的限值再加0.5
                {
                    bool isFindXzSuccess = false;
                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                    //if(true)
                    {
                        if (int.Parse(carLogin.modelbj.ZZL) <= 3500)//轻型车
                        {
                            ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配");
                            isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 0, 1, carLogin.modelbj.EDGL, out btgxz);
                            if (isFindXzSuccess)
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配成功：" + btgxz.ToString());
                            else
                            {
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配失败，按【车辆型号】匹配");
                                isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 2, 1, carLogin.modelbj.EDGL, out btgxz);
                                if (isFindXzSuccess)
                                    ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配成功：" + btgxz.ToString());
                                else
                                    ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配失败");
                            }
                        }
                        else//重型车
                        {
                            ini.INIIO.saveLogInf("重型车按【发动机型号】匹配");
                            isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 1, 2, carLogin.modelbj.EDGL, out btgxz);
                            if (isFindXzSuccess)
                                ini.INIIO.saveLogInf("重型车按【发动机型号】匹配成功：" + btgxz.ToString());
                            else
                            {
                                ini.INIIO.saveLogInf("重型车按【发动机型号】匹配失败");
                            }
                        }
                    }
                    else if (zyjs_xzgb.BTGXZBZ == 0)
                    {
                        if (zyjs_xzgb.XZTABLE == 0)//取“不透光限值”数据来匹配
                        {
                            if (int.Parse(carLogin.modelbj.ZZL) <= 3500)//轻型车
                            {
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配");
                                isFindXzSuccess = gbdal.Get_BTG_XZGB(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 0, out btgxz);
                                if (isFindXzSuccess)
                                    ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配成功：" + btgxz.ToString());
                                else
                                {
                                    ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配失败，按【车辆型号】匹配");
                                    isFindXzSuccess = gbdal.Get_BTG_XZGB(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 2, out btgxz);
                                    if (isFindXzSuccess)
                                        ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配成功：" + btgxz.ToString());
                                    else
                                        ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配失败");
                                }
                            }
                            else//重型车
                            {
                                ini.INIIO.saveLogInf("重型车按【发动机型号】匹配");
                                isFindXzSuccess = gbdal.Get_BTG_XZGB(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 1, out btgxz);
                                if (isFindXzSuccess)
                                    ini.INIIO.saveLogInf("重型车按【发动机型号】匹配成功：" + btgxz.ToString());
                                else
                                {
                                    ini.INIIO.saveLogInf("重型车按【发动机型号】匹配失败");
                                }
                            }
                        }
                        else//取“烟度限值数据”来匹配
                        {
                            if (int.Parse(carLogin.modelbj.ZZL) <= 3500)//轻型车
                            {
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配");
                                isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 0, 1, carLogin.modelbj.EDGL, out btgxz);
                                if (isFindXzSuccess)
                                    ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配成功：" + btgxz.ToString());
                                else
                                {
                                    ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配失败，按【车辆型号】匹配");
                                    isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 2, 1, carLogin.modelbj.EDGL, out btgxz);
                                    if (isFindXzSuccess)
                                        ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配成功：" + btgxz.ToString());
                                    else
                                        ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配失败");
                                }
                            }
                            else//重型车
                            {
                                ini.INIIO.saveLogInf("重型车按【发动机型号】+【额定功率】匹配");
                                isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 2, 2, carLogin.modelbj.EDGL, out btgxz);
                                if (isFindXzSuccess)
                                    ini.INIIO.saveLogInf("轻型车按【发动机型号+额定功率】匹配成功：" + btgxz.ToString());
                                else
                                {
                                    ini.INIIO.saveLogInf("重型车按【发动机型号】匹配");
                                    isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 1, 2, carLogin.modelbj.EDGL, out btgxz);
                                    if (isFindXzSuccess)
                                        ini.INIIO.saveLogInf("重型车按【发动机型号】匹配成功：" + btgxz.ToString());
                                    else
                                    {
                                        ini.INIIO.saveLogInf("重型车按【发动机型号】匹配失败");
                                    }
                                }
                            }
                        }
                        if (!isFindXzSuccess)
                        {
                            if (MessageBox.Show("未找到该车辆型号及发动机型号相关限值信息！\r\n按GB3847-2005要求，2005年7月1日起生产的柴油车排放限值为该车型核准批准的自由加速排放烟度限值加上0.5\r\n未找到该信息可能影响检测结果的判定\r\n是否继续检测？", "系统提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.Cancel)
                            {
                                enableButton(buttonOK, false);
                                return;
                            }
                            zyjs_xzgb = gbdal.Get_ZYJS_XZGB();
                            if (carLogin.modelbj.JQFS.Contains("自然") || (mainPanel.logininfcontrol.getComBoBoxItemsNAME("进气方式", carLogin.modelbj.JQFS)).Contains("自然"))
                            {
                                ini.INIIO.saveLogInf("进气方式：自然吸气");
                                btgxz = Convert.ToDouble(zyjs_xzgb.ZRDate20011001btgxz);
                                ini.INIIO.saveLogInf("光吸收系数:" + btgxz.ToString());
                            }
                            else
                            {
                                ini.INIIO.saveLogInf("进气方式：增压");
                                btgxz = Convert.ToDouble(zyjs_xzgb.WLDate20011001btgxz);
                                ini.INIIO.saveLogInf("光吸收系数:" + btgxz.ToString());
                            }
                        }
                    }
                    else if (zyjs_xzgb.BTGXZBZ == 1)//山东济宁
                    {
                        if (int.Parse(carLogin.modelbj.ZZL) <= 3500)//轻型车
                        {
                            ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配");
                            isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 0, 1, carLogin.modelbj.EDGL, out btgxz);
                            if (isFindXzSuccess)
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配成功：" + btgxz.ToString());
                            else
                            {
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配失败，按【车辆型号】匹配");
                                isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 2, 1, carLogin.modelbj.EDGL, out btgxz);
                                if (isFindXzSuccess)
                                    ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配成功：" + btgxz.ToString());
                                else
                                    ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配失败");
                            }
                        }
                        else//重型车
                        {
                            ini.INIIO.saveLogInf("重型车按【发动机型号】+【额定功率】匹配");
                            isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 2, 2, carLogin.modelbj.EDGL, out btgxz);
                            if (isFindXzSuccess)
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+额定功率】匹配成功：" + btgxz.ToString());
                            else
                            {
                                ini.INIIO.saveLogInf("重型车按【发动机型号】匹配");
                                isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 1, 2, carLogin.modelbj.EDGL, out btgxz);
                                if (isFindXzSuccess)
                                    ini.INIIO.saveLogInf("重型车按【发动机型号】匹配成功：" + btgxz.ToString());
                                else
                                {
                                    ini.INIIO.saveLogInf("重型车按【发动机型号】匹配失败");
                                }
                            }
                        }
                        if (!isFindXzSuccess)
                        {
                                if (mainPanel.logininfcontrol.getSdJnXz(int.Parse(carLogin.modelbj.ZZL) <= 3500 ? "轻型车" : "重型车", carLogin.modelbj.ZXBZ, out btgxz))
                                {
                                    ini.INIIO.saveLogInf("光吸收系数限值:" + btgxz.ToString());
                                }
                                else
                                {
                                    Msg(label1, panel4, "按山东济宁标准，未匹配到该车型限值，不能进行检测！");
                                    enableButton(buttonOK, false);
                                    return;
                                }
                            
                        }
                    }
                    else if (zyjs_xzgb.BTGXZBZ == 2)//山东烟台
                    {
                        isFindXzSuccess = double.TryParse(carLogin.modelbj.CYXZ, out btgxz);                        
                        if (!isFindXzSuccess)
                        {
                                Msg(label1, panel4, "【车辆信息】中该车柴油限值无效！CYXZ="+carLogin.modelbj.CYXZ);
                                enableButton(buttonOK, false);
                                return;
                        }
                    }
                    else if (zyjs_xzgb.BTGXZBZ == 3)//内蒙
                    {
                        if (int.Parse(carLogin.modelbj.ZZL) <= 3500)//轻型车
                        {
                            ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配");
                            isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 0, 1, carLogin.modelbj.ZDJGL, out btgxz);
                            if (isFindXzSuccess)
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配成功：" + btgxz.ToString());
                            else
                            {
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+车辆型号】匹配失败，按【车辆型号】匹配");
                                isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 2, 1, carLogin.modelbj.ZDJGL, out btgxz);
                                if (isFindXzSuccess)
                                    ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配成功：" + btgxz.ToString());
                                else
                                    ini.INIIO.saveLogInf("轻型车按【车辆型号】匹配失败");
                            }
                        }
                        else//重型车
                        {
                            ini.INIIO.saveLogInf("重型车按【发动机型号】+【额定功率】匹配");
                            isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 2, 2, carLogin.modelbj.ZDJGL, out btgxz);
                            if (isFindXzSuccess)
                                ini.INIIO.saveLogInf("轻型车按【发动机型号+额定功率】匹配成功：" + btgxz.ToString());
                            else
                            {
                                ini.INIIO.saveLogInf("重型车按【发动机型号】匹配");
                                isFindXzSuccess = gbdal.Get_BTG_XZGB_JH(carLogin.modelbj.FDJXH, carLogin.modelbj.XH, 1, 2, carLogin.modelbj.ZDJGL, out btgxz);
                                if (isFindXzSuccess)
                                    ini.INIIO.saveLogInf("重型车按【发动机型号】匹配成功：" + btgxz.ToString());
                                else
                                {
                                    ini.INIIO.saveLogInf("重型车按【发动机型号】匹配失败");
                                }
                            }
                        }
                        if (!isFindXzSuccess)
                        {
                            if (MessageBox.Show("未找到该车辆型号及发动机型号相关限值信息！\r\n按GB3847-2005要求，2005年7月1日起生产的柴油车排放限值为该车型核准批准的自由加速排放烟度限值加上0.5\r\n未找到该信息可能影响检测结果的判定\r\n是否继续检测？", "系统提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.Cancel)
                            {
                                enableButton(buttonOK, false);
                                return;
                            }
                            zyjs_xzgb = gbdal.Get_ZYJS_XZGB();
                            if (carLogin.modelbj.JQFS.Contains("自然") || (mainPanel.logininfcontrol.getComBoBoxItemsNAME("进气方式", carLogin.modelbj.JQFS)).Contains("自然"))
                            {
                                ini.INIIO.saveLogInf("进气方式：自然吸气");
                                btgxz = Convert.ToDouble(zyjs_xzgb.ZRDate20011001btgxz);
                                ini.INIIO.saveLogInf("光吸收系数:" + btgxz.ToString());
                            }
                            else
                            {
                                ini.INIIO.saveLogInf("进气方式：增压");
                                btgxz = Convert.ToDouble(zyjs_xzgb.WLDate20011001btgxz);
                                ini.INIIO.saveLogInf("光吸收系数:" + btgxz.ToString());
                            }
                        }
                    }
                }
                else
                {
                    if (mainPanel.useHyDatabase)
                    {
                        if (mainPanel.acDicJqfs.GetValue(carLogin.modelbj.JQFS,"").Contains("自然"))
                        {
                            ini.INIIO.saveLogInf("进气方式：自然吸气");
                            btgxz = Convert.ToDouble(zyjs_xzgb.ZRDate20011001btgxz);
                            ini.INIIO.saveLogInf("光吸收系数:" + btgxz.ToString());
                        }
                        else
                        {
                            ini.INIIO.saveLogInf("进气方式：增压");
                            btgxz = Convert.ToDouble(zyjs_xzgb.WLDate20011001btgxz);
                            ini.INIIO.saveLogInf("光吸收系数:" + btgxz.ToString());
                        }
                    }
                    else
                    {
                        if (carLogin.modelbj.JQFS.Contains("自然") || (mainPanel.logininfcontrol.getComBoBoxItemsNAME("进气方式", carLogin.modelbj.JQFS)).Contains("自然"))
                        {
                            ini.INIIO.saveLogInf("进气方式：自然吸气");
                            btgxz = Convert.ToDouble(zyjs_xzgb.ZRDate20011001btgxz);
                            ini.INIIO.saveLogInf("光吸收系数:" + btgxz.ToString());
                        }
                        else
                        {
                            ini.INIIO.saveLogInf("进气方式：增压");
                            btgxz = Convert.ToDouble(zyjs_xzgb.WLDate20011001btgxz);
                            ini.INIIO.saveLogInf("光吸收系数:" + btgxz.ToString());
                        }
                    }
                }
                Msg(labelXZ, panelXZ, "车辆限值：烟度限值:" + btgxz.ToString());

            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("初始化排放限值异常：" + er.Message);
                Msg(label1, panel4, "初始化排放限值出错，请检查被检车辆信息是否正确！");
                buttonOK.Enabled = false;
            }

        }
        public void Init_LzLimit()
        {
            try
            {
                
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                {
                    ini.INIIO.saveLogInf("(喜邦联网)取滤纸限值");
                    if (carLogin.xblzxz != null)
                    {
                        lzxz = carLogin.xblzxz.TrayStd;
                        btgzsxz = 0;      //初始化功率限值
                        Msg(labelXZ, panelXZ, "车辆限值：滤纸排放:" + btgxz.ToString());
                    }
                    else
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取联网限值失败");
                        Msg(labelXZ, panelXZ, "车辆限值：获取联网限值失败");
                        buttonOK.Enabled = false;
                    }
                    return;
                }
                //zyjs_xzgb = gbdal.Get_ZYJS_XZGB();
                if (carLogin.modelbj.CLZL=="4")//如果为低速货车或者拖拉机也为滤纸式烟度法
                {
                    int qgs = 1;
                    int.TryParse(carLogin.modelbj.QGS, out qgs);
                    if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2002-7-1")) < 0)
                    {
                        if (qgs == 1)
                            lzxz = 6.0;
                        else
                            lzxz = 4.5;
                    }
                    else if ((DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2002-7-1")) >= 0) && (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2004-7-1")) < 0))
                    {
                        if (qgs == 1)
                            lzxz = 5.5;
                        else
                            lzxz = 4.5;
                    }
                    else
                    {
                        if (qgs == 1)
                            lzxz = 5.0;
                        else
                            lzxz = 4.0;
                    }
                    lzbz = "GB18322-2002";
                }
                else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("1995-7-1")) < 0)
                {
                    lzxz = 5.0;
                    lzbz = "GB3847-2005";
                }
                else
                {
                    lzxz = 4.5;
                    lzbz = "GB3847-2005";
                }
                ini.INIIO.saveLogInf("滤纸排放限值;" + lzxz.ToString() + "Rb,标准：" + lzbz);
                Msg(labelXZ, panelXZ, "车辆限值：滤纸排放限值:" + lzxz.ToString() + "Rb,标准：" + lzbz);
            }
            catch
            {
                Msg(label1, panel4, "初始化排放限值出错，请检查被检车辆信息是否正确！");
                buttonOK.Enabled = false;
            }

        }

        public void Init_SdsLimit()
        {
            try
            {
                if (mainPanel.NetMode == mainPanel.CCNETMODE && mainPanel.isNetUsed)
                {
                    string code, message;
                    carinfor.limitSds limitsds = new carinfor.limitSds();
                    if (mainPanel.ccsocket.GetLimit(carLogin.modelbj.CLHP, carLogin.modelbj.CLLX, carLogin.carbj.CLID, carLogin.carbj.JCCS, out code, out message, out limitsds))
                    {
                        if (code == "1")
                        {
                            H_HC_XZ = limitsds.highHc;
                            H_CO_XZ = limitsds.highCo;
                            L_HC_XZ = limitsds.lowHc;
                            L_CO_XZ = limitsds.lowCo;
                            λ_XZ = "1.00±0.03";
                            ini.INIIO.saveLogInf("(诚创联网)取限值成功");
                            Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:" + H_HC_XZ.ToString() + "|高怠速CO:" + H_CO_XZ.ToString() + "|怠速HC:" + L_HC_XZ.ToString() + "|怠速CO:" + L_CO_XZ.ToString());
                            return;
                        }
                        else
                        {
                            ini.INIIO.saveLogInf("(诚创联网)取限值失败，将使用本地限值，信息:" + message);
                        }
                    }
                    else
                    {
                        ini.INIIO.saveLogInf("(诚创联网)取限值失败，将使用本地限值，信息:" + message);
                    }
                }
                else if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.NEUSOFTNETMODE)
                {
                    ini.INIIO.saveLogInf("(东软联网)取双怠速法限值成功");
                    H_HC_XZ = double.Parse(carLogin.limitdatainf.HighIdleHC);
                    H_CO_XZ = double.Parse(carLogin.limitdatainf.HighIdleCO);
                    L_HC_XZ = double.Parse(carLogin.limitdatainf.LowIdleHC);
                    L_CO_XZ = double.Parse(carLogin.limitdatainf.LowIdleCO);
                    λ_XZ = "1.00±0.03";
                    Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:" + H_HC_XZ.ToString() + "|高怠速CO:" + H_CO_XZ.ToString() + "|怠速HC:" + L_HC_XZ.ToString() + "|怠速CO:" + L_CO_XZ.ToString());
                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                {
                    ini.INIIO.saveLogInf("(喜邦联网)取双怠速法限值");
                    if (carLogin.xbsdsxz != null)
                    {
                        H_HC_XZ = carLogin.xbsdsxz.GDSHCStd;
                        H_CO_XZ =carLogin.xbsdsxz.GDSCOStd;
                        L_HC_XZ = carLogin.xbsdsxz.DSHCStd;
                        L_CO_XZ = carLogin.xbsdsxz.DSCOStd;
                        λ_XZ = "1.00±0.03";
                        Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:" + H_HC_XZ.ToString() + "|高怠速CO:" + H_CO_XZ.ToString() + "|怠速HC:" + L_HC_XZ.ToString() + "|怠速CO:" + L_CO_XZ.ToString());
                    }
                    else
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取联网限值失败");
                        Msg(labelXZ, panelXZ, "车辆限值：获取联网限值失败");
                        buttonOK.Enabled = false;
                    }
                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE && mainPanel.jschecklimitmodel != null)
                {
                    ini.INIIO.saveLogInf("(江苏联网)取限值成功");
                    H_HC_XZ = double.Parse(mainPanel.jschecklimitmodel.HighIdleHC);
                    H_CO_XZ = double.Parse(mainPanel.jschecklimitmodel.HighIdleCO);
                    L_HC_XZ = double.Parse(mainPanel.jschecklimitmodel.LowIdleHC);
                    L_CO_XZ = double.Parse(mainPanel.jschecklimitmodel.LowIdleCO);
                    λ_XZ = "1.00±0.03";
                    Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:" + H_HC_XZ.ToString() + "|高怠速CO:" + H_CO_XZ.ToString() + "|怠速HC:" + L_HC_XZ.ToString() + "|怠速CO:" + L_CO_XZ.ToString());
                    return;
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE && mainPanel.ahwebinf.version == mainPanel.AHVERSION_V23)
                {
                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.AHNETMODE)
                    {
                        int ahResult;
                        string ahErrMsg;
                        if (mainPanel.ahinterface.GetSdsLimit(carLogin.carbj.CLID, out ahResult, out ahErrMsg, out ahlimitmodel))
                        {
                            ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值成功"); 

                            H_HC_XZ = double.Parse(ahlimitmodel.HiHCLimit);
                            H_CO_XZ = double.Parse(ahlimitmodel.HiCOLimit);
                            L_HC_XZ = double.Parse(ahlimitmodel.LowHCLimit);
                            L_CO_XZ = double.Parse(ahlimitmodel.LowCOLimit);
                            λ_XZ = "1.00±0.03";
                            ini.INIIO.saveLogInf("(安徽联网)取限值成功");
                            Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:" + H_HC_XZ.ToString() + "|高怠速CO:" + H_CO_XZ.ToString() + "|怠速HC:" + L_HC_XZ.ToString() + "|怠速CO:" + L_CO_XZ.ToString());
                            return;
                        }
                        else
                        {
                            ahlimitmodel = null;
                            ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取安徽联网限值失败");
                            MessageBox.Show(carLogin.carbj.CLHP + "取安徽联网限值失败\r\n" + "代码:" + ahResult.ToString() + "\r\n" + "信息:" + ahErrMsg);
                        }
                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.GUILINNETMODE)
                {
                    string result;
                    string errmsg = "";
                    DataTable dt = new DataTable();
                    Hashtable ht2 = new Hashtable();
                    ht2.Add("stationcode", mainPanel.stationid);
                    ht2.Add("linecode", mainPanel.lineid);
                    ht2.Add("inspectionnum", carLogin.carbj.JYLSH);
                    ht2.Add("inspectionmethod", mainPanel.gxinterface.GLR_inspectionmethod.GetValue(carLogin.carbj.JCFF, ""));
                    if (!mainPanel.gxinterface.GetVehicleXz(ht2, out dt, out result, out errmsg))
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取桂林联网限值失败");
                        MessageBox.Show(carLogin.carbj.CLHP + "取桂林联网限值失败\r\n" + "代码:" + result + "\r\n" + "信息:" + errmsg);
                        return;
                    }
                    if (dt != null)
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取桂林联网限值成功");
                        λ_XZ = "1.00±0.03";
                        H_HC_XZ = double.Parse(dt.Rows[0]["hihcl"].ToString());
                        H_CO_XZ = double.Parse(dt.Rows[0]["hicol"].ToString());
                        L_HC_XZ = double.Parse(dt.Rows[0]["lihcl"].ToString());
                        L_CO_XZ = double.Parse(dt.Rows[0]["licol"].ToString());
                        ini.INIIO.saveLogInf("(桂林联网)取限值成功");
                        Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:" + H_HC_XZ.ToString() + "|高怠速CO:" + H_CO_XZ.ToString() + "|怠速HC:" + L_HC_XZ.ToString() + "|怠速CO:" + L_CO_XZ.ToString());
                        return;

                    }
                }
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ZKYTNETMODE)
                {
                    Msg(labelXZ, panelXZ, "中科宇图联网检测");
                    return;
                }
                /*
                else if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HHZNNETMODE)
                {
                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.HHZNNETMODE)
                    {
                        #region 红河州联网上传检测线信息
                        System.Collections.Hashtable hthhz = new System.Collections.Hashtable();
                        System.Collections.Hashtable hthhz2 = new System.Collections.Hashtable();

                        hthhz2.Add("CLLX", "1");
                        hthhz2.Add("type", "QUERY");
                        hthhz2.Add("data", hthhz);
                        try
                        {
                            string code, msg;
                            Newtonsoft.Json.Linq.JObject xzobject = new Newtonsoft.Json.Linq.JObject();
                            if (mainPanel.hhzinterface.queryData(hthhz2, HhzWebClient.Hhzclient.DATALX.SDSXZCX, out code, out msg,out xzobject))
                            {
                                ini.INIIO.saveLogInf("上传车型信息至联网平台成功");
                            }
                            else
                            {
                                if (msg.Contains("already exists"))
                                {
                                    hthhz2["type"] = "UPDATE";
                                    if (mainPanel.hhzinterface.uploadJsonArray(hthhz2, HhzWebClient.Hhzclient.DATALX.CXXX, out code, out msg))
                                    {
                                        ini.INIIO.saveLogInf("更新车型信息至联网平台成功");
                                    }
                                    else
                                    {
                                        MessageBox.Show("更新车型信息至联网平台失败:code=" + code + ",msg=" + msg);
                                        return;
                                    }
                                }
                                else
                                {
                                    MessageBox.Show("上传车型信息至联网平台失败:code=" + code + ",msg=" + msg);
                                    return;
                                }
                            }
                        }
                        catch (Exception er)
                        {
                            MessageBox.Show("上传或更新车型信息至联网平台发生异常:" + er.Message);
                            return;
                        }
                        #endregion
                    }
                }*/
                sds_xzgb = gbdal.Get_SDS_XZGB();
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                {
                    switch (carLogin.carbjJh.EPVTYPE)
                    {
                        case "M11": Cllx = "第一类轻型汽车"; break;
                        case "MN2": Cllx = "第二类轻型汽车"; break;
                        case "MN3": Cllx = "重型汽车"; break;
                        default:
                            if (int.Parse(carLogin.modelbj.HDZK) <= 6 && int.Parse(carLogin.modelbj.ZZL) <= 2500)     //第一类轻型汽车
                                Cllx = "第一类轻型汽车";
                            else if (int.Parse(carLogin.modelbj.ZZL) <= 3500)       //第二类轻型汽车
                                Cllx = "第二类轻型汽车";
                            else
                                Cllx = "重型汽车";              //重型汽车
                            break;
                    }
                }
                else
                {
                    if (int.Parse(carLogin.modelbj.HDZK) <= 6 && int.Parse(carLogin.modelbj.ZZL) <= 2500)     //第一类轻型汽车
                        Cllx = "第一类轻型汽车";
                    else if (int.Parse(carLogin.modelbj.ZZL) <= 3500)       //第二类轻型汽车
                        Cllx = "第二类轻型汽车";
                    else
                        Cllx = "重型汽车";              //重型汽车
                }
                ini.INIIO.saveLogInf("车辆类型：" + Cllx);
                switch (Cllx)
                {
                    case "第一类轻型汽车":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("1995-07-01")) < 0)    //1995年7月1日前生产的第一类轻型汽车
                        {
                            //H_HC_XZ = 900;
                            //H_CO_XZ = 3.0f;
                            //L_HC_XZ = 1200;
                            //L_CO_XZ = 4.5f;
                            H_HC_XZ = double.Parse(sds_xzgb.Hd1Date19950701qHC);
                            H_CO_XZ = double.Parse(sds_xzgb.Hd1Date19950701qCO);
                            L_HC_XZ = double.Parse(sds_xzgb.d1Date19950701qHC);
                            L_CO_XZ = double.Parse(sds_xzgb.d1Date19950701qCO);
                        }
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("1995-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2000-07-01")) < 0)    //1995年7月1日到2000年7月1日生产的第一类轻型汽车
                        {
                            //H_HC_XZ = 900;
                            //H_CO_XZ = 3.0f;
                            //L_HC_XZ = 900;
                            //L_CO_XZ = 4.5f;
                            H_HC_XZ = double.Parse(sds_xzgb.Hd1Date1995070120000701HC);
                            H_CO_XZ = double.Parse(sds_xzgb.Hd1Date1995070120000701CO);
                            L_HC_XZ = double.Parse(sds_xzgb.d1Date1995070120000701HC);
                            L_CO_XZ = double.Parse(sds_xzgb.d1Date1995070120000701CO);
                        }
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2000-07-01")) >= 0)    //2000年7月1日起生产的第一类轻型汽车
                        {
                            //H_HC_XZ = 100;
                            //H_CO_XZ = 0.3f;
                            //L_HC_XZ = 150;
                            //L_CO_XZ = 0.8f;
                            H_HC_XZ = double.Parse(sds_xzgb.Hd1Date20000701HC);
                            H_CO_XZ = double.Parse(sds_xzgb.Hd1Date20000701CO);
                            L_HC_XZ = double.Parse(sds_xzgb.d1Date20000701HC);
                            L_CO_XZ = double.Parse(sds_xzgb.d1Date20000701CO);
                        }
                        break;
                    case "第二类轻型汽车":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("1995-07-01")) < 0)    //1995年7月1日前生产的第二类轻型汽车
                        {
                            //H_HC_XZ = 900;
                            //H_CO_XZ = 3.0f;
                            //L_HC_XZ = 1200;
                            //L_CO_XZ = 4.5f;
                            H_HC_XZ = double.Parse(sds_xzgb.Hd2Date19950701qHC);
                            H_CO_XZ = double.Parse(sds_xzgb.Hd2Date19950701qCO);
                            L_HC_XZ = double.Parse(sds_xzgb.d2Date19950701qHC);
                            L_CO_XZ = double.Parse(sds_xzgb.d2Date19950701qCO);
                        }
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("1995-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-10-01")) < 0)    //1995年7月1日到2001年10月1日生产的第二类轻型汽车
                        {
                            //H_HC_XZ = 900;
                            //H_CO_XZ = 3.0f;
                            //L_HC_XZ = 900;
                            //L_CO_XZ = 4.5f;
                            H_HC_XZ = double.Parse(sds_xzgb.Hd2Date1995070120011001HC);
                            H_CO_XZ = double.Parse(sds_xzgb.Hd2Date1995070120011001CO);
                            L_HC_XZ = double.Parse(sds_xzgb.d2Date1995070120011001HC);
                            L_CO_XZ = double.Parse(sds_xzgb.d2Date1995070120011001CO);
                        }
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2001-10-01")) >= 0)    //2001年10月1日起生产的第二类轻型汽车
                        {
                            //H_HC_XZ = 150;
                            //H_CO_XZ = 0.5f;
                            //L_HC_XZ = 200;
                            //L_CO_XZ = 1.0f;
                            H_HC_XZ = double.Parse(sds_xzgb.Hd2Date20011001HC);
                            H_CO_XZ = double.Parse(sds_xzgb.Hd2Date20011001CO);
                            L_HC_XZ = double.Parse(sds_xzgb.d2Date20011001HC);
                            L_CO_XZ = double.Parse(sds_xzgb.d2Date20011001CO);
                        }
                        break;
                    case "重型汽车":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("1995-07-01")) < 0)    //1995年7月1日前生产的重型汽车
                        {
                            //H_HC_XZ = 1200;
                            //H_CO_XZ = 3.5f;
                            //L_HC_XZ = 2000;
                            //L_CO_XZ = 5.0f;
                            H_HC_XZ = double.Parse(sds_xzgb.HzxDate19950701qHC);
                            H_CO_XZ = double.Parse(sds_xzgb.HzxDate19950701qCO);
                            L_HC_XZ = double.Parse(sds_xzgb.zxDate19950701qHC);
                            L_CO_XZ = double.Parse(sds_xzgb.zxDate19950701qCO);
                        }
                        else if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("1995-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2004-09-01")) < 0)   //1995年7月1日生产到2004年9月1日生产的重型汽车
                        {
                            //H_HC_XZ = 900;
                            //H_CO_XZ = 3.0f;
                            //L_HC_XZ = 1200;
                            //L_CO_XZ = 4.5f;
                            H_HC_XZ = double.Parse(sds_xzgb.HzxDate1995070120040901HC);
                            H_CO_XZ = double.Parse(sds_xzgb.HzxDate1995070120040901CO);
                            L_HC_XZ = double.Parse(sds_xzgb.zxDate1995070120040901HC);
                            L_CO_XZ = double.Parse(sds_xzgb.zxDate1995070120040901CO);
                        }
                        else
                        {
                            //H_HC_XZ = 200;
                            //H_CO_XZ = 0.7f;
                            //L_HC_XZ = 250;
                            //L_CO_XZ = 1.5f;
                            H_HC_XZ = double.Parse(sds_xzgb.HzxDate20040901HC);
                            H_CO_XZ = double.Parse(sds_xzgb.HzxDate20040901CO);
                            L_HC_XZ = double.Parse(sds_xzgb.zxDate20040901HC);
                            L_CO_XZ = double.Parse(sds_xzgb.zxDate20040901CO);
                        }
                        break;
                }
                λ_XZ = "1.00±0.03";
                ini.INIIO.saveLogInf("车辆限值：HC_HIGH:" + H_HC_XZ.ToString() + "|CO_HIGH:" + H_CO_XZ.ToString() + "|HC_LOW:" + L_HC_XZ.ToString() + "|CO_LOW:" + L_CO_XZ.ToString());
                Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:" + H_HC_XZ.ToString() + "|高怠速CO:" + H_CO_XZ.ToString() + "|怠速HC:" + L_HC_XZ.ToString() + "|怠速CO:" + L_CO_XZ.ToString());

            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("初始化排放限值异常：" + er.Message);
                Msg(label1, panel4, "初始化排放限值出错，请检查被检车辆信息是否正确！");
                buttonOK.Enabled = false;
            }
        }
        public void Init_SdsMLimit()
        {
            try
            {
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.XBNETMODE)
                {
                    ini.INIIO.saveLogInf("(喜邦联网)取摩托车双怠速限值");
                    if (carLogin.xbsdsmxz != null)
                    {
                        sdsm_xz_lx = 1;
                        H_HC_SDSM_XZ = 0;
                        H_CO_SDSM_XZ = 0;
                        L_HC_SDSM_XZ = carLogin.xbsdsmxz.DSHCStd;
                        L_CO_SDSM_XZ = carLogin.xbsdsmxz.DSCOStd;
                        btgzsxz = 0;      //初始化功率限值
                        λ_XZ = "1.00±0.03";
                        if (sdsm_xz_lx == 5)
                        {
                            Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:" + H_HC_SDSM_XZ.ToString() + "|高怠速CO:" + H_CO_SDSM_XZ.ToString() + "|怠速HC:" + L_HC_SDSM_XZ.ToString() + "|怠速CO:" + L_CO_SDSM_XZ.ToString());
                            ini.INIIO.saveLogInf("限值类型:" + sdsm_xz_lx.ToString() + "|车辆限值：HC_HIGH:" + H_HC_SDSM_XZ.ToString() + "|CO_HIGH:" + H_CO_SDSM_XZ.ToString() + "|HC_LOW:" + L_HC_SDSM_XZ.ToString() + "|CO_LOW:" + L_CO_SDSM_XZ.ToString());
                        }
                        else
                        {
                            Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:-|高怠速CO:-|怠速HC:" + L_HC_SDSM_XZ.ToString() + "|怠速CO:" + L_CO_SDSM_XZ.ToString());
                            ini.INIIO.saveLogInf("限值类型:" + sdsm_xz_lx.ToString() + "|车辆限值：HC_HIGH:-|CO_HIGH:-|HC_LOW:" + L_HC_SDSM_XZ.ToString() + "|CO_LOW:" + L_CO_SDSM_XZ.ToString());
                        }
                    }
                    else
                    {
                        ini.INIIO.saveLogInf(carLogin.carbj.CLHP + "取联网限值失败");
                        Msg(labelXZ, panelXZ, "车辆限值：获取联网限值失败");
                        buttonOK.Enabled = false;
                    }
                    return;
                }
                if (carLogin.modelbj.CCS == "")
                {
                    carLogin.modelbj.CCS = "4";
                    ini.INIIO.saveLogInf("车辆信息冲程数为空，默认采用4");
                }
                switch (carLogin.modelbj.CCS)
                {
                    case "2":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2003-07-01")) < 0)    //1995年7月1日前生产的第一类轻型汽车
                        {
                            //H_HC_XZ = 900;
                            //H_CO_XZ = 3.0f;
                            //L_HC_XZ = 1200;
                            //L_CO_XZ = 4.5f;
                            H_HC_SDSM_XZ = 0;
                            H_CO_SDSM_XZ = 0;
                            L_HC_SDSM_XZ = 8000;
                            L_CO_SDSM_XZ = 4.5;
                            sdsm_xz_lx = 1;
                        }
                        else
                        {
                            if (carLogin.modelbj.CLLX.StartsWith("M2")|| carLogin.modelbj.CLLX.Contains("两轮") || carLogin.modelbj.CLLX.Contains("二轮"))//二轮摩托车
                            {
                                if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2003-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2010-07-01")) < 0)    //1995年7月1日到2000年7月1日生产的第一类轻型汽车
                                {
                                    H_HC_SDSM_XZ = 0;
                                    H_CO_SDSM_XZ = 0;
                                    L_HC_SDSM_XZ = 4500;
                                    L_CO_SDSM_XZ = 4.5;
                                    sdsm_xz_lx = 3;
                                }
                                if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2010-07-01")) >= 0)    //2000年7月1日起生产的第一类轻型汽车
                                {
                                    H_HC_SDSM_XZ = 400;
                                    H_CO_SDSM_XZ = 3.0;
                                    L_HC_SDSM_XZ = 400;
                                    L_CO_SDSM_XZ = 3.0;
                                    sdsm_xz_lx = 5;
                                }
                            }
                            else if (carLogin.modelbj.CLLX.StartsWith("M1") || carLogin.modelbj.CLLX.Contains("三轮"))//三轮摩托车
                            {
                                if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2003-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2011-07-01")) < 0)    //1995年7月1日到2000年7月1日生产的第一类轻型汽车
                                {
                                    H_HC_SDSM_XZ = 0;
                                    H_CO_SDSM_XZ = 0;
                                    L_HC_SDSM_XZ = 4500;
                                    L_CO_SDSM_XZ = 4.5;
                                    sdsm_xz_lx = 3;
                                }
                                if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2011-07-01")) >= 0)    //2000年7月1日起生产的第一类轻型汽车
                                {
                                    H_HC_SDSM_XZ = 400;
                                    H_CO_SDSM_XZ = 3.0;
                                    L_HC_SDSM_XZ = 400;
                                    L_CO_SDSM_XZ = 3.0;
                                    sdsm_xz_lx = 5;
                                }
                            }
                            else
                            {
                                ini.INIIO.saveLogInf("初始化排放限值失败，车辆类型不属于摩托车:" + carLogin.modelbj.CLLX);
                                Msg(label1, panel4, "初始化排放限值失败，车辆类型不属于摩托车:" + carLogin.modelbj.CLLX);
                                buttonOK.Enabled = false;
                            }
                        }
                        break;
                    case "4":
                        if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2003-07-01")) < 0)    //1995年7月1日前生产的第一类轻型汽车
                        {
                            //H_HC_XZ = 900;
                            //H_CO_XZ = 3.0f;
                            //L_HC_XZ = 1200;
                            //L_CO_XZ = 4.5f;
                            H_HC_SDSM_XZ = 0;
                            H_CO_SDSM_XZ = 0;
                            L_HC_SDSM_XZ = 2200;
                            L_CO_SDSM_XZ = 4.5;
                            sdsm_xz_lx = 2;
                        }
                        else
                        {
                            if (carLogin.modelbj.CLLX.StartsWith("M2") || carLogin.modelbj.CLLX.Contains("两轮") || carLogin.modelbj.CLLX.Contains("二轮"))//二轮摩托车
                            {
                                if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2003-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2010-07-01")) < 0)    //1995年7月1日到2000年7月1日生产的第一类轻型汽车
                                {
                                    H_HC_SDSM_XZ = 0;
                                    H_CO_SDSM_XZ = 0;
                                    L_HC_SDSM_XZ = 1200;
                                    L_CO_SDSM_XZ = 4.5;
                                    sdsm_xz_lx = 4;
                                }
                                if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2010-07-01")) >= 0)    //2000年7月1日起生产的第一类轻型汽车
                                {
                                    H_HC_SDSM_XZ = 400;
                                    H_CO_SDSM_XZ = 3.0;
                                    L_HC_SDSM_XZ = 400;
                                    L_CO_SDSM_XZ = 3.0;
                                    sdsm_xz_lx = 5;
                                }
                            }
                            else if (carLogin.modelbj.CLLX.StartsWith("M1") || carLogin.modelbj.CLLX.Contains("三轮"))//三轮摩托车
                            {
                                if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2003-07-01")) >= 0 && DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2011-07-01")) < 0)    //1995年7月1日到2000年7月1日生产的第一类轻型汽车
                                {
                                    H_HC_SDSM_XZ = 0;
                                    H_CO_SDSM_XZ = 0;
                                    L_HC_SDSM_XZ = 1200;
                                    L_CO_SDSM_XZ = 4.5;
                                    sdsm_xz_lx = 4;
                                }
                                if (DateTime.Compare(carLogin.modelbj.SCRQ, Convert.ToDateTime("2011-07-01")) >= 0)    //2000年7月1日起生产的第一类轻型汽车
                                {
                                    H_HC_SDSM_XZ = 400;
                                    H_CO_SDSM_XZ = 3.0;
                                    L_HC_SDSM_XZ = 400;
                                    L_CO_SDSM_XZ = 3.0;
                                    sdsm_xz_lx = 5;
                                }
                            }
                            else
                            {
                                ini.INIIO.saveLogInf("初始化排放限值失败，车辆类型不属于摩托车:" + carLogin.modelbj.CLLX);
                                Msg(label1, panel4, "初始化排放限值失败，车辆类型不属于摩托车:" + carLogin.modelbj.CLLX);
                                buttonOK.Enabled = false;
                            }
                        }
                        break;
                    default:
                        ini.INIIO.saveLogInf("初始化排放限值失败，冲程数无效:"+carLogin.modelbj.CCS);
                        Msg(label1, panel4, "初始化排放限值失败，冲程数无效:" + carLogin.modelbj.CCS);
                        buttonOK.Enabled = false;
                        break;
                }
                λ_XZ = "1.00±0.03";
                if (sdsm_xz_lx == 5)
                {
                    Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:" + H_HC_SDSM_XZ.ToString() + "|高怠速CO:" + H_CO_SDSM_XZ.ToString() + "|怠速HC:" + L_HC_SDSM_XZ.ToString() + "|怠速CO:" + L_CO_SDSM_XZ.ToString());
                    ini.INIIO.saveLogInf("限值类型:" + sdsm_xz_lx.ToString() + "|车辆限值：HC_HIGH:" + H_HC_SDSM_XZ.ToString() + "|CO_HIGH:" + H_CO_SDSM_XZ.ToString() + "|HC_LOW:" + L_HC_SDSM_XZ.ToString() + "|CO_LOW:" + L_CO_SDSM_XZ.ToString());
                }
                else
                {
                    Msg(labelXZ, panelXZ, "车辆限值：高怠速HC:-|高怠速CO:-|怠速HC:" + L_HC_SDSM_XZ.ToString() + "|怠速CO:" + L_CO_SDSM_XZ.ToString());
                    ini.INIIO.saveLogInf("限值类型:" + sdsm_xz_lx.ToString() + "|车辆限值：HC_HIGH:-|CO_HIGH:-|HC_LOW:" + L_HC_SDSM_XZ.ToString() + "|CO_LOW:" + L_CO_SDSM_XZ.ToString());
                }

            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("初始化排放限值异常：" + er.Message);
                Msg(label1, panel4, "初始化排放限值出错，请检查被检车辆信息是否正确！");
                buttonOK.Enabled = false;
            }
        }
        private bool saveBjclInf(CARINF modelInf, CARATWAIT modelWait, string jcjg)
        {
            try
            {
                //mainPanel.lshmodel = mainPanel.stationcontrol.getLineLshInf(mainPanel.stationid, mainPanel.lineid);
                //int lshcount = int.Parse(mainPanel.lshmodel.COUNT);
                CARDETECTED model = new CARDETECTED();
                carinfor.resultData resultdata = new carinfor.resultData();
                string jcgcsj = jcsj.ToString("yyyy-MM-dd HH:mm:ss") + "-" + jssj.ToString("HH:mm:ss");
                model.jcgcsj = jcgcsj;
                model.wjy = "";
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
                {
                    model.CLID = modelWait.CLID;

                    model.STATIONID = mainPanel.stationid;
                    model.LINEID = mainPanel.lineid;
                    model.ZXBZ = zxbz;
                    model.DLSJ = modelWait.DLSJ;
                    model.JCSJ = jcsj;
                    model.JCFF = modelWait.JCFF;
                    model.XSLC = modelWait.XSLC;
                    model.JCJG = jcjg;
                    model.JCCS = modelWait.JCCS;
                    model.LSH = modelWait.JCBGBH;
                    model.CLHP = modelInf.CLHP;//1
                    model.CPYS = carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.PLATE_TYPE, modelInf.HPZL, "");
                    model.CLLX = carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.VEHICLE_KIND, modelInf.CLLX, "");
                    model.CZ = modelInf.CZ;
                    model.SYXZ = carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.IS_SERVICE_CAR, modelInf.SYXZ, ""); //modelInf.SYXZ;
                    model.PP = modelInf.PP;//5
                    model.XH = modelInf.XH;
                    model.CLSBM = modelInf.CLSBM;
                    model.FDJHM = modelInf.FDJHM;
                    model.FDJXH = modelInf.FDJXH;
                    model.SCQY = modelInf.SCQY;//10
                    model.HDZK = modelInf.HDZK;
                    model.JSSZK = modelInf.JSSZK;
                    model.ZZL = modelInf.ZZL;
                    model.HDZZL = modelInf.HDZZL;
                    model.ZBZL = modelInf.ZBZL;//15
                    model.JZZL = modelInf.JZZL;
                    model.ZCRQ = modelInf.ZCRQ;
                    model.SCRQ = modelInf.SCRQ;
                    model.FDJPL = modelInf.FDJPL;
                    model.RLZL = carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.FUEL_TYPE, modelInf.RLZL, ""); //modelInf.RLZL;//20
                    model.EDGL = modelInf.EDGL;
                    model.EDZS = modelInf.EDZS;
                    model.BSQXS = carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.DRIVE_FORM, modelInf.BSQXS, ""); //modelInf.BSQXS;
                    model.DWS = modelInf.DWS;
                    model.GYFS = carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.SUPPLY_MODE, modelInf.GYFS, ""); //modelInf.GYFS;//25
                    model.DPFS = modelInf.DPFS; //modelInf.DPFS;
                    model.JQFS = carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.ADMISSION, modelInf.JQFS, ""); //modelInf.JQFS;
                    model.QGS = modelInf.QGS;
                    model.QDXS = modelInf.QDXS; //modelInf.QDXS;
                    model.CHZZ = ""; //modelInf.CHZZ;//30
                    model.DLSP = modelInf.DLSP;
                    model.SFSRL = modelInf.SFSRL;
                    model.JHZZ = carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.HAS_PURGE, modelInf.JHZZ, "有"); //modelInf.JHZZ;
                    if (model.JHZZ == "") model.JHZZ = "有";
                    model.OBD = modelInf.OBD;
                    model.DKGYYB = modelInf.DKGYYB;//35
                    model.LXDH = modelInf.LXDH;
                    model.CZY = modelWait.CZY;
                    model.JSY = modelWait.JSY;
                    model.DLY = modelWait.DLY;//35
                    model.JCZMC = mainPanel.thisLineName;
                    model.JCFY = modelWait.JCFY;
                    model.SFJF = "N";
                    model.TEST = modelWait.TEST;
                    model.HPZL = carinfor.DictionaryExtensionMethodClass.GetValue(mainPanel.jsinterface.PLATE_TYPE, modelWait.HPZL, "");
                    model.QDLTQY = modelInf.QDLTQY;
                    model.RYPH = modelInf.RYPH;
                    model.CCS = modelInf.CCS;
                    model.ZDJGL = modelInf.ZDJGL;
                    model.CYXZ = modelInf.CYXZ;
                }
                else if (mainPanel.isNetUsed && (mainPanel.NetMode == mainPanel.AHNETMODE || mainPanel.NetMode == mainPanel.JINGHUANETMODE || mainPanel.NetMode == mainPanel.NHNETMODE || mainPanel.NetMode == mainPanel.JXNETMODE || mainPanel.NetMode == mainPanel.TYNETMODE || mainPanel.NetMode == mainPanel.HNNETMODE || mainPanel.NetMode == mainPanel.DALINETMODE||mainPanel.NetMode==mainPanel.ORTNETMODE||mainPanel.NetMode==mainPanel.GUILINNETMODE||mainPanel.NetMode==mainPanel.EZNETMODE||mainPanel.NetMode==mainPanel.HHZNNETMODE))
                {
                    model.CLID = modelWait.CLID;
                    if (mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                    {
                        if (mainPanel.jhwebinf.checkprint)//如果上传的时候 验证打印了，则CLID设为验证过后的报告编号
                        {
                            model.CLID = modelWait.JCBGBH;
                        }
                        else                              //如果未验证，则用之前平台返回 的ID号为车辆ID号
                        {
                            model.CLID = modelWait.ECRYPT;
                        }
                        model.wjy = carLogin.carbjJh.REGAPPEARANCEPERSON;
                    }
                    model.STATIONID = mainPanel.stationid;
                    model.LINEID = mainPanel.lineid;
                    model.ZXBZ = modelInf.ZXBZ;
                    if (mainPanel.NetMode == mainPanel.JXNETMODE)
                    {
                        model.ZXBZ = mainPanel.jxinterface.JX_EMISSIONSTANDARD.GetValue(carLogin.jxthiscarinf.emissionStandard, "");
                    }
                    if (mainPanel.NetMode == mainPanel.NHNETMODE)
                    {
                        model.ZXBZ = carLogin.vehicleinfo.EPSign;
                    }
                    model.DLSJ = modelWait.DLSJ;
                    model.JCSJ = jcsj;
                    model.JCFF = modelWait.JCFF;
                    model.XSLC = modelWait.XSLC;
                    model.JCJG = jcjg;
                    model.JCCS = modelWait.JCCS;
                    model.LSH = modelWait.JCBGBH;
                    if (mainPanel.NetMode == mainPanel.DALINETMODE)
                    {
                        model.LSH = dalijcbgbh;
                    }
                    model.CLHP = modelInf.CLHP;//1
                    model.CPYS = modelInf.CPYS;
                    model.CLLX = modelInf.CLLX;
                    model.CZ = modelInf.CZ;
                    model.SYXZ = modelInf.SYXZ;
                    model.PP = modelInf.PP;//5
                    model.XH = modelInf.XH;
                    model.CLSBM = modelInf.CLSBM;
                    model.FDJHM = modelInf.FDJHM;
                    model.FDJXH = modelInf.FDJXH;
                    model.SCQY = modelInf.SCQY;//10
                    model.HDZK = modelInf.HDZK;
                    model.JSSZK = modelInf.JSSZK;
                    model.ZZL = modelInf.ZZL;
                    model.HDZZL = modelInf.HDZZL;
                    model.ZBZL = modelInf.ZBZL;//15
                    model.JZZL = modelInf.JZZL;
                    model.ZCRQ = modelInf.ZCRQ;
                    model.SCRQ = modelInf.SCRQ;
                    model.FDJPL = modelInf.FDJPL;
                    model.RLZL = modelInf.RLZL;
                    model.EDGL = modelInf.EDGL;
                    model.EDZS = modelInf.EDZS;
                    model.BSQXS = modelInf.BSQXS;
                    model.DWS = modelInf.DWS;
                    model.GYFS = modelInf.GYFS;
                    model.DPFS = modelInf.DPFS; //modelInf.DPFS;
                    model.JQFS = modelInf.JQFS;
                    model.QGS = modelInf.QGS;
                    model.QDXS = modelInf.QDXS; //modelInf.QDXS;
                    model.CHZZ = ""; //modelInf.CHZZ;//30
                    model.DLSP = modelInf.DLSP;
                    model.SFSRL = modelInf.SFSRL;
                    model.JHZZ = modelInf.JHZZ;
                    model.OBD = modelInf.OBD;
                    model.DKGYYB = modelInf.DKGYYB;//35
                    model.LXDH = modelInf.LXDH;
                    model.CZY = modelWait.CZY;
                    model.JSY = modelWait.JSY;
                    model.DLY = modelWait.DLY;//35
                    if (mainPanel.NetMode == mainPanel.NHNETMODE)
                    {
                        model.JCZMC = mainPanel.stationinfmodel.STATIONNAME + "_" + mainPanel.nhwebinf.lineid;
                    }
                    else if (mainPanel.NetMode == mainPanel.DALINETMODE)
                    {
                        model.JCZMC = mainPanel.stationinfmodel.STATIONNAME + "_" + mainPanel.lineid;
                    }
                    else if (mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                    {
                        model.JCZMC = mainPanel.stationinfmodel.STATIONNAME + "_" + mainPanel.jhwebinf.lineid;
                    }
                    else
                    {
                        model.JCZMC = mainPanel.stationinfmodel.STATIONNAME + "_" + mainPanel.lineid;
                    }
                    model.JCFY = modelWait.JCFY;
                    model.SFJF = "N";
                    model.TEST = modelWait.TEST;
                    model.HPZL = modelInf.HPZL;
                    model.QDLTQY = modelInf.QDLTQY;
                    model.RYPH = modelInf.RYPH;
                    model.CCS = modelInf.CCS;
                    model.ZDJGL = modelInf.ZDJGL;
                    model.CYXZ = modelInf.CYXZ;


                }

                else if (carLogin.carbj.SOURCE=="1")
                {
                    model.CLID = modelWait.CLID;
                    if (mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                    {
                        if (mainPanel.jhwebinf.checkprint)//如果上传的时候 验证打印了，则CLID设为验证过后的报告编号
                        {
                            model.CLID = modelWait.JCBGBH;
                        }
                        else                              //如果未验证，则用之前平台返回 的ID号为车辆ID号
                        {
                            model.CLID = modelWait.ECRYPT;
                        }
                        model.wjy = carLogin.carbjJh.REGAPPEARANCEPERSON;
                    }
                    model.STATIONID = mainPanel.stationid;
                    model.LINEID = mainPanel.lineid;
                    model.ZXBZ = modelInf.ZXBZ;
                    if (mainPanel.NetMode == mainPanel.JXNETMODE)
                    {
                        model.ZXBZ = mainPanel.jxinterface.JX_EMISSIONSTANDARD.GetValue(carLogin.jxthiscarinf.emissionStandard, "");
                    }
                    if (mainPanel.NetMode == mainPanel.NHNETMODE)
                    {
                        model.ZXBZ = carLogin.vehicleinfo.EPSign;
                    }
                    model.DLSJ = modelWait.DLSJ;
                    model.JCSJ = jcsj;
                    model.JCFF = modelWait.JCFF;
                    model.XSLC = modelWait.XSLC;
                    model.JCJG = jcjg;
                    model.JCCS = modelWait.JCCS;
                    model.LSH = modelWait.JCBGBH;
                    if (mainPanel.NetMode == mainPanel.DALINETMODE)
                    {
                        model.LSH = dalijcbgbh;
                    }
                    model.CLHP = modelInf.CLHP;//1
                    model.CPYS = modelInf.CPYS;
                    model.CLLX = modelInf.CLLX;
                    model.CZ = modelInf.CZ;
                    model.SYXZ = modelInf.SYXZ;
                    model.PP = modelInf.PP;//5
                    model.XH = modelInf.XH;
                    model.CLSBM = modelInf.CLSBM;
                    model.FDJHM = modelInf.FDJHM;
                    model.FDJXH = modelInf.FDJXH;
                    model.SCQY = modelInf.SCQY;//10
                    model.HDZK = modelInf.HDZK;
                    model.JSSZK = modelInf.JSSZK;
                    model.ZZL = modelInf.ZZL;
                    model.HDZZL = modelInf.HDZZL;
                    model.ZBZL = modelInf.ZBZL;//15
                    model.JZZL = modelInf.JZZL;
                    model.ZCRQ = modelInf.ZCRQ;
                    model.SCRQ = modelInf.SCRQ;
                    model.FDJPL = modelInf.FDJPL;
                    model.RLZL = modelInf.RLZL;
                    model.EDGL = modelInf.EDGL;
                    model.EDZS = modelInf.EDZS;
                    model.BSQXS = modelInf.BSQXS;
                    model.DWS = modelInf.DWS;
                    model.GYFS = modelInf.GYFS;
                    model.DPFS = modelInf.DPFS; //modelInf.DPFS;
                    model.JQFS = modelInf.JQFS;
                    model.QGS = modelInf.QGS;
                    model.QDXS = modelInf.QDXS; //modelInf.QDXS;
                    model.CHZZ = ""; //modelInf.CHZZ;//30
                    model.DLSP = modelInf.DLSP;
                    model.SFSRL = modelInf.SFSRL;
                    model.JHZZ = modelInf.JHZZ;
                    model.OBD = modelInf.OBD;
                    model.DKGYYB = modelInf.DKGYYB;//35
                    model.LXDH = modelInf.LXDH;
                    model.CZY = modelWait.CZY;
                    model.JSY = modelWait.JSY;
                    model.DLY = modelWait.DLY;//35
                    if (mainPanel.NetMode == mainPanel.NHNETMODE)
                    {
                        model.JCZMC = mainPanel.stationinfmodel.STATIONNAME + "_" + mainPanel.nhwebinf.lineid;
                    }
                    else if (mainPanel.NetMode == mainPanel.DALINETMODE)
                    {
                        model.JCZMC = mainPanel.stationinfmodel.STATIONNAME + "_" + mainPanel.lineid;
                    }
                    else if (mainPanel.NetMode == mainPanel.JINGHUANETMODE)
                    {
                        model.JCZMC = mainPanel.stationinfmodel.STATIONNAME + "_" + mainPanel.jhwebinf.lineid;
                    }
                    else
                    {
                        model.JCZMC = mainPanel.stationinfmodel.STATIONNAME + "_" + mainPanel.lineid;
                    }
                    model.JCFY = modelWait.JCFY;
                    model.SFJF = "N";
                    model.TEST = modelWait.TEST;
                    model.HPZL = modelInf.HPZL;
                    model.QDLTQY = modelInf.QDLTQY;
                    model.RYPH = modelInf.RYPH;
                    model.CCS = modelInf.CCS;
                    model.ZDJGL = modelInf.ZDJGL;
                    model.CYXZ = modelInf.CYXZ;


                }
                else if (mainPanel.useHyDatabase)
                {
                    model.CLID = modelWait.CLID;
                    model.STATIONID = mainPanel.stationid;
                    model.LINEID = mainPanel.lineid;
                    model.ZXBZ = modelInf.ZXBZ;
                    model.DLSJ = modelWait.DLSJ;
                    model.JCSJ = jcsj;
                    model.JCFF = modelWait.JCFF;
                    model.XSLC = modelWait.XSLC;
                    model.JCJG = jcjg;
                    model.JCCS = modelWait.JCCS;
                    model.LSH = modelWait.JCBGBH;
                    model.CLHP = modelInf.CLHP;//1
                    model.CPYS = modelInf.CPYS;
                    model.CLLX = mainPanel.logininfcontrol.getComBoBoxItemsNAME("车辆类型", modelInf.CLLX);// modelInf.CLLX;
                    model.CZ = modelInf.CZ;
                    model.SYXZ =mainPanel.acDicSyxz.GetValue(modelInf.SYXZ,""); //modelInf.SYXZ;
                    model.PP = modelInf.PP;//5
                    model.XH = modelInf.XH;
                    model.CLSBM = modelInf.CLSBM;
                    model.FDJHM = modelInf.FDJHM;
                    model.FDJXH = modelInf.FDJXH;
                    model.SCQY = modelInf.SCQY;//10
                    model.HDZK = modelInf.HDZK;
                    model.JSSZK = modelInf.JSSZK;
                    model.ZZL = modelInf.ZZL;
                    model.HDZZL = modelInf.HDZZL;
                    model.ZBZL = modelInf.ZBZL;//15
                    model.JZZL = modelInf.JZZL;
                    model.ZCRQ = modelInf.ZCRQ;
                    model.SCRQ = modelInf.SCRQ;
                    model.FDJPL = modelInf.FDJPL;
                    model.RLZL = mainPanel.acDicRlzl.GetValue(modelInf.RLZL,""); //modelInf.RLZL;//20
                    model.EDGL = modelInf.EDGL;
                    model.EDZS = modelInf.EDZS;
                    model.BSQXS = mainPanel.acDicBsqxs.GetValue(modelInf.BSQXS,""); //modelInf.BSQXS;
                    model.DWS = modelInf.DWS;
                    model.GYFS = mainPanel.acDicRyxs.GetValue(modelInf.GYFS,""); //modelInf.GYFS;//25
                    model.DPFS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("电喷方式", modelInf.DPFS); //modelInf.DPFS;
                    model.JQFS = mainPanel.acDicJqfs.GetValue(modelInf.JQFS,""); //modelInf.JQFS;
                    model.QGS = modelInf.QGS;
                    model.QDXS = mainPanel.acDicQdfs.GetValue(modelInf.QDXS,""); //modelInf.QDXS;
                    model.CHZZ = mainPanel.logininfcontrol.getComBoBoxItemsNAME("侧滑装置", modelInf.CHZZ); //modelInf.CHZZ;//30
                    model.DLSP = modelInf.DLSP;
                    model.SFSRL = modelInf.SFSRL;
                    model.JHZZ = mainPanel.acDicPqhclzz.GetValue(modelInf.JHZZ,""); //modelInf.JHZZ;
                    model.OBD = modelInf.OBD;
                    model.DKGYYB = modelInf.DKGYYB;//35
                    model.LXDH = modelInf.LXDH;
                    model.CZY = modelWait.CZY;
                    model.JSY = modelWait.JSY;
                    model.DLY = modelWait.DLY;//35
                    model.JCZMC = mainPanel.thisLineName;
                    model.JCFY = modelWait.JCFY;
                    model.SFJF = "N";
                    model.TEST = modelWait.TEST;
                    model.HPZL = modelWait.HPZL;
                    model.QDLTQY = modelInf.QDLTQY;
                    model.RYPH = modelInf.RYPH;
                    model.CCS = modelInf.CCS;
                    model.ZDJGL = modelInf.ZDJGL;
                    model.CYXZ = modelInf.CYXZ;
                }
                else
                {
                    model.CLID = modelWait.CLID;
                    model.STATIONID = mainPanel.stationid;
                    model.LINEID = mainPanel.lineid;
                    model.ZXBZ = zxbz;
                    model.DLSJ = modelWait.DLSJ;
                    model.JCSJ = jcsj;
                    model.JCFF = modelWait.JCFF;
                    model.XSLC = modelWait.XSLC;
                    model.JCJG = jcjg;
                    model.JCCS = modelWait.JCCS;
                    model.LSH = modelWait.JCBGBH;
                    model.CLHP = modelInf.CLHP;//1
                    model.CPYS = modelInf.CPYS;
                    model.CLLX = mainPanel.logininfcontrol.getComBoBoxItemsNAME("车辆类型", modelInf.CLLX);// modelInf.CLLX;
                    model.CZ = modelInf.CZ;
                    model.SYXZ = mainPanel.logininfcontrol.getComBoBoxItemsNAME("使用性质", modelInf.SYXZ); //modelInf.SYXZ;
                    model.PP = modelInf.PP;//5
                    model.XH = modelInf.XH;
                    model.CLSBM = modelInf.CLSBM;
                    model.FDJHM = modelInf.FDJHM;
                    model.FDJXH = modelInf.FDJXH;
                    model.SCQY = modelInf.SCQY;//10
                    model.HDZK = modelInf.HDZK;
                    model.JSSZK = modelInf.JSSZK;
                    model.ZZL = modelInf.ZZL;
                    model.HDZZL = modelInf.HDZZL;
                    model.ZBZL = modelInf.ZBZL;//15
                    model.JZZL = modelInf.JZZL;
                    model.ZCRQ = modelInf.ZCRQ;
                    model.SCRQ = modelInf.SCRQ;
                    model.FDJPL = modelInf.FDJPL;
                    model.RLZL = mainPanel.logininfcontrol.getComBoBoxItemsNAME("燃料种类", modelInf.RLZL); //modelInf.RLZL;//20
                    model.EDGL = modelInf.EDGL;
                    model.EDZS = modelInf.EDZS;
                    model.BSQXS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("变速器形式", modelInf.BSQXS); //modelInf.BSQXS;
                    model.DWS = modelInf.DWS;
                    model.GYFS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("供油方式", modelInf.GYFS); //modelInf.GYFS;//25
                    model.DPFS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("电喷方式", modelInf.DPFS); //modelInf.DPFS;
                    model.JQFS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("进气方式", modelInf.JQFS); //modelInf.JQFS;
                    model.QGS = modelInf.QGS;
                    model.QDXS = mainPanel.logininfcontrol.getComBoBoxItemsNAME("驱动形式", modelInf.QDXS); //modelInf.QDXS;
                    model.CHZZ = mainPanel.logininfcontrol.getComBoBoxItemsNAME("侧滑装置", modelInf.CHZZ); //modelInf.CHZZ;//30
                    model.DLSP = modelInf.DLSP;
                    model.SFSRL = modelInf.SFSRL;
                    if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.ACNETMODE)
                    {
                        if (model.JHZZ == "0") model.JHZZ = "无";
                        else model.JHZZ = "有";
                        //labelJHZZ.Text = logininfcontrol.getComBoBoxItemsNAME("催化转化器", modelbj.JHZZ);
                    }
                    else
                    {
                        if (model.RLZL.Contains("柴油"))
                            model.JHZZ = mainPanel.logininfcontrol.getComBoBoxItemsNAME("排气后处理装置", modelInf.JHZZ); //modelInf.JHZZ;
                        else
                            model.JHZZ = mainPanel.logininfcontrol.getComBoBoxItemsNAME("催化转化器", modelInf.JHZZ); //modelInf.JHZZ;
                    }
                    model.OBD = modelInf.OBD;
                    model.DKGYYB = modelInf.DKGYYB;//35
                    model.LXDH = modelInf.LXDH;
                    model.CZY = modelWait.CZY;
                    model.JSY = modelWait.JSY;
                    model.DLY = modelWait.DLY;//35
                    model.JCZMC = mainPanel.thisLineName;
                    model.JCFY = modelWait.JCFY;
                    model.SFJF = "N";
                    model.TEST = modelWait.TEST;
                    model.HPZL = modelWait.HPZL;
                    model.QDLTQY = modelInf.QDLTQY;
                    model.RYPH = modelInf.RYPH;
                    model.CCS = modelInf.CCS;
                    model.ZDJGL = modelInf.ZDJGL;
                    model.CYXZ = modelInf.CYXZ;
                }
                model.BGFFYY = modelWait.BGJCFFYY;
                model.JYLSH = modelWait.JYLSH;
                resultdata.Clhp = model.CLHP;
                resultdata.Jcsj = model.JCSJ.ToString("yyyy年MM月dd日 HH:mm:SS");
                resultdata.Jcjg = jcjg;
                carini.writeResultData(resultdata);
                mainPanel.worklogdata.ProjectID = mainPanel.stationid + mainPanel.lineid + DateTime.Now.ToString("yyMMddHHmmss");//线号“00”代表为登录机进行的操作
                mainPanel.worklogdata.ProjectName = "操作日志";
                mainPanel.worklogdata.Stationid = mainPanel.stationid;
                mainPanel.worklogdata.Lineid = mainPanel.lineid;
                mainPanel.worklogdata.Czy = mainPanel.nowUser.userName;
                mainPanel.worklogdata.Data = "车辆" + carLogin.carbj.CLHP + "检测完毕(" + model.JCJG + ")" + ",驾控员:" + carLogin.carbj.JSY + ",检测方法：" + carLogin.carbj.JCFF;
                mainPanel.worklogdata.State = "成功";
                mainPanel.worklogdata.Result = "";
                mainPanel.worklogdata.Date = DateTime.Now;
                mainPanel.worklogdata.Bzsm = "";
                mainPanel.demarcatecontrol.saveWordLogByIni(mainPanel.worklogdata);
                return (mainPanel.logininfcontrol.saveCarbj(model));
            }
            catch (Exception er)
            {
                ini.INIIO.saveLogInf("保存车辆检测信息异常：" + er.Message);
                return false;
            }
        }

        private void btnPlay_Click(object sender, EventArgs e)
        {

        }

        private void btnStop_Click(object sender, EventArgs e)
        {

        }

        private void btnPz_Click(object sender, EventArgs e)
        {
            video.GrabImage(pictureBoxFrontCamera.Handle, "d:\\imgFiles\\" + carLogin.carbj.CLID + ".bmp");
        }
        private void autoPrint(string clid)
        {
            if (clid != "")
            {
                CARDETECTED carbg = mainPanel.logininfcontrol.getCarbjbycarID(clid);
                if (carbg.CLID == "-2")
                {
                    MessageBox.Show("打印报告失败", "系统错误!");
                }
                else
                {
                    LocalReport report = new LocalReport();
                    switch (carbg.JCFF)
                    {
                        case "ASM":
                            asmdata = asmdal.Get_ASM(carbg.CLID);
                            ReportParameter[] rptparaAsm =
                            {
                                new ReportParameter("parameterLsh", carbg.LSH),
                                new ReportParameter("parameterStationName", carbg.JCZMC),
                                new ReportParameter("parameterJcrq", carbg.JCSJ.ToString("G")),
                                new ReportParameter("parameterCzy", carbg.CZY),
                                new ReportParameter("parameterJsy", carbg.JSY),
                                new ReportParameter("parameterClxh", carbg.XH),
                                new ReportParameter("parameterScqy",carbg.SCQY),
                                new ReportParameter("parameterJzzl", carbg.JZZL),
                                new ReportParameter("parameterZzl", carbg.ZZL),
                                new ReportParameter("parameterBsqxs",carbg.BSQXS),
                                new ReportParameter("parameterJqfs",carbg.JQFS),
                                new ReportParameter("parameterFdjxh",carbg.FDJXH),
                                new ReportParameter("parameterGyfs",carbg.GYFS),
                                new ReportParameter("parameterRlzl",carbg.RLZL),
                                new ReportParameter("parameterDws",carbg.DWS),
                                new ReportParameter("parameterXslc",carbg.XSLC+"km"),
                                new ReportParameter("parameterFdjpl",carbg.FDJPL),
                                new ReportParameter("parameterZcrq", carbg.ZCRQ.ToString("D")),
                                new ReportParameter("parameterCllx",carbg.CLLX),
                                new ReportParameter("parameterQdfs",carbg.QDXS),
                                new ReportParameter("parameterChzz",carbg.CHZZ),
                                new ReportParameter("parameterClph",carbg.CLHP),
                                new ReportParameter("parameterCpys",carbg.CPYS),
                                new ReportParameter("parameterClsbm",carbg.CLSBM),
                                new ReportParameter("parameterCz",carbg.CZ),
                                new ReportParameter("parameterSbmc",asmdata.SBZZC),
                                new ReportParameter("parameterCgjxh",asmdata.CGJZZC+":"+asmdata.CGJXH),
                                new ReportParameter("parameterCgjbh",asmdata.CGJBH),
                                new ReportParameter("parameterFxyxh",asmdata.FXYZZC+":"+asmdata.FXYXH),
                                new ReportParameter("parameterFxybh",asmdata.FXYBH),
                                new ReportParameter("parameterWd",asmdata.WD+"℃"),
                                new ReportParameter("parameterDqy",asmdata.DQY+"KPa"),
                                new ReportParameter("parameterSd",asmdata.SD+"%"),
                                new ReportParameter("parameterHC25CLZ",asmdata.HC25CLZ),
                                new ReportParameter("parameterCO25CLZ",asmdata.CO25CLZ),
                                new ReportParameter("parameterNOX25CLZ",asmdata.NOX25CLZ),
                                new ReportParameter("parameterHC40CLZ",asmdata.HC40CLZ),
                                new ReportParameter("parameterCO40CLZ",asmdata.CO40CLZ),
                                new ReportParameter("parameterNOX40CLZ",asmdata.NOX40CLZ),
                                new ReportParameter("parameterHC25PD",asmdata.HC25PD),
                                new ReportParameter("parameterCO25PD",asmdata.CO25PD),
                                new ReportParameter("parameterNOX25PD",asmdata.NOX25PD),
                                new ReportParameter("parameterHC40PD",asmdata.HC40PD),
                                new ReportParameter("parameterCO40PD",asmdata.CO40PD),
                                new ReportParameter("parameterNOX40PD",asmdata.NOX40PD),
                                new ReportParameter("parameterHC25XZ","≤"+asmdata.HC25XZ),
                                new ReportParameter("parameterCO25XZ","≤"+asmdata.CO25XZ),
                                new ReportParameter("parameterNOX25XZ","≤"+asmdata.NOX25XZ),
                                new ReportParameter("parameterHC40XZ","≤"+asmdata.HC40XZ),
                                new ReportParameter("parameterCO40XZ","≤"+asmdata.CO40XZ),
                                new ReportParameter("parameterNOX40XZ","≤"+asmdata.NOX40XZ),
                                new ReportParameter("parameterZHPD",(asmdata.ZHPD=="合格")?"通过":"未通过"),
                                new ReportParameter("parameterJDTEL",mainPanel.otherinf.JDDH),
                                new ReportParameter("parameterFWTEL",mainPanel.otherinf.FWDH),
                                new ReportParameter("parameterBGRQ",DateTime.Now.ToString("D")),
                                new ReportParameter("parameterJCZMC",mainPanel.stationinfmodel.STATIONNAME)
                            };
                            report.ReportEmbeddedResource = "exhaustDetect.ReportAsm.rdlc";
                            report.SetParameters(rptparaAsm);
                            break;
                        case "VMAS":
                            vmasdata = vmasdal.Get_VMAS(carbg.CLID);
                            if (vmasdata.BEFORE == "Y")
                            {
                                ReportParameter[] rptparaBefore =
                                {
                                    new ReportParameter("parameterLsh", carbg.LSH),
                                    new ReportParameter("parameterStationName", carbg.JCZMC),
                                    new ReportParameter("parameterJcrq", carbg.JCSJ.ToString("G")),
                                    new ReportParameter("parameterCzy", carbg.CZY),
                                    new ReportParameter("parameterJsy", carbg.JSY),
                                    new ReportParameter("parameterClxh", carbg.XH),
                                    new ReportParameter("parameterScqy",carbg.SCQY),
                                    new ReportParameter("parameterJzzl", carbg.JZZL),
                                    new ReportParameter("parameterZzl", carbg.ZZL),
                                    new ReportParameter("parameterBsqxs",carbg.BSQXS),
                                    new ReportParameter("parameterJqfs",carbg.JQFS),
                                    new ReportParameter("parameterFdjxh",carbg.FDJXH),
                                    new ReportParameter("parameterGyfs",carbg.GYFS),
                                    new ReportParameter("parameterRlzl",carbg.RLZL),
                                    new ReportParameter("parameterDws",carbg.DWS),
                                    new ReportParameter("parameterXslc",carbg.XSLC+"km"),
                                    new ReportParameter("parameterFdjpl",carbg.FDJPL),
                                    new ReportParameter("parameterZcrq", carbg.ZCRQ.ToString("D")),
                                    new ReportParameter("parameterCllx",carbg.CLLX),
                                    new ReportParameter("parameterQdfs",carbg.QDXS),
                                    new ReportParameter("parameterChzz",carbg.CHZZ),
                                    new ReportParameter("parameterClph",carbg.CLHP),
                                    new ReportParameter("parameterCpys",carbg.CPYS),
                                    new ReportParameter("parameterClsbm",carbg.CLSBM),
                                    new ReportParameter("parameterCz",carbg.CZ),
                                    new ReportParameter("parameterSbmc",vmasdata.SBZZC),
                                    new ReportParameter("parameterSbxh",vmasdata.SBXH),
                                    new ReportParameter("parameterCgjxh",vmasdata.CGJXH),
                                    new ReportParameter("parameterCgjbh",vmasdata.CGJBH),
                                    new ReportParameter("parameterFxyxh",vmasdata.FXYZZC+":"+vmasdata.FXYXH),
                                    new ReportParameter("parameterFxybh",vmasdata.FXYBH),
                                    new ReportParameter("parameterLLj",vmasdata.LLJZZC+":"+vmasdata.LLJXH),
                                    new ReportParameter("parameterLLjbh",vmasdata.LLJBH),
                                    new ReportParameter("parameterWd",vmasdata.WD+"℃"),
                                    new ReportParameter("parameterDqy",vmasdata.DQY+"KPa"),
                                    new ReportParameter("parameterSd",vmasdata.SD+"%"),
                                    new ReportParameter("parameterCOCLZ",vmasdata.COZL),
                                    new ReportParameter("parameterCOXZ","≤"+vmasdata.COXZ),
                                    new ReportParameter("parameterCOPD",vmasdata.COPD),
                                    new ReportParameter("parameterHCCLZ",vmasdata.HCZL),
                                    new ReportParameter("parameterHCXZ","≤"+vmasdata.HCXZ),
                                    new ReportParameter("parameterHCPD",vmasdata.HCPD),
                                    new ReportParameter("parameterNOXCLZ",vmasdata.NOXZL),
                                    new ReportParameter("parameterNOXXZ","≤"+vmasdata.NOXXZ),
                                    new ReportParameter("parameterNOXPD",vmasdata.NOXPD),
                                    new ReportParameter("parameterZHPD",(vmasdata.ZHPD=="合格")?"通过":"未通过"),
                                    new ReportParameter("parameterJDTEL",mainPanel.otherinf.JDDH),
                                    new ReportParameter("parameterFWTEL",mainPanel.otherinf.FWDH),
                                    new ReportParameter("parameterBGRQ",DateTime.Now.ToString("D")),
                                    new ReportParameter("parameterJCZMC",mainPanel.stationinfmodel.STATIONNAME)
                                };
                                report.ReportEmbeddedResource = "exhaustDetect.ReportVmasBefore.rdlc";
                                report.SetParameters(rptparaBefore);
                            }
                            else
                            {
                                ReportParameter[] rptpara =
                                {
                                    new ReportParameter("parameterLsh", carbg.LSH),
                                    new ReportParameter("parameterStationName", carbg.JCZMC),
                                    new ReportParameter("parameterJcrq", carbg.JCSJ.ToString("G")),
                                    new ReportParameter("parameterCzy", carbg.CZY),
                                    new ReportParameter("parameterJsy", carbg.JSY),
                                    new ReportParameter("parameterClxh", carbg.XH),
                                    new ReportParameter("parameterScqy",carbg.SCQY),
                                    new ReportParameter("parameterJzzl", carbg.JZZL),
                                    new ReportParameter("parameterZzl", carbg.ZZL),
                                    new ReportParameter("parameterBsqxs",carbg.BSQXS),
                                    new ReportParameter("parameterJqfs",carbg.JQFS),
                                    new ReportParameter("parameterFdjxh",carbg.FDJXH),
                                    new ReportParameter("parameterGyfs",carbg.GYFS),
                                    new ReportParameter("parameterRlzl",carbg.RLZL),
                                    new ReportParameter("parameterDws",carbg.DWS),
                                    new ReportParameter("parameterXslc",carbg.XSLC+"km"),
                                    new ReportParameter("parameterFdjpl",carbg.FDJPL),
                                    new ReportParameter("parameterZcrq", carbg.ZCRQ.ToString("D")),
                                    new ReportParameter("parameterCllx",carbg.CLLX),
                                    new ReportParameter("parameterQdfs",carbg.QDXS),
                                    new ReportParameter("parameterChzz",carbg.CHZZ),
                                    new ReportParameter("parameterClph",carbg.CLHP),
                                    new ReportParameter("parameterCpys",carbg.CPYS),
                                    new ReportParameter("parameterClsbm",carbg.CLSBM),
                                    new ReportParameter("parameterCz",carbg.CZ),
                                    new ReportParameter("parameterSbmc",vmasdata.SBZZC),
                                    new ReportParameter("parameterSbxh",vmasdata.SBXH),
                                    new ReportParameter("parameterCgjxh",vmasdata.CGJXH),
                                    new ReportParameter("parameterCgjbh",vmasdata.CGJBH),
                                    new ReportParameter("parameterFxyxh",vmasdata.FXYZZC+":"+vmasdata.FXYXH),
                                    new ReportParameter("parameterFxybh",vmasdata.FXYBH),
                                    new ReportParameter("parameterLLj",vmasdata.LLJZZC+":"+vmasdata.LLJXH),
                                    new ReportParameter("parameterLLjbh",vmasdata.LLJBH),
                                    new ReportParameter("parameterWd",vmasdata.WD+"℃"),
                                    new ReportParameter("parameterDqy",vmasdata.DQY+"KPa"),
                                    new ReportParameter("parameterSd",vmasdata.SD+"%"),
                                    new ReportParameter("parameterCOCLZ",vmasdata.COZL),
                                    new ReportParameter("parameterCOXZ","≤"+vmasdata.COXZ),
                                    new ReportParameter("parameterCOPD",vmasdata.COPD),
                                    new ReportParameter("parameterHCCLZ",(double.Parse(vmasdata.HCZL)).ToString("0.00")),
                                    new ReportParameter("parameterNOXCLZ",(double.Parse(vmasdata.NOXZL)).ToString("0.00")),
                                    new ReportParameter("parameterHCNOXXZ","HC+NOx≤"+vmasdata.HCXZ),
                                    new ReportParameter("parameterHCNOXPD",vmasdata.HCPD),
                                    new ReportParameter("parameterZHPD",(vmasdata.ZHPD=="合格")?"通过":"未通过"),
                                    new ReportParameter("parameterJDTEL",mainPanel.otherinf.JDDH),
                                    new ReportParameter("parameterFWTEL",mainPanel.otherinf.FWDH),
                                    new ReportParameter("parameterBGRQ",DateTime.Now.ToString("D")),
                                    new ReportParameter("parameterJCZMC",mainPanel.stationinfmodel.STATIONNAME)
                                };
                                report.ReportEmbeddedResource = "exhaustDetect.ReportVmas.rdlc";
                                report.SetParameters(rptpara);
                            }
                            break;
                        case "JZJS":
                            jzjsdata = jzjsdal.Get_JZJS(carbg.CLID);
                            ReportParameter[] rptparaJzjs =
                            {
                                new ReportParameter("parameterLsh", carbg.LSH),
                                new ReportParameter("parameterStationName", carbg.JCZMC),
                                new ReportParameter("parameterJcrq", carbg.JCSJ.ToString("G")),
                                new ReportParameter("parameterCzy", carbg.CZY),
                                new ReportParameter("parameterJsy", carbg.JSY),
                                new ReportParameter("parameterClxh", carbg.XH),
                                new ReportParameter("parameterScqy",carbg.SCQY),
                                new ReportParameter("parameterJzzl", carbg.JZZL),
                                new ReportParameter("parameterZzl", carbg.ZZL),
                                new ReportParameter("parameterBsqxs",carbg.BSQXS),
                                new ReportParameter("parameterJqfs",carbg.JQFS),
                                new ReportParameter("parameterFdjxh",carbg.FDJXH),
                                new ReportParameter("parameterGyfs",carbg.GYFS),
                                new ReportParameter("parameterRlzl",carbg.RLZL),
                                new ReportParameter("parameterDws",carbg.DWS),
                                new ReportParameter("parameterXslc",carbg.XSLC+"km"),
                                new ReportParameter("parameterFdjpl",carbg.FDJPL),
                                new ReportParameter("parameterZcrq", carbg.ZCRQ.ToString("D")),
                                new ReportParameter("parameterCllx",carbg.CLLX),
                                new ReportParameter("parameterQdfs",carbg.QDXS),
                                new ReportParameter("parameterChzz",carbg.CHZZ),
                                new ReportParameter("parameterClph",carbg.CLHP),
                                new ReportParameter("parameterCpys",carbg.CPYS),
                                new ReportParameter("parameterClsbm",carbg.CLSBM),
                                new ReportParameter("parameterCz",carbg.CZ),
                                new ReportParameter("parameterSbmc",jzjsdata.SBZZC),
                                new ReportParameter("parameterCgjxh",jzjsdata.CGJZZC+":"+jzjsdata.CGJXH),
                                new ReportParameter("parameterCgjbh",jzjsdata.CGJBH),
                                new ReportParameter("parameterFxyxh",jzjsdata.YDJZZC+":"+jzjsdata.YDJXH),
                                new ReportParameter("parameterFxybh",jzjsdata.YDJBH),
                                new ReportParameter("parameterWd",jzjsdata.WD+"℃"),
                                new ReportParameter("parameterDqy",jzjsdata.DQY+"KPa"),
                                new ReportParameter("parameterSd",jzjsdata.SD+"%"),
                                new ReportParameter("parameterHK",jzjsdata.HK),
                                new ReportParameter("parameterNK",jzjsdata.NK),
                                new ReportParameter("parameterEK",jzjsdata.EK),
                                new ReportParameter("parameterXZ","≤"+jzjsdata.YDXZ),
                                new ReportParameter("parameterHKPD",jzjsdata.HKPD),
                                new ReportParameter("parameterNKPD",jzjsdata.NKPD),
                                new ReportParameter("parameterEKPD",jzjsdata.EKPD),
                                new ReportParameter("parameterLBGL",jzjsdata.MAXLBGL),
                                new ReportParameter("parameterGLXZ","≥"+jzjsdata.GLXZ),
                                new ReportParameter("parameterGLPD",jzjsdata.GLPD),
                                new ReportParameter("parameterZHPD",(jzjsdata.ZHPD=="合格")?"通过":"未通过"),
                                new ReportParameter("parameterJDTEL",mainPanel.otherinf.JDDH),
                                new ReportParameter("parameterFWTEL",mainPanel.otherinf.FWDH),
                                new ReportParameter("parameterBGRQ",DateTime.Now.ToString("D")),
                                new ReportParameter("parameterJCZMC",mainPanel.stationinfmodel.STATIONNAME)
                            };
                            report.ReportEmbeddedResource = "exhaustDetect.ReportJzjs.rdlc";
                            report.SetParameters(rptparaJzjs);
                            break;
                        case "SDS":
                            sdsdata = sdsdal.Get_SDS(carbg.CLID);
                            if (carbg.JHZZ == "否")
                            {
                                ReportParameter[] rptparaSds =
                                {
                                    new ReportParameter("parameterLsh", carbg.LSH),
                                    new ReportParameter("parameterStationName", carbg.JCZMC),
                                    new ReportParameter("parameterJcrq", carbg.JCSJ.ToString("G")),
                                    new ReportParameter("parameterCzy", carbg.CZY),
                                    new ReportParameter("parameterJsy", carbg.JSY),
                                    new ReportParameter("parameterClxh", carbg.XH),
                                    new ReportParameter("parameterScqy",carbg.SCQY),
                                    new ReportParameter("parameterJzzl", carbg.JZZL),
                                    new ReportParameter("parameterZzl", carbg.ZZL),
                                    new ReportParameter("parameterBsqxs",carbg.BSQXS),
                                    new ReportParameter("parameterJqfs",carbg.JQFS),
                                    new ReportParameter("parameterFdjxh",carbg.FDJXH),
                                    new ReportParameter("parameterGyfs",carbg.GYFS),
                                    new ReportParameter("parameterRlzl",carbg.RLZL),
                                    new ReportParameter("parameterDws",carbg.DWS),
                                    new ReportParameter("parameterXslc",carbg.XSLC+"km"),
                                    new ReportParameter("parameterFdjpl",carbg.FDJPL),
                                    new ReportParameter("parameterZcrq", carbg.ZCRQ.ToString("D")),
                                    new ReportParameter("parameterCllx",carbg.CLLX),
                                    new ReportParameter("parameterQdfs",carbg.QDXS),
                                    new ReportParameter("parameterChzz",carbg.CHZZ),
                                    new ReportParameter("parameterClph",carbg.CLHP),
                                    new ReportParameter("parameterCpys",carbg.CPYS),
                                    new ReportParameter("parameterClsbm",carbg.CLSBM),
                                    new ReportParameter("parameterCz",carbg.CZ),
                                    new ReportParameter("parameterSBMC",sdsdata.SBMC),
                                    new ReportParameter("parameterSBXH",sdsdata.FXYXH),
                                    new ReportParameter("parameterSBBH",sdsdata.FXYBH),
                                    new ReportParameter("parameterSbzzc",sdsdata.SBZZC),
                                    new ReportParameter("parameterZZC",sdsdata.FXYZZC),
                                    new ReportParameter("parameterWd",sdsdata.WD+"℃"),
                                    new ReportParameter("parameterDqy",sdsdata.DQY+"KPa"),
                                    new ReportParameter("parameterSd",sdsdata.SD+"%"),
                                    new ReportParameter("parameterLOWHC",sdsdata.HCLOWCLZ),
                                    new ReportParameter("parameterLOWHCXZ","≤"+sdsdata.HCLOWXZ),
                                    new ReportParameter("parameterLOWCO",sdsdata.COLOWCLZ),
                                    new ReportParameter("parameterLOWCOXZ","≤"+sdsdata.COLOWXZ),
                                    new ReportParameter("parameterLOWPD",sdsdata.LOWPD),
                                    new ReportParameter("parameterHIGHCO",sdsdata.COHIGHCLZ),
                                    new ReportParameter("parameterHIGHCOXZ","≤"+sdsdata.COHIGHXZ),
                                    new ReportParameter("parameterHIGHHC",sdsdata.HCHIGHCLZ),
                                    new ReportParameter("parameterHIGHHCXZ","≤"+sdsdata.HCHIGHXZ),
                                    new ReportParameter("parameterHIGHPD",sdsdata.HIGHPD),
                                    new ReportParameter("parameterZHPD",(sdsdata.ZHPD=="合格")?"通过":"未通过"),
                                    new ReportParameter("parameterJDTEL",mainPanel.otherinf.JDDH),
                                    new ReportParameter("parameterFWTEL",mainPanel.otherinf.FWDH),
                                    new ReportParameter("parameterBGRQ",DateTime.Now.ToString("D")),
                                    new ReportParameter("parameterJCZMC",mainPanel.stationinfmodel.STATIONNAME)
                                };
                                report.ReportEmbeddedResource = "exhaustDetect.ReportSds.rdlc";
                                report.SetParameters(rptparaSds);
                            }
                            else
                            {
                                ReportParameter[] rptparaSdsCh =
                                {
                                    new ReportParameter("parameterLsh", carbg.LSH),
                                    new ReportParameter("parameterStationName", carbg.JCZMC),
                                    new ReportParameter("parameterJcrq", carbg.JCSJ.ToString("G")),
                                    new ReportParameter("parameterCzy", carbg.CZY),
                                    new ReportParameter("parameterJsy", carbg.JSY),
                                    new ReportParameter("parameterClxh", carbg.XH),
                                    new ReportParameter("parameterScqy",carbg.SCQY),
                                    new ReportParameter("parameterJzzl", carbg.JZZL),
                                    new ReportParameter("parameterZzl", carbg.ZZL),
                                    new ReportParameter("parameterBsqxs",carbg.BSQXS),
                                    new ReportParameter("parameterJqfs",carbg.JQFS),
                                    new ReportParameter("parameterFdjxh",carbg.FDJXH),
                                    new ReportParameter("parameterGyfs",carbg.GYFS),
                                    new ReportParameter("parameterRlzl",carbg.RLZL),
                                    new ReportParameter("parameterDws",carbg.DWS),
                                    new ReportParameter("parameterXslc",carbg.XSLC+"km"),
                                    new ReportParameter("parameterFdjpl",carbg.FDJPL),
                                    new ReportParameter("parameterZcrq", carbg.ZCRQ.ToString("D")),
                                    new ReportParameter("parameterCllx",carbg.CLLX),
                                    new ReportParameter("parameterQdfs",carbg.QDXS),
                                    new ReportParameter("parameterChzz",carbg.CHZZ),
                                    new ReportParameter("parameterClph",carbg.CLHP),
                                    new ReportParameter("parameterCpys",carbg.CPYS),
                                    new ReportParameter("parameterClsbm",carbg.CLSBM),
                                    new ReportParameter("parameterCz",carbg.CZ),
                                    new ReportParameter("parameterSBMC",sdsdata.SBMC),
                                    new ReportParameter("parameterSBXH",sdsdata.FXYXH),
                                    new ReportParameter("parameterSBBH",sdsdata.FXYBH),
                                    new ReportParameter("parameterZZC",sdsdata.FXYZZC),
                                    new ReportParameter("parameterSbzzc",sdsdata.SBZZC),
                                    new ReportParameter("parameterWd",sdsdata.WD+"℃"),
                                    new ReportParameter("parameterDqy",sdsdata.DQY+"KPa"),
                                    new ReportParameter("parameterSd",sdsdata.SD+"%"),
                                    new ReportParameter("parameterLOWHC",sdsdata.HCLOWCLZ),
                                    new ReportParameter("parameterLOWHCXZ","≤"+sdsdata.HCLOWXZ),
                                    new ReportParameter("parameterLOWCO",sdsdata.COLOWCLZ),
                                    new ReportParameter("parameterLOWCOXZ","≤"+sdsdata.COLOWXZ),
                                    new ReportParameter("parameterLOWPD",sdsdata.LOWPD),
                                    new ReportParameter("parameterHIGHCO",sdsdata.COHIGHCLZ),
                                    new ReportParameter("parameterHIGHCOXZ","≤"+sdsdata.COHIGHXZ),
                                    new ReportParameter("parameterHIGHHC",sdsdata.HCHIGHCLZ),
                                    new ReportParameter("parameterHIGHHCXZ","≤"+sdsdata.HCHIGHXZ),
                                    new ReportParameter("parameterLAMDA",sdsdata.LAMDAHIGHCLZ),
                                    new ReportParameter("parameterLAMDAXZ",sdsdata.LAMDAHIGHXZ),
                                    new ReportParameter("parameterHIGHPD",sdsdata.HIGHPD),
                                    new ReportParameter("parameterZHPD",(sdsdata.ZHPD=="合格")?"通过":"未通过"),
                                    new ReportParameter("parameterLamdaPD",sdsdata.LAMDAHIGHPD),
                                    new ReportParameter("parameterJDTEL",mainPanel.otherinf.JDDH),
                                    new ReportParameter("parameterFWTEL",mainPanel.otherinf.FWDH),
                                    new ReportParameter("parameterBGRQ",DateTime.Now.ToString("D")),
                                    new ReportParameter("parameterJCZMC",mainPanel.stationinfmodel.STATIONNAME)
                                };
                                report.ReportEmbeddedResource = "exhaustDetect.ReportSdsCH.rdlc";
                                report.SetParameters(rptparaSdsCh);
                            }
                            break;
                        case "ZYJS":
                            zyjsdata = zyjsdal.Get_Zyjs(carbg.CLID);
                            ReportParameter[] rptparaZyjs =
                            {
                                new ReportParameter("parameterLsh", carbg.LSH),
                                new ReportParameter("parameterStationName", carbg.JCZMC),
                                new ReportParameter("parameterJcrq", carbg.JCSJ.ToString("G")),
                                new ReportParameter("parameterCzy", carbg.CZY),
                                new ReportParameter("parameterJsy", carbg.JSY),
                                new ReportParameter("parameterClxh", carbg.XH),
                                new ReportParameter("parameterScqy",carbg.SCQY),
                                new ReportParameter("parameterJzzl", carbg.JZZL),
                                new ReportParameter("parameterZzl", carbg.ZZL),
                                new ReportParameter("parameterBsqxs",carbg.BSQXS),
                                new ReportParameter("parameterJqfs",carbg.JQFS),
                                new ReportParameter("parameterFdjxh",carbg.FDJXH),
                                new ReportParameter("parameterGyfs",carbg.GYFS),
                                new ReportParameter("parameterRlzl",carbg.RLZL),
                                new ReportParameter("parameterDws",carbg.DWS),
                                new ReportParameter("parameterXslc",carbg.XSLC+"km"),
                                new ReportParameter("parameterFdjpl",carbg.FDJPL),
                                new ReportParameter("parameterZcrq", carbg.ZCRQ.ToString("D")),
                                new ReportParameter("parameterCllx",carbg.CLLX),
                                new ReportParameter("parameterQdfs",carbg.QDXS),
                                new ReportParameter("parameterChzz",carbg.CHZZ),
                                new ReportParameter("parameterClph",carbg.CLHP),
                                new ReportParameter("parameterCpys",carbg.CPYS),
                                new ReportParameter("parameterClsbm",carbg.CLSBM),
                                new ReportParameter("parameterCz",carbg.CZ),
                                new ReportParameter("parameterSbxh",zyjsdata.YDJZZC+":"+zyjsdata.YDJXH),
                                new ReportParameter("parameterSbzzc",zyjsdata.SBZZC),
                                new ReportParameter("parameterSBBH",zyjsdata.YDJBH),
                                new ReportParameter("parameterDSZS",zyjsdata.DSZS),
                                new ReportParameter("parameterFIRSTDATA",zyjsdata.FIRSTDATA),
                                new ReportParameter("parameterSECONDDATA",zyjsdata.SECONDDATA),
                                new ReportParameter("parameterTHIRDDATA",zyjsdata.THIRDDATA),
                                new ReportParameter("parameterWd",zyjsdata.WD+"℃"),
                                new ReportParameter("parameterDqy",zyjsdata.DQY+"KPa"),
                                new ReportParameter("parameterSd",zyjsdata.SD+"%"),
                                new ReportParameter("parameterXZ","≤"+zyjsdata.YDXZ),
                                new ReportParameter("parameterPJZ",zyjsdata.AVERAGEDATA),
                                new ReportParameter("parameterHGPD",(zyjsdata.ZHPD=="合格")?"通过":"未通过"),
                                new ReportParameter("parameterJDTEL",mainPanel.otherinf.JDDH),
                                new ReportParameter("parameterFWTEL",mainPanel.otherinf.FWDH),
                                new ReportParameter("parameterBGRQ",DateTime.Now.ToString("D")),
                                new ReportParameter("parameterJCZMC",mainPanel.stationinfmodel.STATIONNAME)
                            };
                            report.ReportEmbeddedResource = "exhaustDetect.ReportZyjs.rdlc";
                            report.SetParameters(rptparaZyjs);
                            break;
                        default: break;
                    }
                    report.DataSources.Clear();
                    string deviceInfo = "<DeviceInfo>" +
                        "  <OutputFormat>EMF</OutputFormat>" +
                        "  <PageWidth>8.27in</PageWidth>" +
                        "  <PageHeight>11.69in</PageHeight>" +
                        "  <MarginTop>0.25in</MarginTop>" +
                        "  <MarginLeft>0.25in</MarginLeft>" +
                        "  <MarginRight>0.25in</MarginRight>" +
                        "  <MarginBottom>0.25in</MarginBottom>" +
                        "</DeviceInfo>";
                    Warning[] warnings;
                    m_streams = new List<Stream>();
                    //m_streams.Clear();
                    //将报表的内容按照deviceInfo指定的格式输出到CreateStream函数提供的Stream中。  
                    report.Render("Image", deviceInfo, CreateStream, out warnings);
                    foreach (Stream stream in m_streams)
                        stream.Position = 0;
                    Print();
                }
            }
        }
        //声明一个Stream对象的列表用来保存报表的输出数据 
        //LocalReport对象的Render方法会将报表按页输出为多个Stream对象。 

        //用来提供Stream对象的函数，用于LocalReport对象的Render方法的第三个参数。
        private Stream CreateStream(string name, string fileNameExtension, Encoding encoding, string mimeType, bool willSeek)
        {
            //如果需要将报表输出的数据保存为文件，请使用FileStream对象。  
            //Stream stream = new MemoryStream(); 
            Stream stream = new FileStream(name + "." + fileNameExtension, FileMode.Create);
            m_streams.Add(stream);
            return stream;
        }


        private void Print()
        {
            m_currentPageIndex = 0;
            if (m_streams == null || m_streams.Count == 0)
                return;
            //声明PrintDocument对象用于数据的打印 
            PrintDocument printDoc = new PrintDocument();
            //printDoc.OriginAtMargins = false;
            //指定需要使用的打印机的名称，使用空字符串""来指定默认打印机 
            printDoc.PrinterSettings.PrinterName = mainPanel.linemodel.PRINTER;
            //判断指定的打印机是否可用  
            if (!printDoc.PrinterSettings.IsValid)
            {
                MessageBox.Show("Can't find printer");
                return;
            }
            //声明PrintDocument对象的PrintPage事件，具体的打印操作需要在这个事件中处理。
            printDoc.PrintPage += new PrintPageEventHandler(PrintPage);
            //执行打印操作，Print方法将触发PrintPage事件。 
            printDoc.Print();
        }

        private void PrintPage(object sender, PrintPageEventArgs ev)
        {
            //Metafile对象用来保存EMF或WMF格式的图形， 
            //我们在前面将报表的内容输出为EMF图形格式的数据流。
            m_streams[m_currentPageIndex].Position = 0;
            Metafile pageImage = new Metafile(m_streams[m_currentPageIndex]);
            //指定是否横向打印  
            ev.PageSettings.Landscape = false;
            //这里的Graphics对象实际指向了打印机  
            ev.Graphics.DrawImage(pageImage, ev.PageBounds);
            m_streams[m_currentPageIndex].Close();
            m_currentPageIndex++;
            //设置是否需要继续打印  
            ev.HasMorePages = (m_currentPageIndex < m_streams.Count);
        }

        private void startTest_FormClosing(object sender, FormClosingEventArgs e)
        {
            try
            {
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NHNETMODE)
                {
                    int nhcode, nhexpcode;
                    string nhmsg, nhexpmsg;
                    mainPanel.nhinterface.SendUploadEquipmentStatus("1", out nhcode, out nhmsg, out nhexpcode, out nhexpmsg);
                }
                if (ahisStartInspect)
                {
                    if (!ahisStopInspect)
                    {
                        int ahresult = 0;
                        string ahErrMsg = "";
                        if (!mainPanel.ahinterface.StopInspect(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                        {
                            MessageBox.Show("错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                        }
                    }
                }
                if (ahisStartRecord)
                {
                    if (!ahisStopRecord)
                    {
                        int ahresult = 0;
                        string ahErrMsg = "";
                        if (!mainPanel.ahinterface.EndRecord(carLogin.carbj.CLID, out ahresult, out ahErrMsg))
                        {
                            MessageBox.Show("错误代码：" + ahresult.ToString() + "\r\n" + "错误信息：" + ahErrMsg);
                        }
                    }
                }
                try
                {
                    if (th_wait != null)
                        th_wait.Abort();
                }
                catch
                { }

                if (mainPanel.iscameraused)
                {
                    //panelVideo.Visible = true;
                    mainPanel.capturecontrol.stopLiveView(1);
                    mainPanel.capturecontrol.stopLiveView(2);
                }
                if(mainPanel.isNetUsed&&mainPanel.NetMode==mainPanel.ZKYTNETMODE)
                {
                    mainPanel.isStartTimerInCarlogin = true;
                }
                if (mainPanel.isNetUsed && mainPanel.NetMode == mainPanel.NEUSOFTNETMODE&&mainPanel.neusoftsocketinf.AREA == mainPanel.NEU_V301)
                {
                    string result, info;
                    //mainPanel.nowUser.ycyuserName =mainPanel.neusoftsocketinf.YCY;
                    //mainPanel.nowUser.ycyuserPassword = (mainPanel.logininfcontrol.getStaffByName(mainPanel.nowUser.ycyuserName)).Rows[0]["PASSWORD"].ToString();
                    mainPanel.neusoftsocket.init_equipment(mainPanel.neusoftsocketinf.IP, mainPanel.neusoftsocketinf.PORT);
                    if (mainPanel.neusoftsocket.loginUserv301(mainPanel.nowUser.userName, mainPanel.nowUser.userPassword, "0", mainPanel.nowUser.ycyuserName, mainPanel.nowUser.ycyuserPassword, out result, out info))
                    {
                        if (result != "1")
                        {
                            MessageBox.Show(info, "警告");
                        }
                    }
                    else
                    {
                        MessageBox.Show("登录指令发送失败和没有响应", "警告"); 
                    }
                }
            }
            catch
            { }
        }

        private void buttonYj_Click(object sender, EventArgs e)
        {
            //buttonYj.Location = new Point(427, 8);
            panelPrepare.Location = new Point(16, 9);
            panelPrepare.Visible = true;
            //panelJZJSYj.Location = new Point(6, 20);
            groupBoxJzjsYj.Text = "检测系统检查";
            panelJZJSYj.Visible = false;
            //groupBoxJzjsYj.Visible = true;
            buttonYj.Visible = false;
            buttonOK.Location = new Point(438, 3);
            buttonOK.Visible = true;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
            {
                bool jsstatus;
                string jserrMsg = "";
                string ackstring = mainPanel.jsinterface.stopInspection(out jsstatus, out jserrMsg);
                if (ackstring != "")
                {
                    MessageBox.Show(ackstring, "结束检测失败");
                    ini.INIIO.saveLogInf("结束检测失败：" + ackstring);
                }
                else
                {
                    if (!jsstatus)
                    {
                        MessageBox.Show(jserrMsg, "结束检测失败");
                        ini.INIIO.saveLogInf("结束检测失败：" + jserrMsg);
                        return;
                    }
                    else
                    {
                        ini.INIIO.saveLogInf("结束检测成功");
                    }
                }
                MessageBox.Show("上传成功");
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
            {
                bool jsstatus;
                string jserrMsg = "";
                string filename = "";
                switch(carLogin.carbj.JCFF)
                {
                    case "SDS":filename = @".\sdsresult.xml";break;
                    case "ASM": filename = @".\asmresult.xml"; break;
                    case "ZYJS": filename = @".\zyjsresult.xml"; break;
                    default:break;
                }
                FileStream fs = new FileStream(filename, FileMode.Open);
                StreamReader m_streamReader = new StreamReader(fs);
                m_streamReader.BaseStream.Seek(0, SeekOrigin.Begin);
                string jhxmlstring = m_streamReader.ReadToEnd();
                string finalresult;
                bool cardwritestatus;
                string jsackstring = mainPanel.jsinterface.uploadInspectionResult(jhxmlstring, out finalresult, out jsstatus, out cardwritestatus, out jserrMsg);
                if (jsackstring != "")
                {
                    MessageBox.Show(jsackstring, "上传结果失败");
                    Msg(label1, panel4, "上传结果至联网平台失败");
                    return;
                }
                else
                {
                    if (!jsstatus)
                    {
                        MessageBox.Show(jserrMsg, "上传结果失败");
                        ini.INIIO.saveLogInf("上传结果失败：" + jserrMsg);
                        return;
                    }
                    if (!cardwritestatus)
                    {
                        MessageBox.Show("电子卡写卡失败");
                        ini.INIIO.saveLogInf("电子卡写卡失败");
                    }
                }
                MessageBox.Show("上传成功");
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            if (mainPanel.NetMode == mainPanel.JIANGSHUNETMODE)
            {
                bool jsstatus;
                string jserrMsg = "";
                /*CARATWAIT waitmodel = new CARATWAIT();
                CARINF carinfmodel = new CARINF();
                string ackstring = mainPanel.jsinterface.getveicleInfo(carLogin.carbj.CLHP, carLogin.carbj.CPYS, out mainPanel.jsvehiclemodel, out carinfmodel, out waitmodel, out mainPanel.jschecklimitmodel, out jsstatus, out jserrMsg);

                if (ackstring != "")
                {
                    MessageBox.Show(ackstring, "获取车辆信息");
                    ini.INIIO.saveLogInf("获取车辆信息：" + ackstring);
                    return;
                }
                else
                {
                    if (!jsstatus)
                    {
                        MessageBox.Show(jserrMsg);
                        MessageBox.Show(jserrMsg, "获取车辆信息");
                        ini.INIIO.saveLogInf("获取车辆信息：" + jserrMsg);
                        return;
                    }
                    else
                    {
                        ini.INIIO.saveLogInf("获取车辆信息成功");
                    }
                }   */
                string jsstationid = mainPanel.stationid, jslineid = mainPanel.stationid + mainPanel.lineid, jsinspectionId;
                string ackstring = mainPanel.jsinterface.beginInspection(carLogin.modelbj.JCLB, out jsstationid, out jslineid, out jsinspectionId, out jsstatus, out jserrMsg);
                if (ackstring != "")
                {
                    MessageBox.Show(ackstring, "开始检测失败");
                    ini.INIIO.saveLogInf("开始检测失败：" + ackstring);
                    return;
                }
                else
                {
                    if (!jsstatus)
                    {
                        MessageBox.Show(jserrMsg);
                        MessageBox.Show(jserrMsg, "开始检测失败");
                        ini.INIIO.saveLogInf("开始检测失败：" + jserrMsg);
                        return;
                    }
                    else
                    {
                        carLogin.carbj.JCBGBH = jsinspectionId;
                        jcbgbh = carLogin.carbj.JCBGBH;
                        ini.INIIO.saveLogInf("开始检测成功");
                    }
                }
                MessageBox.Show("上传成功");
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
        }

        private void button5_Click(object sender, EventArgs e)
        {

        }

        private void button7_Click(object sender, EventArgs e)
        {
            
        }

        private void button8_Click(object sender, EventArgs e)
        {
            
        }
    }
}
