//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace NhWebClient.NhWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NHDSWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class NHDSWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleInspectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleInspectionCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TakePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAppearanceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAppearancePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadASMDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadVMASDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadLUGDOWNDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDISDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFAOPADataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFASMODataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAVFSUDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadMISDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadMDISDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDynConstLoadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDynPLHPDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDynForceCalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDynForceChkDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAnaGasCalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAnaGasChkLoadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadOpaChkLoadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadSmoChkLoadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFloFluxChkLoadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDynSelfTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAnaSelfTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadOpaSelfTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFloSelfTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadTacSelfTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadEleEnvDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadEquipmentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SystemRequestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NHDSWebService() {
            this.Url = global::NhWebClient.Properties.Settings.Default.NhWebClient_NhWebReference_NHDSWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTimeCompletedEventHandler GetTimeCompleted;
        
        /// <remarks/>
        public event GetVehicleListCompletedEventHandler GetVehicleListCompleted;
        
        /// <remarks/>
        public event GetVehicleInfoCompletedEventHandler GetVehicleInfoCompleted;
        
        /// <remarks/>
        public event VehicleInspectionCompletedEventHandler VehicleInspectionCompleted;
        
        /// <remarks/>
        public event VehicleInspectionCancelCompletedEventHandler VehicleInspectionCancelCompleted;
        
        /// <remarks/>
        public event StartTestCompletedEventHandler StartTestCompleted;
        
        /// <remarks/>
        public event TakePhotoCompletedEventHandler TakePhotoCompleted;
        
        /// <remarks/>
        public event StopTestCompletedEventHandler StopTestCompleted;
        
        /// <remarks/>
        public event UploadAppearanceDataCompletedEventHandler UploadAppearanceDataCompleted;
        
        /// <remarks/>
        public event UploadAppearancePhotoCompletedEventHandler UploadAppearancePhotoCompleted;
        
        /// <remarks/>
        public event UploadASMDataCompletedEventHandler UploadASMDataCompleted;
        
        /// <remarks/>
        public event UploadVMASDataCompletedEventHandler UploadVMASDataCompleted;
        
        /// <remarks/>
        public event UploadLUGDOWNDataCompletedEventHandler UploadLUGDOWNDataCompleted;
        
        /// <remarks/>
        public event UploadDISDataCompletedEventHandler UploadDISDataCompleted;
        
        /// <remarks/>
        public event UploadFAOPADataCompletedEventHandler UploadFAOPADataCompleted;
        
        /// <remarks/>
        public event UploadFASMODataCompletedEventHandler UploadFASMODataCompleted;
        
        /// <remarks/>
        public event UploadAVFSUDataCompletedEventHandler UploadAVFSUDataCompleted;
        
        /// <remarks/>
        public event UploadMISDataCompletedEventHandler UploadMISDataCompleted;
        
        /// <remarks/>
        public event UploadMDISDataCompletedEventHandler UploadMDISDataCompleted;
        
        /// <remarks/>
        public event UploadDynConstLoadDataCompletedEventHandler UploadDynConstLoadDataCompleted;
        
        /// <remarks/>
        public event UploadDynPLHPDataCompletedEventHandler UploadDynPLHPDataCompleted;
        
        /// <remarks/>
        public event UploadDynForceCalDataCompletedEventHandler UploadDynForceCalDataCompleted;
        
        /// <remarks/>
        public event UploadDynForceChkDataCompletedEventHandler UploadDynForceChkDataCompleted;
        
        /// <remarks/>
        public event UploadAnaGasCalDataCompletedEventHandler UploadAnaGasCalDataCompleted;
        
        /// <remarks/>
        public event UploadAnaGasChkLoadDataCompletedEventHandler UploadAnaGasChkLoadDataCompleted;
        
        /// <remarks/>
        public event UploadOpaChkLoadDataCompletedEventHandler UploadOpaChkLoadDataCompleted;
        
        /// <remarks/>
        public event UploadSmoChkLoadDataCompletedEventHandler UploadSmoChkLoadDataCompleted;
        
        /// <remarks/>
        public event UploadFloFluxChkLoadDataCompletedEventHandler UploadFloFluxChkLoadDataCompleted;
        
        /// <remarks/>
        public event UploadDynSelfTestDataCompletedEventHandler UploadDynSelfTestDataCompleted;
        
        /// <remarks/>
        public event UploadAnaSelfTestDataCompletedEventHandler UploadAnaSelfTestDataCompleted;
        
        /// <remarks/>
        public event UploadOpaSelfTestDataCompletedEventHandler UploadOpaSelfTestDataCompleted;
        
        /// <remarks/>
        public event UploadFloSelfTestDataCompletedEventHandler UploadFloSelfTestDataCompleted;
        
        /// <remarks/>
        public event UploadTacSelfTestDataCompletedEventHandler UploadTacSelfTestDataCompleted;
        
        /// <remarks/>
        public event UploadEleEnvDataCompletedEventHandler UploadEleEnvDataCompleted;
        
        /// <remarks/>
        public event UploadEquipmentStatusCompletedEventHandler UploadEquipmentStatusCompleted;
        
        /// <remarks/>
        public event SystemRequestCompletedEventHandler SystemRequestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal GetTime(string xml) {
            object[] results = this.Invoke("GetTime", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void GetTimeAsync(string xml) {
            this.GetTimeAsync(xml, null);
        }
        
        /// <remarks/>
        public void GetTimeAsync(string xml, object userState) {
            if ((this.GetTimeOperationCompleted == null)) {
                this.GetTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeOperationCompleted);
            }
            this.InvokeAsync("GetTime", new object[] {
                        xml}, this.GetTimeOperationCompleted, userState);
        }
        
        private void OnGetTimeOperationCompleted(object arg) {
            if ((this.GetTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeCompleted(this, new GetTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehicleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal GetVehicleList(string xml) {
            object[] results = this.Invoke("GetVehicleList", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleListAsync(string xml) {
            this.GetVehicleListAsync(xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleListAsync(string xml, object userState) {
            if ((this.GetVehicleListOperationCompleted == null)) {
                this.GetVehicleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleListOperationCompleted);
            }
            this.InvokeAsync("GetVehicleList", new object[] {
                        xml}, this.GetVehicleListOperationCompleted, userState);
        }
        
        private void OnGetVehicleListOperationCompleted(object arg) {
            if ((this.GetVehicleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleListCompleted(this, new GetVehicleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehicleInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal GetVehicleInfo(string xml) {
            object[] results = this.Invoke("GetVehicleInfo", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleInfoAsync(string xml) {
            this.GetVehicleInfoAsync(xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleInfoAsync(string xml, object userState) {
            if ((this.GetVehicleInfoOperationCompleted == null)) {
                this.GetVehicleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleInfoOperationCompleted);
            }
            this.InvokeAsync("GetVehicleInfo", new object[] {
                        xml}, this.GetVehicleInfoOperationCompleted, userState);
        }
        
        private void OnGetVehicleInfoOperationCompleted(object arg) {
            if ((this.GetVehicleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleInfoCompleted(this, new GetVehicleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VehicleInspection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal VehicleInspection(string xml) {
            object[] results = this.Invoke("VehicleInspection", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleInspectionAsync(string xml) {
            this.VehicleInspectionAsync(xml, null);
        }
        
        /// <remarks/>
        public void VehicleInspectionAsync(string xml, object userState) {
            if ((this.VehicleInspectionOperationCompleted == null)) {
                this.VehicleInspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleInspectionOperationCompleted);
            }
            this.InvokeAsync("VehicleInspection", new object[] {
                        xml}, this.VehicleInspectionOperationCompleted, userState);
        }
        
        private void OnVehicleInspectionOperationCompleted(object arg) {
            if ((this.VehicleInspectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleInspectionCompleted(this, new VehicleInspectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VehicleInspectionCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal VehicleInspectionCancel(string xml) {
            object[] results = this.Invoke("VehicleInspectionCancel", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleInspectionCancelAsync(string xml) {
            this.VehicleInspectionCancelAsync(xml, null);
        }
        
        /// <remarks/>
        public void VehicleInspectionCancelAsync(string xml, object userState) {
            if ((this.VehicleInspectionCancelOperationCompleted == null)) {
                this.VehicleInspectionCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleInspectionCancelOperationCompleted);
            }
            this.InvokeAsync("VehicleInspectionCancel", new object[] {
                        xml}, this.VehicleInspectionCancelOperationCompleted, userState);
        }
        
        private void OnVehicleInspectionCancelOperationCompleted(object arg) {
            if ((this.VehicleInspectionCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleInspectionCancelCompleted(this, new VehicleInspectionCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal StartTest(string xml) {
            object[] results = this.Invoke("StartTest", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void StartTestAsync(string xml) {
            this.StartTestAsync(xml, null);
        }
        
        /// <remarks/>
        public void StartTestAsync(string xml, object userState) {
            if ((this.StartTestOperationCompleted == null)) {
                this.StartTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartTestOperationCompleted);
            }
            this.InvokeAsync("StartTest", new object[] {
                        xml}, this.StartTestOperationCompleted, userState);
        }
        
        private void OnStartTestOperationCompleted(object arg) {
            if ((this.StartTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartTestCompleted(this, new StartTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TakePhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal TakePhoto(string xml) {
            object[] results = this.Invoke("TakePhoto", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void TakePhotoAsync(string xml) {
            this.TakePhotoAsync(xml, null);
        }
        
        /// <remarks/>
        public void TakePhotoAsync(string xml, object userState) {
            if ((this.TakePhotoOperationCompleted == null)) {
                this.TakePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTakePhotoOperationCompleted);
            }
            this.InvokeAsync("TakePhoto", new object[] {
                        xml}, this.TakePhotoOperationCompleted, userState);
        }
        
        private void OnTakePhotoOperationCompleted(object arg) {
            if ((this.TakePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TakePhotoCompleted(this, new TakePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StopTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal StopTest(string xml) {
            object[] results = this.Invoke("StopTest", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void StopTestAsync(string xml) {
            this.StopTestAsync(xml, null);
        }
        
        /// <remarks/>
        public void StopTestAsync(string xml, object userState) {
            if ((this.StopTestOperationCompleted == null)) {
                this.StopTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopTestOperationCompleted);
            }
            this.InvokeAsync("StopTest", new object[] {
                        xml}, this.StopTestOperationCompleted, userState);
        }
        
        private void OnStopTestOperationCompleted(object arg) {
            if ((this.StopTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopTestCompleted(this, new StopTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAppearanceData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadAppearanceData(string xml) {
            object[] results = this.Invoke("UploadAppearanceData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAppearanceDataAsync(string xml) {
            this.UploadAppearanceDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadAppearanceDataAsync(string xml, object userState) {
            if ((this.UploadAppearanceDataOperationCompleted == null)) {
                this.UploadAppearanceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAppearanceDataOperationCompleted);
            }
            this.InvokeAsync("UploadAppearanceData", new object[] {
                        xml}, this.UploadAppearanceDataOperationCompleted, userState);
        }
        
        private void OnUploadAppearanceDataOperationCompleted(object arg) {
            if ((this.UploadAppearanceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAppearanceDataCompleted(this, new UploadAppearanceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAppearancePhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadAppearancePhoto(string xml, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] photo) {
            object[] results = this.Invoke("UploadAppearancePhoto", new object[] {
                        xml,
                        photo});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAppearancePhotoAsync(string xml, byte[] photo) {
            this.UploadAppearancePhotoAsync(xml, photo, null);
        }
        
        /// <remarks/>
        public void UploadAppearancePhotoAsync(string xml, byte[] photo, object userState) {
            if ((this.UploadAppearancePhotoOperationCompleted == null)) {
                this.UploadAppearancePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAppearancePhotoOperationCompleted);
            }
            this.InvokeAsync("UploadAppearancePhoto", new object[] {
                        xml,
                        photo}, this.UploadAppearancePhotoOperationCompleted, userState);
        }
        
        private void OnUploadAppearancePhotoOperationCompleted(object arg) {
            if ((this.UploadAppearancePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAppearancePhotoCompleted(this, new UploadAppearancePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadASMData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadASMData(string xml) {
            object[] results = this.Invoke("UploadASMData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadASMDataAsync(string xml) {
            this.UploadASMDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadASMDataAsync(string xml, object userState) {
            if ((this.UploadASMDataOperationCompleted == null)) {
                this.UploadASMDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadASMDataOperationCompleted);
            }
            this.InvokeAsync("UploadASMData", new object[] {
                        xml}, this.UploadASMDataOperationCompleted, userState);
        }
        
        private void OnUploadASMDataOperationCompleted(object arg) {
            if ((this.UploadASMDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadASMDataCompleted(this, new UploadASMDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadVMASData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadVMASData(string xml) {
            object[] results = this.Invoke("UploadVMASData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadVMASDataAsync(string xml) {
            this.UploadVMASDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadVMASDataAsync(string xml, object userState) {
            if ((this.UploadVMASDataOperationCompleted == null)) {
                this.UploadVMASDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadVMASDataOperationCompleted);
            }
            this.InvokeAsync("UploadVMASData", new object[] {
                        xml}, this.UploadVMASDataOperationCompleted, userState);
        }
        
        private void OnUploadVMASDataOperationCompleted(object arg) {
            if ((this.UploadVMASDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadVMASDataCompleted(this, new UploadVMASDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadLUGDOWNData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadLUGDOWNData(string xml) {
            object[] results = this.Invoke("UploadLUGDOWNData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadLUGDOWNDataAsync(string xml) {
            this.UploadLUGDOWNDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadLUGDOWNDataAsync(string xml, object userState) {
            if ((this.UploadLUGDOWNDataOperationCompleted == null)) {
                this.UploadLUGDOWNDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadLUGDOWNDataOperationCompleted);
            }
            this.InvokeAsync("UploadLUGDOWNData", new object[] {
                        xml}, this.UploadLUGDOWNDataOperationCompleted, userState);
        }
        
        private void OnUploadLUGDOWNDataOperationCompleted(object arg) {
            if ((this.UploadLUGDOWNDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadLUGDOWNDataCompleted(this, new UploadLUGDOWNDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadDISData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadDISData(string xml) {
            object[] results = this.Invoke("UploadDISData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDISDataAsync(string xml) {
            this.UploadDISDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadDISDataAsync(string xml, object userState) {
            if ((this.UploadDISDataOperationCompleted == null)) {
                this.UploadDISDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDISDataOperationCompleted);
            }
            this.InvokeAsync("UploadDISData", new object[] {
                        xml}, this.UploadDISDataOperationCompleted, userState);
        }
        
        private void OnUploadDISDataOperationCompleted(object arg) {
            if ((this.UploadDISDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDISDataCompleted(this, new UploadDISDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFAOPAData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadFAOPAData(string xml) {
            object[] results = this.Invoke("UploadFAOPAData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFAOPADataAsync(string xml) {
            this.UploadFAOPADataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadFAOPADataAsync(string xml, object userState) {
            if ((this.UploadFAOPADataOperationCompleted == null)) {
                this.UploadFAOPADataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFAOPADataOperationCompleted);
            }
            this.InvokeAsync("UploadFAOPAData", new object[] {
                        xml}, this.UploadFAOPADataOperationCompleted, userState);
        }
        
        private void OnUploadFAOPADataOperationCompleted(object arg) {
            if ((this.UploadFAOPADataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFAOPADataCompleted(this, new UploadFAOPADataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFASMOData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadFASMOData(string xml) {
            object[] results = this.Invoke("UploadFASMOData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFASMODataAsync(string xml) {
            this.UploadFASMODataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadFASMODataAsync(string xml, object userState) {
            if ((this.UploadFASMODataOperationCompleted == null)) {
                this.UploadFASMODataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFASMODataOperationCompleted);
            }
            this.InvokeAsync("UploadFASMOData", new object[] {
                        xml}, this.UploadFASMODataOperationCompleted, userState);
        }
        
        private void OnUploadFASMODataOperationCompleted(object arg) {
            if ((this.UploadFASMODataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFASMODataCompleted(this, new UploadFASMODataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAVFSUData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadAVFSUData(string xml) {
            object[] results = this.Invoke("UploadAVFSUData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAVFSUDataAsync(string xml) {
            this.UploadAVFSUDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadAVFSUDataAsync(string xml, object userState) {
            if ((this.UploadAVFSUDataOperationCompleted == null)) {
                this.UploadAVFSUDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAVFSUDataOperationCompleted);
            }
            this.InvokeAsync("UploadAVFSUData", new object[] {
                        xml}, this.UploadAVFSUDataOperationCompleted, userState);
        }
        
        private void OnUploadAVFSUDataOperationCompleted(object arg) {
            if ((this.UploadAVFSUDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAVFSUDataCompleted(this, new UploadAVFSUDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadMISData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadMISData(string xml) {
            object[] results = this.Invoke("UploadMISData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadMISDataAsync(string xml) {
            this.UploadMISDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadMISDataAsync(string xml, object userState) {
            if ((this.UploadMISDataOperationCompleted == null)) {
                this.UploadMISDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadMISDataOperationCompleted);
            }
            this.InvokeAsync("UploadMISData", new object[] {
                        xml}, this.UploadMISDataOperationCompleted, userState);
        }
        
        private void OnUploadMISDataOperationCompleted(object arg) {
            if ((this.UploadMISDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadMISDataCompleted(this, new UploadMISDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadMDISData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadMDISData(string xml) {
            object[] results = this.Invoke("UploadMDISData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadMDISDataAsync(string xml) {
            this.UploadMDISDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadMDISDataAsync(string xml, object userState) {
            if ((this.UploadMDISDataOperationCompleted == null)) {
                this.UploadMDISDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadMDISDataOperationCompleted);
            }
            this.InvokeAsync("UploadMDISData", new object[] {
                        xml}, this.UploadMDISDataOperationCompleted, userState);
        }
        
        private void OnUploadMDISDataOperationCompleted(object arg) {
            if ((this.UploadMDISDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadMDISDataCompleted(this, new UploadMDISDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadDynConstLoadData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadDynConstLoadData(string xml) {
            object[] results = this.Invoke("UploadDynConstLoadData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDynConstLoadDataAsync(string xml) {
            this.UploadDynConstLoadDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadDynConstLoadDataAsync(string xml, object userState) {
            if ((this.UploadDynConstLoadDataOperationCompleted == null)) {
                this.UploadDynConstLoadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDynConstLoadDataOperationCompleted);
            }
            this.InvokeAsync("UploadDynConstLoadData", new object[] {
                        xml}, this.UploadDynConstLoadDataOperationCompleted, userState);
        }
        
        private void OnUploadDynConstLoadDataOperationCompleted(object arg) {
            if ((this.UploadDynConstLoadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDynConstLoadDataCompleted(this, new UploadDynConstLoadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadDynPLHPData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadDynPLHPData(string xml) {
            object[] results = this.Invoke("UploadDynPLHPData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDynPLHPDataAsync(string xml) {
            this.UploadDynPLHPDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadDynPLHPDataAsync(string xml, object userState) {
            if ((this.UploadDynPLHPDataOperationCompleted == null)) {
                this.UploadDynPLHPDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDynPLHPDataOperationCompleted);
            }
            this.InvokeAsync("UploadDynPLHPData", new object[] {
                        xml}, this.UploadDynPLHPDataOperationCompleted, userState);
        }
        
        private void OnUploadDynPLHPDataOperationCompleted(object arg) {
            if ((this.UploadDynPLHPDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDynPLHPDataCompleted(this, new UploadDynPLHPDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadDynForceCalData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadDynForceCalData(string xml) {
            object[] results = this.Invoke("UploadDynForceCalData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDynForceCalDataAsync(string xml) {
            this.UploadDynForceCalDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadDynForceCalDataAsync(string xml, object userState) {
            if ((this.UploadDynForceCalDataOperationCompleted == null)) {
                this.UploadDynForceCalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDynForceCalDataOperationCompleted);
            }
            this.InvokeAsync("UploadDynForceCalData", new object[] {
                        xml}, this.UploadDynForceCalDataOperationCompleted, userState);
        }
        
        private void OnUploadDynForceCalDataOperationCompleted(object arg) {
            if ((this.UploadDynForceCalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDynForceCalDataCompleted(this, new UploadDynForceCalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadDynForceChkData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadDynForceChkData(string xml) {
            object[] results = this.Invoke("UploadDynForceChkData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDynForceChkDataAsync(string xml) {
            this.UploadDynForceChkDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadDynForceChkDataAsync(string xml, object userState) {
            if ((this.UploadDynForceChkDataOperationCompleted == null)) {
                this.UploadDynForceChkDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDynForceChkDataOperationCompleted);
            }
            this.InvokeAsync("UploadDynForceChkData", new object[] {
                        xml}, this.UploadDynForceChkDataOperationCompleted, userState);
        }
        
        private void OnUploadDynForceChkDataOperationCompleted(object arg) {
            if ((this.UploadDynForceChkDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDynForceChkDataCompleted(this, new UploadDynForceChkDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAnaGasCalData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadAnaGasCalData(string xml) {
            object[] results = this.Invoke("UploadAnaGasCalData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAnaGasCalDataAsync(string xml) {
            this.UploadAnaGasCalDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadAnaGasCalDataAsync(string xml, object userState) {
            if ((this.UploadAnaGasCalDataOperationCompleted == null)) {
                this.UploadAnaGasCalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAnaGasCalDataOperationCompleted);
            }
            this.InvokeAsync("UploadAnaGasCalData", new object[] {
                        xml}, this.UploadAnaGasCalDataOperationCompleted, userState);
        }
        
        private void OnUploadAnaGasCalDataOperationCompleted(object arg) {
            if ((this.UploadAnaGasCalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAnaGasCalDataCompleted(this, new UploadAnaGasCalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAnaGasChkLoadData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadAnaGasChkLoadData(string xml) {
            object[] results = this.Invoke("UploadAnaGasChkLoadData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAnaGasChkLoadDataAsync(string xml) {
            this.UploadAnaGasChkLoadDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadAnaGasChkLoadDataAsync(string xml, object userState) {
            if ((this.UploadAnaGasChkLoadDataOperationCompleted == null)) {
                this.UploadAnaGasChkLoadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAnaGasChkLoadDataOperationCompleted);
            }
            this.InvokeAsync("UploadAnaGasChkLoadData", new object[] {
                        xml}, this.UploadAnaGasChkLoadDataOperationCompleted, userState);
        }
        
        private void OnUploadAnaGasChkLoadDataOperationCompleted(object arg) {
            if ((this.UploadAnaGasChkLoadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAnaGasChkLoadDataCompleted(this, new UploadAnaGasChkLoadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadOpaChkLoadData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadOpaChkLoadData(string xml) {
            object[] results = this.Invoke("UploadOpaChkLoadData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadOpaChkLoadDataAsync(string xml) {
            this.UploadOpaChkLoadDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadOpaChkLoadDataAsync(string xml, object userState) {
            if ((this.UploadOpaChkLoadDataOperationCompleted == null)) {
                this.UploadOpaChkLoadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadOpaChkLoadDataOperationCompleted);
            }
            this.InvokeAsync("UploadOpaChkLoadData", new object[] {
                        xml}, this.UploadOpaChkLoadDataOperationCompleted, userState);
        }
        
        private void OnUploadOpaChkLoadDataOperationCompleted(object arg) {
            if ((this.UploadOpaChkLoadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadOpaChkLoadDataCompleted(this, new UploadOpaChkLoadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadSmoChkLoadData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadSmoChkLoadData(string xml) {
            object[] results = this.Invoke("UploadSmoChkLoadData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadSmoChkLoadDataAsync(string xml) {
            this.UploadSmoChkLoadDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadSmoChkLoadDataAsync(string xml, object userState) {
            if ((this.UploadSmoChkLoadDataOperationCompleted == null)) {
                this.UploadSmoChkLoadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadSmoChkLoadDataOperationCompleted);
            }
            this.InvokeAsync("UploadSmoChkLoadData", new object[] {
                        xml}, this.UploadSmoChkLoadDataOperationCompleted, userState);
        }
        
        private void OnUploadSmoChkLoadDataOperationCompleted(object arg) {
            if ((this.UploadSmoChkLoadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadSmoChkLoadDataCompleted(this, new UploadSmoChkLoadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFloFluxChkLoadData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadFloFluxChkLoadData(string xml) {
            object[] results = this.Invoke("UploadFloFluxChkLoadData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFloFluxChkLoadDataAsync(string xml) {
            this.UploadFloFluxChkLoadDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadFloFluxChkLoadDataAsync(string xml, object userState) {
            if ((this.UploadFloFluxChkLoadDataOperationCompleted == null)) {
                this.UploadFloFluxChkLoadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFloFluxChkLoadDataOperationCompleted);
            }
            this.InvokeAsync("UploadFloFluxChkLoadData", new object[] {
                        xml}, this.UploadFloFluxChkLoadDataOperationCompleted, userState);
        }
        
        private void OnUploadFloFluxChkLoadDataOperationCompleted(object arg) {
            if ((this.UploadFloFluxChkLoadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFloFluxChkLoadDataCompleted(this, new UploadFloFluxChkLoadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadDynSelfTestData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadDynSelfTestData(string xml) {
            object[] results = this.Invoke("UploadDynSelfTestData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDynSelfTestDataAsync(string xml) {
            this.UploadDynSelfTestDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadDynSelfTestDataAsync(string xml, object userState) {
            if ((this.UploadDynSelfTestDataOperationCompleted == null)) {
                this.UploadDynSelfTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDynSelfTestDataOperationCompleted);
            }
            this.InvokeAsync("UploadDynSelfTestData", new object[] {
                        xml}, this.UploadDynSelfTestDataOperationCompleted, userState);
        }
        
        private void OnUploadDynSelfTestDataOperationCompleted(object arg) {
            if ((this.UploadDynSelfTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDynSelfTestDataCompleted(this, new UploadDynSelfTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAnaSelfTestData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadAnaSelfTestData(string xml) {
            object[] results = this.Invoke("UploadAnaSelfTestData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAnaSelfTestDataAsync(string xml) {
            this.UploadAnaSelfTestDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadAnaSelfTestDataAsync(string xml, object userState) {
            if ((this.UploadAnaSelfTestDataOperationCompleted == null)) {
                this.UploadAnaSelfTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAnaSelfTestDataOperationCompleted);
            }
            this.InvokeAsync("UploadAnaSelfTestData", new object[] {
                        xml}, this.UploadAnaSelfTestDataOperationCompleted, userState);
        }
        
        private void OnUploadAnaSelfTestDataOperationCompleted(object arg) {
            if ((this.UploadAnaSelfTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAnaSelfTestDataCompleted(this, new UploadAnaSelfTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadOpaSelfTestData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadOpaSelfTestData(string xml) {
            object[] results = this.Invoke("UploadOpaSelfTestData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadOpaSelfTestDataAsync(string xml) {
            this.UploadOpaSelfTestDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadOpaSelfTestDataAsync(string xml, object userState) {
            if ((this.UploadOpaSelfTestDataOperationCompleted == null)) {
                this.UploadOpaSelfTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadOpaSelfTestDataOperationCompleted);
            }
            this.InvokeAsync("UploadOpaSelfTestData", new object[] {
                        xml}, this.UploadOpaSelfTestDataOperationCompleted, userState);
        }
        
        private void OnUploadOpaSelfTestDataOperationCompleted(object arg) {
            if ((this.UploadOpaSelfTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadOpaSelfTestDataCompleted(this, new UploadOpaSelfTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFloSelfTestData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadFloSelfTestData(string xml) {
            object[] results = this.Invoke("UploadFloSelfTestData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFloSelfTestDataAsync(string xml) {
            this.UploadFloSelfTestDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadFloSelfTestDataAsync(string xml, object userState) {
            if ((this.UploadFloSelfTestDataOperationCompleted == null)) {
                this.UploadFloSelfTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFloSelfTestDataOperationCompleted);
            }
            this.InvokeAsync("UploadFloSelfTestData", new object[] {
                        xml}, this.UploadFloSelfTestDataOperationCompleted, userState);
        }
        
        private void OnUploadFloSelfTestDataOperationCompleted(object arg) {
            if ((this.UploadFloSelfTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFloSelfTestDataCompleted(this, new UploadFloSelfTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadTacSelfTestData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadTacSelfTestData(string xml) {
            object[] results = this.Invoke("UploadTacSelfTestData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadTacSelfTestDataAsync(string xml) {
            this.UploadTacSelfTestDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadTacSelfTestDataAsync(string xml, object userState) {
            if ((this.UploadTacSelfTestDataOperationCompleted == null)) {
                this.UploadTacSelfTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadTacSelfTestDataOperationCompleted);
            }
            this.InvokeAsync("UploadTacSelfTestData", new object[] {
                        xml}, this.UploadTacSelfTestDataOperationCompleted, userState);
        }
        
        private void OnUploadTacSelfTestDataOperationCompleted(object arg) {
            if ((this.UploadTacSelfTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadTacSelfTestDataCompleted(this, new UploadTacSelfTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadEleEnvData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadEleEnvData(string xml) {
            object[] results = this.Invoke("UploadEleEnvData", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadEleEnvDataAsync(string xml) {
            this.UploadEleEnvDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadEleEnvDataAsync(string xml, object userState) {
            if ((this.UploadEleEnvDataOperationCompleted == null)) {
                this.UploadEleEnvDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadEleEnvDataOperationCompleted);
            }
            this.InvokeAsync("UploadEleEnvData", new object[] {
                        xml}, this.UploadEleEnvDataOperationCompleted, userState);
        }
        
        private void OnUploadEleEnvDataOperationCompleted(object arg) {
            if ((this.UploadEleEnvDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadEleEnvDataCompleted(this, new UploadEleEnvDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadEquipmentStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal UploadEquipmentStatus(string xml) {
            object[] results = this.Invoke("UploadEquipmentStatus", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void UploadEquipmentStatusAsync(string xml) {
            this.UploadEquipmentStatusAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadEquipmentStatusAsync(string xml, object userState) {
            if ((this.UploadEquipmentStatusOperationCompleted == null)) {
                this.UploadEquipmentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadEquipmentStatusOperationCompleted);
            }
            this.InvokeAsync("UploadEquipmentStatus", new object[] {
                        xml}, this.UploadEquipmentStatusOperationCompleted, userState);
        }
        
        private void OnUploadEquipmentStatusOperationCompleted(object arg) {
            if ((this.UploadEquipmentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadEquipmentStatusCompleted(this, new UploadEquipmentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SystemRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetVal SystemRequest(string xml) {
            object[] results = this.Invoke("SystemRequest", new object[] {
                        xml});
            return ((RetVal)(results[0]));
        }
        
        /// <remarks/>
        public void SystemRequestAsync(string xml) {
            this.SystemRequestAsync(xml, null);
        }
        
        /// <remarks/>
        public void SystemRequestAsync(string xml, object userState) {
            if ((this.SystemRequestOperationCompleted == null)) {
                this.SystemRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystemRequestOperationCompleted);
            }
            this.InvokeAsync("SystemRequest", new object[] {
                        xml}, this.SystemRequestOperationCompleted, userState);
        }
        
        private void OnSystemRequestOperationCompleted(object arg) {
            if ((this.SystemRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SystemRequestCompleted(this, new SystemRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RetVal {
        
        private int errorCodeField;
        
        private string errorMessageField;
        
        private string valueField;
        
        /// <remarks/>
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTimeCompletedEventHandler(object sender, GetTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetVehicleListCompletedEventHandler(object sender, GetVehicleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetVehicleInfoCompletedEventHandler(object sender, GetVehicleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void VehicleInspectionCompletedEventHandler(object sender, VehicleInspectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleInspectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleInspectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void VehicleInspectionCancelCompletedEventHandler(object sender, VehicleInspectionCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleInspectionCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleInspectionCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartTestCompletedEventHandler(object sender, StartTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TakePhotoCompletedEventHandler(object sender, TakePhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TakePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TakePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StopTestCompletedEventHandler(object sender, StopTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StopTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadAppearanceDataCompletedEventHandler(object sender, UploadAppearanceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAppearanceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAppearanceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadAppearancePhotoCompletedEventHandler(object sender, UploadAppearancePhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAppearancePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAppearancePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadASMDataCompletedEventHandler(object sender, UploadASMDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadASMDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadASMDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadVMASDataCompletedEventHandler(object sender, UploadVMASDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadVMASDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadVMASDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadLUGDOWNDataCompletedEventHandler(object sender, UploadLUGDOWNDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadLUGDOWNDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadLUGDOWNDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadDISDataCompletedEventHandler(object sender, UploadDISDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDISDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDISDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadFAOPADataCompletedEventHandler(object sender, UploadFAOPADataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFAOPADataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFAOPADataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadFASMODataCompletedEventHandler(object sender, UploadFASMODataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFASMODataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFASMODataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadAVFSUDataCompletedEventHandler(object sender, UploadAVFSUDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAVFSUDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAVFSUDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadMISDataCompletedEventHandler(object sender, UploadMISDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadMISDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadMISDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadMDISDataCompletedEventHandler(object sender, UploadMDISDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadMDISDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadMDISDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadDynConstLoadDataCompletedEventHandler(object sender, UploadDynConstLoadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDynConstLoadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDynConstLoadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadDynPLHPDataCompletedEventHandler(object sender, UploadDynPLHPDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDynPLHPDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDynPLHPDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadDynForceCalDataCompletedEventHandler(object sender, UploadDynForceCalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDynForceCalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDynForceCalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadDynForceChkDataCompletedEventHandler(object sender, UploadDynForceChkDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDynForceChkDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDynForceChkDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadAnaGasCalDataCompletedEventHandler(object sender, UploadAnaGasCalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAnaGasCalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAnaGasCalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadAnaGasChkLoadDataCompletedEventHandler(object sender, UploadAnaGasChkLoadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAnaGasChkLoadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAnaGasChkLoadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadOpaChkLoadDataCompletedEventHandler(object sender, UploadOpaChkLoadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadOpaChkLoadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadOpaChkLoadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadSmoChkLoadDataCompletedEventHandler(object sender, UploadSmoChkLoadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadSmoChkLoadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadSmoChkLoadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadFloFluxChkLoadDataCompletedEventHandler(object sender, UploadFloFluxChkLoadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFloFluxChkLoadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFloFluxChkLoadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadDynSelfTestDataCompletedEventHandler(object sender, UploadDynSelfTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDynSelfTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDynSelfTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadAnaSelfTestDataCompletedEventHandler(object sender, UploadAnaSelfTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAnaSelfTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAnaSelfTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadOpaSelfTestDataCompletedEventHandler(object sender, UploadOpaSelfTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadOpaSelfTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadOpaSelfTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadFloSelfTestDataCompletedEventHandler(object sender, UploadFloSelfTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFloSelfTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFloSelfTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadTacSelfTestDataCompletedEventHandler(object sender, UploadTacSelfTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadTacSelfTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadTacSelfTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadEleEnvDataCompletedEventHandler(object sender, UploadEleEnvDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadEleEnvDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadEleEnvDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadEquipmentStatusCompletedEventHandler(object sender, UploadEquipmentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadEquipmentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadEquipmentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SystemRequestCompletedEventHandler(object sender, SystemRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SystemRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SystemRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetVal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetVal)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591