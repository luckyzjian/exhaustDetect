//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.6.1055.0。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSoap", Namespace = "http://www.gc8848.com/")]
public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback SyncOperationCompleted;

    private System.Threading.SendOrPostCallback GetInspectQueueByDateOperationCompleted;

    private System.Threading.SendOrPostCallback GetInspectQueueByPlateIDOperationCompleted;

    private System.Threading.SendOrPostCallback AbortInspectOperationCompleted;

    private System.Threading.SendOrPostCallback BeginRecordOperationCompleted;

    private System.Threading.SendOrPostCallback EndRecordOperationCompleted;

    private System.Threading.SendOrPostCallback BeginInspectOperationCompleted;

    private System.Threading.SendOrPostCallback TakePhotoOperationCompleted;

    private System.Threading.SendOrPostCallback StopInspectOperationCompleted;

    private System.Threading.SendOrPostCallback EndInspectOperationCompleted;

    private System.Threading.SendOrPostCallback BeginSelfTestOperationCompleted;

    private System.Threading.SendOrPostCallback EndSelfTestOperationCompleted;

    private System.Threading.SendOrPostCallback UploadSelfTestDataOperationCompleted;

    private System.Threading.SendOrPostCallback UploadRealtimeDataOperationCompleted;

    private System.Threading.SendOrPostCallback GetInspectionInfoOperationCompleted;

    private System.Threading.SendOrPostCallback BeginCalibrateOperationCompleted;

    private System.Threading.SendOrPostCallback UploadCalibrateDataOperationCompleted;

    private System.Threading.SendOrPostCallback EndCalibrateOperationCompleted;

    private System.Threading.SendOrPostCallback TestPhotoOperationCompleted;

    /// <remarks/>
    public Service()
    {
        this.Url = "http://192.168.100.2:9002/GCService/Service.asmx";
    }
    public Service(string url)
    {
        this.Url = url;
    }

    /// <remarks/>
    public event SyncCompletedEventHandler SyncCompleted;

    /// <remarks/>
    public event GetInspectQueueByDateCompletedEventHandler GetInspectQueueByDateCompleted;

    /// <remarks/>
    public event GetInspectQueueByPlateIDCompletedEventHandler GetInspectQueueByPlateIDCompleted;

    /// <remarks/>
    public event AbortInspectCompletedEventHandler AbortInspectCompleted;

    /// <remarks/>
    public event BeginRecordCompletedEventHandler BeginRecordCompleted;

    /// <remarks/>
    public event EndRecordCompletedEventHandler EndRecordCompleted;

    /// <remarks/>
    public event BeginInspectCompletedEventHandler BeginInspectCompleted;

    /// <remarks/>
    public event TakePhotoCompletedEventHandler TakePhotoCompleted;

    /// <remarks/>
    public event StopInspectCompletedEventHandler StopInspectCompleted;

    /// <remarks/>
    public event EndInspectCompletedEventHandler EndInspectCompleted;

    /// <remarks/>
    public event BeginSelfTestCompletedEventHandler BeginSelfTestCompleted;

    /// <remarks/>
    public event EndSelfTestCompletedEventHandler EndSelfTestCompleted;

    /// <remarks/>
    public event UploadSelfTestDataCompletedEventHandler UploadSelfTestDataCompleted;

    /// <remarks/>
    public event UploadRealtimeDataCompletedEventHandler UploadRealtimeDataCompleted;

    /// <remarks/>
    public event GetInspectionInfoCompletedEventHandler GetInspectionInfoCompleted;

    /// <remarks/>
    public event BeginCalibrateCompletedEventHandler BeginCalibrateCompleted;

    /// <remarks/>
    public event UploadCalibrateDataCompletedEventHandler UploadCalibrateDataCompleted;

    /// <remarks/>
    public event EndCalibrateCompletedEventHandler EndCalibrateCompleted;

    /// <remarks/>
    public event TestPhotoCompletedEventHandler TestPhotoCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/Sync", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue Sync(string Memo)
    {
        object[] results = this.Invoke("Sync", new object[] {
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSync(string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Sync", new object[] {
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndSync(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void SyncAsync(string Memo)
    {
        this.SyncAsync(Memo, null);
    }

    /// <remarks/>
    public void SyncAsync(string Memo, object userState)
    {
        if ((this.SyncOperationCompleted == null))
        {
            this.SyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncOperationCompleted);
        }
        this.InvokeAsync("Sync", new object[] {
                    Memo}, this.SyncOperationCompleted, userState);
    }

    private void OnSyncOperationCompleted(object arg)
    {
        if ((this.SyncCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SyncCompleted(this, new SyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/GetInspectQueueByDate", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue GetInspectQueueByDate(string FromDate, string ToDate, string Memo)
    {
        object[] results = this.Invoke("GetInspectQueueByDate", new object[] {
                    FromDate,
                    ToDate,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetInspectQueueByDate(string FromDate, string ToDate, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetInspectQueueByDate", new object[] {
                    FromDate,
                    ToDate,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndGetInspectQueueByDate(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void GetInspectQueueByDateAsync(string FromDate, string ToDate, string Memo)
    {
        this.GetInspectQueueByDateAsync(FromDate, ToDate, Memo, null);
    }

    /// <remarks/>
    public void GetInspectQueueByDateAsync(string FromDate, string ToDate, string Memo, object userState)
    {
        if ((this.GetInspectQueueByDateOperationCompleted == null))
        {
            this.GetInspectQueueByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInspectQueueByDateOperationCompleted);
        }
        this.InvokeAsync("GetInspectQueueByDate", new object[] {
                    FromDate,
                    ToDate,
                    Memo}, this.GetInspectQueueByDateOperationCompleted, userState);
    }

    private void OnGetInspectQueueByDateOperationCompleted(object arg)
    {
        if ((this.GetInspectQueueByDateCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetInspectQueueByDateCompleted(this, new GetInspectQueueByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/GetInspectQueueByPlateID", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue GetInspectQueueByPlateID(string PlateID, int PlateType, string Memo)
    {
        object[] results = this.Invoke("GetInspectQueueByPlateID", new object[] {
                    PlateID,
                    PlateType,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetInspectQueueByPlateID(string PlateID, int PlateType, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetInspectQueueByPlateID", new object[] {
                    PlateID,
                    PlateType,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndGetInspectQueueByPlateID(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void GetInspectQueueByPlateIDAsync(string PlateID, int PlateType, string Memo)
    {
        this.GetInspectQueueByPlateIDAsync(PlateID, PlateType, Memo, null);
    }

    /// <remarks/>
    public void GetInspectQueueByPlateIDAsync(string PlateID, int PlateType, string Memo, object userState)
    {
        if ((this.GetInspectQueueByPlateIDOperationCompleted == null))
        {
            this.GetInspectQueueByPlateIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInspectQueueByPlateIDOperationCompleted);
        }
        this.InvokeAsync("GetInspectQueueByPlateID", new object[] {
                    PlateID,
                    PlateType,
                    Memo}, this.GetInspectQueueByPlateIDOperationCompleted, userState);
    }

    private void OnGetInspectQueueByPlateIDOperationCompleted(object arg)
    {
        if ((this.GetInspectQueueByPlateIDCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetInspectQueueByPlateIDCompleted(this, new GetInspectQueueByPlateIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/AbortInspect", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue AbortInspect(string InspectionID, int Reason, string Memo)
    {
        object[] results = this.Invoke("AbortInspect", new object[] {
                    InspectionID,
                    Reason,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginAbortInspect(string InspectionID, int Reason, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("AbortInspect", new object[] {
                    InspectionID,
                    Reason,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndAbortInspect(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void AbortInspectAsync(string InspectionID, int Reason, string Memo)
    {
        this.AbortInspectAsync(InspectionID, Reason, Memo, null);
    }

    /// <remarks/>
    public void AbortInspectAsync(string InspectionID, int Reason, string Memo, object userState)
    {
        if ((this.AbortInspectOperationCompleted == null))
        {
            this.AbortInspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAbortInspectOperationCompleted);
        }
        this.InvokeAsync("AbortInspect", new object[] {
                    InspectionID,
                    Reason,
                    Memo}, this.AbortInspectOperationCompleted, userState);
    }

    private void OnAbortInspectOperationCompleted(object arg)
    {
        if ((this.AbortInspectCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AbortInspectCompleted(this, new AbortInspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/BeginRecord", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue BeginRecord(long LineID, string InspectID, string Memo)
    {
        object[] results = this.Invoke("BeginRecord", new object[] {
                    LineID,
                    InspectID,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginBeginRecord(long LineID, string InspectID, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("BeginRecord", new object[] {
                    LineID,
                    InspectID,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndBeginRecord(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void BeginRecordAsync(long LineID, string InspectID, string Memo)
    {
        this.BeginRecordAsync(LineID, InspectID, Memo, null);
    }

    /// <remarks/>
    public void BeginRecordAsync(long LineID, string InspectID, string Memo, object userState)
    {
        if ((this.BeginRecordOperationCompleted == null))
        {
            this.BeginRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginRecordOperationCompleted);
        }
        this.InvokeAsync("BeginRecord", new object[] {
                    LineID,
                    InspectID,
                    Memo}, this.BeginRecordOperationCompleted, userState);
    }

    private void OnBeginRecordOperationCompleted(object arg)
    {
        if ((this.BeginRecordCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.BeginRecordCompleted(this, new BeginRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/EndRecord", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue EndRecord(string InspectID, string Memo)
    {
        object[] results = this.Invoke("EndRecord", new object[] {
                    InspectID,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginEndRecord(string InspectID, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("EndRecord", new object[] {
                    InspectID,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndEndRecord(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void EndRecordAsync(string InspectID, string Memo)
    {
        this.EndRecordAsync(InspectID, Memo, null);
    }

    /// <remarks/>
    public void EndRecordAsync(string InspectID, string Memo, object userState)
    {
        if ((this.EndRecordOperationCompleted == null))
        {
            this.EndRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndRecordOperationCompleted);
        }
        this.InvokeAsync("EndRecord", new object[] {
                    InspectID,
                    Memo}, this.EndRecordOperationCompleted, userState);
    }

    private void OnEndRecordOperationCompleted(object arg)
    {
        if ((this.EndRecordCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EndRecordCompleted(this, new EndRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/BeginInspect", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue BeginInspect(long LineID, string InspectID, long DriverID, long OperatorID, int IsOutOfSpeed, string Memo)
    {
        object[] results = this.Invoke("BeginInspect", new object[] {
                    LineID,
                    InspectID,
                    DriverID,
                    OperatorID,
                    IsOutOfSpeed,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginBeginInspect(long LineID, string InspectID, long DriverID, long OperatorID, int IsOutOfSpeed, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("BeginInspect", new object[] {
                    LineID,
                    InspectID,
                    DriverID,
                    OperatorID,
                    IsOutOfSpeed,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndBeginInspect(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void BeginInspectAsync(long LineID, string InspectID, long DriverID, long OperatorID, int IsOutOfSpeed, string Memo)
    {
        this.BeginInspectAsync(LineID, InspectID, DriverID, OperatorID, IsOutOfSpeed, Memo, null);
    }

    /// <remarks/>
    public void BeginInspectAsync(long LineID, string InspectID, long DriverID, long OperatorID, int IsOutOfSpeed, string Memo, object userState)
    {
        if ((this.BeginInspectOperationCompleted == null))
        {
            this.BeginInspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginInspectOperationCompleted);
        }
        this.InvokeAsync("BeginInspect", new object[] {
                    LineID,
                    InspectID,
                    DriverID,
                    OperatorID,
                    IsOutOfSpeed,
                    Memo}, this.BeginInspectOperationCompleted, userState);
    }

    private void OnBeginInspectOperationCompleted(object arg)
    {
        if ((this.BeginInspectCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.BeginInspectCompleted(this, new BeginInspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/TakePhoto", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue TakePhoto(long LineID, string InspectID, int PicCode, string Memo)
    {
        object[] results = this.Invoke("TakePhoto", new object[] {
                    LineID,
                    InspectID,
                    PicCode,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTakePhoto(long LineID, string InspectID, int PicCode, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TakePhoto", new object[] {
                    LineID,
                    InspectID,
                    PicCode,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndTakePhoto(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void TakePhotoAsync(long LineID, string InspectID, int PicCode, string Memo)
    {
        this.TakePhotoAsync(LineID, InspectID, PicCode, Memo, null);
    }

    /// <remarks/>
    public void TakePhotoAsync(long LineID, string InspectID, int PicCode, string Memo, object userState)
    {
        if ((this.TakePhotoOperationCompleted == null))
        {
            this.TakePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTakePhotoOperationCompleted);
        }
        this.InvokeAsync("TakePhoto", new object[] {
                    LineID,
                    InspectID,
                    PicCode,
                    Memo}, this.TakePhotoOperationCompleted, userState);
    }

    private void OnTakePhotoOperationCompleted(object arg)
    {
        if ((this.TakePhotoCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TakePhotoCompleted(this, new TakePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/StopInspect", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue StopInspect(string InspectID, string Memo)
    {
        object[] results = this.Invoke("StopInspect", new object[] {
                    InspectID,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginStopInspect(string InspectID, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("StopInspect", new object[] {
                    InspectID,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndStopInspect(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void StopInspectAsync(string InspectID, string Memo)
    {
        this.StopInspectAsync(InspectID, Memo, null);
    }

    /// <remarks/>
    public void StopInspectAsync(string InspectID, string Memo, object userState)
    {
        if ((this.StopInspectOperationCompleted == null))
        {
            this.StopInspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopInspectOperationCompleted);
        }
        this.InvokeAsync("StopInspect", new object[] {
                    InspectID,
                    Memo}, this.StopInspectOperationCompleted, userState);
    }

    private void OnStopInspectOperationCompleted(object arg)
    {
        if ((this.StopInspectCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.StopInspectCompleted(this, new StopInspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/EndInspect", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue EndInspect(string InspectID, string Result, string Memo)
    {
        object[] results = this.Invoke("EndInspect", new object[] {
                    InspectID,
                    Result,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginEndInspect(string InspectID, string Result, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("EndInspect", new object[] {
                    InspectID,
                    Result,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndEndInspect(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void EndInspectAsync(string InspectID, string Result, string Memo)
    {
        this.EndInspectAsync(InspectID, Result, Memo, null);
    }

    /// <remarks/>
    public void EndInspectAsync(string InspectID, string Result, string Memo, object userState)
    {
        if ((this.EndInspectOperationCompleted == null))
        {
            this.EndInspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndInspectOperationCompleted);
        }
        this.InvokeAsync("EndInspect", new object[] {
                    InspectID,
                    Result,
                    Memo}, this.EndInspectOperationCompleted, userState);
    }

    private void OnEndInspectOperationCompleted(object arg)
    {
        if ((this.EndInspectCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EndInspectCompleted(this, new EndInspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/BeginSelfTest", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue BeginSelfTest(long LineID, string Memo)
    {
        object[] results = this.Invoke("BeginSelfTest", new object[] {
                    LineID,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginBeginSelfTest(long LineID, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("BeginSelfTest", new object[] {
                    LineID,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndBeginSelfTest(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void BeginSelfTestAsync(long LineID, string Memo)
    {
        this.BeginSelfTestAsync(LineID, Memo, null);
    }

    /// <remarks/>
    public void BeginSelfTestAsync(long LineID, string Memo, object userState)
    {
        if ((this.BeginSelfTestOperationCompleted == null))
        {
            this.BeginSelfTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginSelfTestOperationCompleted);
        }
        this.InvokeAsync("BeginSelfTest", new object[] {
                    LineID,
                    Memo}, this.BeginSelfTestOperationCompleted, userState);
    }

    private void OnBeginSelfTestOperationCompleted(object arg)
    {
        if ((this.BeginSelfTestCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.BeginSelfTestCompleted(this, new BeginSelfTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/EndSelfTest", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue EndSelfTest(long LineID, string Result, string Memo)
    {
        object[] results = this.Invoke("EndSelfTest", new object[] {
                    LineID,
                    Result,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginEndSelfTest(long LineID, string Result, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("EndSelfTest", new object[] {
                    LineID,
                    Result,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndEndSelfTest(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void EndSelfTestAsync(long LineID, string Result, string Memo)
    {
        this.EndSelfTestAsync(LineID, Result, Memo, null);
    }

    /// <remarks/>
    public void EndSelfTestAsync(long LineID, string Result, string Memo, object userState)
    {
        if ((this.EndSelfTestOperationCompleted == null))
        {
            this.EndSelfTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndSelfTestOperationCompleted);
        }
        this.InvokeAsync("EndSelfTest", new object[] {
                    LineID,
                    Result,
                    Memo}, this.EndSelfTestOperationCompleted, userState);
    }

    private void OnEndSelfTestOperationCompleted(object arg)
    {
        if ((this.EndSelfTestCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EndSelfTestCompleted(this, new EndSelfTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/UploadSelfTestData", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue UploadSelfTestData(long LineID, string ResultData, string Memo)
    {
        object[] results = this.Invoke("UploadSelfTestData", new object[] {
                    LineID,
                    ResultData,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginUploadSelfTestData(long LineID, string ResultData, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("UploadSelfTestData", new object[] {
                    LineID,
                    ResultData,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndUploadSelfTestData(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void UploadSelfTestDataAsync(long LineID, string ResultData, string Memo)
    {
        this.UploadSelfTestDataAsync(LineID, ResultData, Memo, null);
    }

    /// <remarks/>
    public void UploadSelfTestDataAsync(long LineID, string ResultData, string Memo, object userState)
    {
        if ((this.UploadSelfTestDataOperationCompleted == null))
        {
            this.UploadSelfTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadSelfTestDataOperationCompleted);
        }
        this.InvokeAsync("UploadSelfTestData", new object[] {
                    LineID,
                    ResultData,
                    Memo}, this.UploadSelfTestDataOperationCompleted, userState);
    }

    private void OnUploadSelfTestDataOperationCompleted(object arg)
    {
        if ((this.UploadSelfTestDataCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UploadSelfTestDataCompleted(this, new UploadSelfTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/UploadRealtimeData", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue UploadRealtimeData(string InspectID, string RealtimeData, string Memo)
    {
        object[] results = this.Invoke("UploadRealtimeData", new object[] {
                    InspectID,
                    RealtimeData,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginUploadRealtimeData(string InspectID, string RealtimeData, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("UploadRealtimeData", new object[] {
                    InspectID,
                    RealtimeData,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndUploadRealtimeData(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void UploadRealtimeDataAsync(string InspectID, string RealtimeData, string Memo)
    {
        this.UploadRealtimeDataAsync(InspectID, RealtimeData, Memo, null);
    }

    /// <remarks/>
    public void UploadRealtimeDataAsync(string InspectID, string RealtimeData, string Memo, object userState)
    {
        if ((this.UploadRealtimeDataOperationCompleted == null))
        {
            this.UploadRealtimeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadRealtimeDataOperationCompleted);
        }
        this.InvokeAsync("UploadRealtimeData", new object[] {
                    InspectID,
                    RealtimeData,
                    Memo}, this.UploadRealtimeDataOperationCompleted, userState);
    }

    private void OnUploadRealtimeDataOperationCompleted(object arg)
    {
        if ((this.UploadRealtimeDataCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UploadRealtimeDataCompleted(this, new UploadRealtimeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/GetInspectionInfo", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue GetInspectionInfo(string Memo)
    {
        object[] results = this.Invoke("GetInspectionInfo", new object[] {
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetInspectionInfo(string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetInspectionInfo", new object[] {
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndGetInspectionInfo(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void GetInspectionInfoAsync(string Memo)
    {
        this.GetInspectionInfoAsync(Memo, null);
    }

    /// <remarks/>
    public void GetInspectionInfoAsync(string Memo, object userState)
    {
        if ((this.GetInspectionInfoOperationCompleted == null))
        {
            this.GetInspectionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInspectionInfoOperationCompleted);
        }
        this.InvokeAsync("GetInspectionInfo", new object[] {
                    Memo}, this.GetInspectionInfoOperationCompleted, userState);
    }

    private void OnGetInspectionInfoOperationCompleted(object arg)
    {
        if ((this.GetInspectionInfoCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetInspectionInfoCompleted(this, new GetInspectionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/BeginCalibrate", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue BeginCalibrate(long LineID, string Memo)
    {
        object[] results = this.Invoke("BeginCalibrate", new object[] {
                    LineID,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginBeginCalibrate(long LineID, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("BeginCalibrate", new object[] {
                    LineID,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndBeginCalibrate(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void BeginCalibrateAsync(long LineID, string Memo)
    {
        this.BeginCalibrateAsync(LineID, Memo, null);
    }

    /// <remarks/>
    public void BeginCalibrateAsync(long LineID, string Memo, object userState)
    {
        if ((this.BeginCalibrateOperationCompleted == null))
        {
            this.BeginCalibrateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginCalibrateOperationCompleted);
        }
        this.InvokeAsync("BeginCalibrate", new object[] {
                    LineID,
                    Memo}, this.BeginCalibrateOperationCompleted, userState);
    }

    private void OnBeginCalibrateOperationCompleted(object arg)
    {
        if ((this.BeginCalibrateCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.BeginCalibrateCompleted(this, new BeginCalibrateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/UploadCalibrateData", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue UploadCalibrateData(long LineID, string ResultData, string Memo)
    {
        object[] results = this.Invoke("UploadCalibrateData", new object[] {
                    LineID,
                    ResultData,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginUploadCalibrateData(long LineID, string ResultData, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("UploadCalibrateData", new object[] {
                    LineID,
                    ResultData,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndUploadCalibrateData(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void UploadCalibrateDataAsync(long LineID, string ResultData, string Memo)
    {
        this.UploadCalibrateDataAsync(LineID, ResultData, Memo, null);
    }

    /// <remarks/>
    public void UploadCalibrateDataAsync(long LineID, string ResultData, string Memo, object userState)
    {
        if ((this.UploadCalibrateDataOperationCompleted == null))
        {
            this.UploadCalibrateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadCalibrateDataOperationCompleted);
        }
        this.InvokeAsync("UploadCalibrateData", new object[] {
                    LineID,
                    ResultData,
                    Memo}, this.UploadCalibrateDataOperationCompleted, userState);
    }

    private void OnUploadCalibrateDataOperationCompleted(object arg)
    {
        if ((this.UploadCalibrateDataCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UploadCalibrateDataCompleted(this, new UploadCalibrateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/EndCalibrate", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue EndCalibrate(long LineID, string Result, string Memo)
    {
        object[] results = this.Invoke("EndCalibrate", new object[] {
                    LineID,
                    Result,
                    Memo});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginEndCalibrate(long LineID, string Result, string Memo, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("EndCalibrate", new object[] {
                    LineID,
                    Result,
                    Memo}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndEndCalibrate(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void EndCalibrateAsync(long LineID, string Result, string Memo)
    {
        this.EndCalibrateAsync(LineID, Result, Memo, null);
    }

    /// <remarks/>
    public void EndCalibrateAsync(long LineID, string Result, string Memo, object userState)
    {
        if ((this.EndCalibrateOperationCompleted == null))
        {
            this.EndCalibrateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndCalibrateOperationCompleted);
        }
        this.InvokeAsync("EndCalibrate", new object[] {
                    LineID,
                    Result,
                    Memo}, this.EndCalibrateOperationCompleted, userState);
    }

    private void OnEndCalibrateOperationCompleted(object arg)
    {
        if ((this.EndCalibrateCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EndCalibrateCompleted(this, new EndCalibrateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gc8848.com/TestPhoto", RequestNamespace = "http://www.gc8848.com/", ResponseNamespace = "http://www.gc8848.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RetValue TestPhoto(long LineID)
    {
        object[] results = this.Invoke("TestPhoto", new object[] {
                    LineID});
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTestPhoto(long LineID, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TestPhoto", new object[] {
                    LineID}, callback, asyncState);
    }

    /// <remarks/>
    public RetValue EndTestPhoto(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetValue)(results[0]));
    }

    /// <remarks/>
    public void TestPhotoAsync(long LineID)
    {
        this.TestPhotoAsync(LineID, null);
    }

    /// <remarks/>
    public void TestPhotoAsync(long LineID, object userState)
    {
        if ((this.TestPhotoOperationCompleted == null))
        {
            this.TestPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestPhotoOperationCompleted);
        }
        this.InvokeAsync("TestPhoto", new object[] {
                    LineID}, this.TestPhotoOperationCompleted, userState);
    }

    private void OnTestPhotoOperationCompleted(object arg)
    {
        if ((this.TestPhotoCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TestPhotoCompleted(this, new TestPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.gc8848.com/")]
public partial class RetValue
{

    private int errNumField;

    private string errMsgField;

    private int internalErrNumField;

    private string internalErrMsgField;

    private string valueField;

    private string tipMessageField;

    private string memoField;

    /// <remarks/>
    public int ErrNum
    {
        get
        {
            return this.errNumField;
        }
        set
        {
            this.errNumField = value;
        }
    }

    /// <remarks/>
    public string ErrMsg
    {
        get
        {
            return this.errMsgField;
        }
        set
        {
            this.errMsgField = value;
        }
    }

    /// <remarks/>
    public int InternalErrNum
    {
        get
        {
            return this.internalErrNumField;
        }
        set
        {
            this.internalErrNumField = value;
        }
    }

    /// <remarks/>
    public string InternalErrMsg
    {
        get
        {
            return this.internalErrMsgField;
        }
        set
        {
            this.internalErrMsgField = value;
        }
    }

    /// <remarks/>
    public string Value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }

    /// <remarks/>
    public string TipMessage
    {
        get
        {
            return this.tipMessageField;
        }
        set
        {
            this.tipMessageField = value;
        }
    }

    /// <remarks/>
    public string Memo
    {
        get
        {
            return this.memoField;
        }
        set
        {
            this.memoField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void SyncCompletedEventHandler(object sender, SyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetInspectQueueByDateCompletedEventHandler(object sender, GetInspectQueueByDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetInspectQueueByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetInspectQueueByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetInspectQueueByPlateIDCompletedEventHandler(object sender, GetInspectQueueByPlateIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetInspectQueueByPlateIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetInspectQueueByPlateIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void AbortInspectCompletedEventHandler(object sender, AbortInspectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AbortInspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal AbortInspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void BeginRecordCompletedEventHandler(object sender, BeginRecordCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class BeginRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal BeginRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void EndRecordCompletedEventHandler(object sender, EndRecordCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EndRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal EndRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void BeginInspectCompletedEventHandler(object sender, BeginInspectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class BeginInspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal BeginInspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void TakePhotoCompletedEventHandler(object sender, TakePhotoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TakePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TakePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void StopInspectCompletedEventHandler(object sender, StopInspectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StopInspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal StopInspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void EndInspectCompletedEventHandler(object sender, EndInspectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EndInspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal EndInspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void BeginSelfTestCompletedEventHandler(object sender, BeginSelfTestCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class BeginSelfTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal BeginSelfTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void EndSelfTestCompletedEventHandler(object sender, EndSelfTestCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EndSelfTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal EndSelfTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void UploadSelfTestDataCompletedEventHandler(object sender, UploadSelfTestDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UploadSelfTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal UploadSelfTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void UploadRealtimeDataCompletedEventHandler(object sender, UploadRealtimeDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UploadRealtimeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal UploadRealtimeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetInspectionInfoCompletedEventHandler(object sender, GetInspectionInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetInspectionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetInspectionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void BeginCalibrateCompletedEventHandler(object sender, BeginCalibrateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class BeginCalibrateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal BeginCalibrateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void UploadCalibrateDataCompletedEventHandler(object sender, UploadCalibrateDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UploadCalibrateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal UploadCalibrateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void EndCalibrateCompletedEventHandler(object sender, EndCalibrateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EndCalibrateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal EndCalibrateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void TestPhotoCompletedEventHandler(object sender, TestPhotoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TestPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TestPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetValue Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetValue)(this.results[0]));
        }
    }
}
