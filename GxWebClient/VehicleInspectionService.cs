//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.6.1055.0。
// 
namespace GxWebClient {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VehicleInspectionServiceSoap", Namespace="http://www.nnhb.gov.cn/")]
    public partial class VehicleInspectionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private VIToken vITokenValueField;
        
        private System.Threading.SendOrPostCallback GetDateTimeNowOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadAcceptanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadAcceptanceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInspectionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadLDDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadLDProcessDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadASMDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadASMProcessDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadTSIDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadLightProofSmokeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFilterSmokeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpInspectionSignalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLogSoapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParamLimitDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadStationDeviceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadLineCheckPetrolOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadLineCheckDieselOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadStationStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadEnvParamSensorOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDynamometerSelfCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadParasiticPowerSelfCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFlowmeterSelfCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadGasAnalyzerSelfCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadLightProofSmokeSelfCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadTSIGasAnalyzerSelfCheckOperationCompleted;
        
        /// <remarks/>
        public VehicleInspectionService() {
            this.Url = "http://124.226.217.80:10014/VehicleInspectionService.asmx";
        }

        public VehicleInspectionService(string url)
        {
            this.Url = url;
        }

        public VIToken VITokenValue {
            get {
                return this.vITokenValueField;
            }
            set {
                this.vITokenValueField = value;
            }
        }
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetDateTimeNowCompletedEventHandler GetDateTimeNowCompleted;
        
        /// <remarks/>
        public event DownloadAcceptanceCompletedEventHandler DownloadAcceptanceCompleted;
        
        /// <remarks/>
        public event DownloadAcceptanceDataCompletedEventHandler DownloadAcceptanceDataCompleted;
        
        /// <remarks/>
        public event DownloadVehicleCompletedEventHandler DownloadVehicleCompleted;
        
        /// <remarks/>
        public event UploadInspectionDataCompletedEventHandler UploadInspectionDataCompleted;
        
        /// <remarks/>
        public event UploadLDDataCompletedEventHandler UploadLDDataCompleted;
        
        /// <remarks/>
        public event UploadLDProcessDataCompletedEventHandler UploadLDProcessDataCompleted;
        
        /// <remarks/>
        public event UploadASMDataCompletedEventHandler UploadASMDataCompleted;
        
        /// <remarks/>
        public event UploadASMProcessDataCompletedEventHandler UploadASMProcessDataCompleted;
        
        /// <remarks/>
        public event UploadTSIDataCompletedEventHandler UploadTSIDataCompleted;
        
        /// <remarks/>
        public event UploadLightProofSmokeDataCompletedEventHandler UploadLightProofSmokeDataCompleted;
        
        /// <remarks/>
        public event UploadFilterSmokeDataCompletedEventHandler UploadFilterSmokeDataCompleted;
        
        /// <remarks/>
        public event UpInspectionSignalCompletedEventHandler UpInspectionSignalCompleted;
        
        /// <remarks/>
        public event SetLogSoapCompletedEventHandler SetLogSoapCompleted;
        
        /// <remarks/>
        public event GetParamLimitDataCompletedEventHandler GetParamLimitDataCompleted;
        
        /// <remarks/>
        public event UploadStationDeviceStatusCompletedEventHandler UploadStationDeviceStatusCompleted;
        
        /// <remarks/>
        public event UploadLineCheckPetrolCompletedEventHandler UploadLineCheckPetrolCompleted;
        
        /// <remarks/>
        public event UpLoadLineCheckDieselCompletedEventHandler UpLoadLineCheckDieselCompleted;
        
        /// <remarks/>
        public event DownloadStationStaffCompletedEventHandler DownloadStationStaffCompleted;
        
        /// <remarks/>
        public event UploadEnvParamSensorCompletedEventHandler UploadEnvParamSensorCompleted;
        
        /// <remarks/>
        public event UploadDynamometerSelfCheckCompletedEventHandler UploadDynamometerSelfCheckCompleted;
        
        /// <remarks/>
        public event UploadParasiticPowerSelfCheckCompletedEventHandler UploadParasiticPowerSelfCheckCompleted;
        
        /// <remarks/>
        public event UploadFlowmeterSelfCheckCompletedEventHandler UploadFlowmeterSelfCheckCompleted;
        
        /// <remarks/>
        public event UploadGasAnalyzerSelfCheckCompletedEventHandler UploadGasAnalyzerSelfCheckCompleted;
        
        /// <remarks/>
        public event UploadLightProofSmokeSelfCheckCompletedEventHandler UploadLightProofSmokeSelfCheckCompleted;
        
        /// <remarks/>
        public event UploadTSIGasAnalyzerSelfCheckCompletedEventHandler UploadTSIGasAnalyzerSelfCheckCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/GetVersion", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/Login", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string userName, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        userName,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password) {
            this.LoginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userName,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/GetDateTimeNow", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDateTimeNow() {
            object[] results = this.Invoke("GetDateTimeNow", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDateTimeNow(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDateTimeNow", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDateTimeNow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateTimeNowAsync() {
            this.GetDateTimeNowAsync(null);
        }
        
        /// <remarks/>
        public void GetDateTimeNowAsync(object userState) {
            if ((this.GetDateTimeNowOperationCompleted == null)) {
                this.GetDateTimeNowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateTimeNowOperationCompleted);
            }
            this.InvokeAsync("GetDateTimeNow", new object[0], this.GetDateTimeNowOperationCompleted, userState);
        }
        
        private void OnGetDateTimeNowOperationCompleted(object arg) {
            if ((this.GetDateTimeNowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateTimeNowCompleted(this, new GetDateTimeNowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/DownloadAcceptance", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadAcceptance(string cityCode, string stationCode, string lineCode, string inspectionMethod, string factoryNo) {
            object[] results = this.Invoke("DownloadAcceptance", new object[] {
                        cityCode,
                        stationCode,
                        lineCode,
                        inspectionMethod,
                        factoryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownloadAcceptance(string cityCode, string stationCode, string lineCode, string inspectionMethod, string factoryNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownloadAcceptance", new object[] {
                        cityCode,
                        stationCode,
                        lineCode,
                        inspectionMethod,
                        factoryNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDownloadAcceptance(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadAcceptanceAsync(string cityCode, string stationCode, string lineCode, string inspectionMethod, string factoryNo) {
            this.DownloadAcceptanceAsync(cityCode, stationCode, lineCode, inspectionMethod, factoryNo, null);
        }
        
        /// <remarks/>
        public void DownloadAcceptanceAsync(string cityCode, string stationCode, string lineCode, string inspectionMethod, string factoryNo, object userState) {
            if ((this.DownloadAcceptanceOperationCompleted == null)) {
                this.DownloadAcceptanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadAcceptanceOperationCompleted);
            }
            this.InvokeAsync("DownloadAcceptance", new object[] {
                        cityCode,
                        stationCode,
                        lineCode,
                        inspectionMethod,
                        factoryNo}, this.DownloadAcceptanceOperationCompleted, userState);
        }
        
        private void OnDownloadAcceptanceOperationCompleted(object arg) {
            if ((this.DownloadAcceptanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadAcceptanceCompleted(this, new DownloadAcceptanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/DownloadAcceptanceData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadAcceptanceData(string cityCode, string stationCode, string lineCode, string inspectionMethod, string startTime, string endTime, int top, string factoryNo) {
            object[] results = this.Invoke("DownloadAcceptanceData", new object[] {
                        cityCode,
                        stationCode,
                        lineCode,
                        inspectionMethod,
                        startTime,
                        endTime,
                        top,
                        factoryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownloadAcceptanceData(string cityCode, string stationCode, string lineCode, string inspectionMethod, string startTime, string endTime, int top, string factoryNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownloadAcceptanceData", new object[] {
                        cityCode,
                        stationCode,
                        lineCode,
                        inspectionMethod,
                        startTime,
                        endTime,
                        top,
                        factoryNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDownloadAcceptanceData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadAcceptanceDataAsync(string cityCode, string stationCode, string lineCode, string inspectionMethod, string startTime, string endTime, int top, string factoryNo) {
            this.DownloadAcceptanceDataAsync(cityCode, stationCode, lineCode, inspectionMethod, startTime, endTime, top, factoryNo, null);
        }
        
        /// <remarks/>
        public void DownloadAcceptanceDataAsync(string cityCode, string stationCode, string lineCode, string inspectionMethod, string startTime, string endTime, int top, string factoryNo, object userState) {
            if ((this.DownloadAcceptanceDataOperationCompleted == null)) {
                this.DownloadAcceptanceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadAcceptanceDataOperationCompleted);
            }
            this.InvokeAsync("DownloadAcceptanceData", new object[] {
                        cityCode,
                        stationCode,
                        lineCode,
                        inspectionMethod,
                        startTime,
                        endTime,
                        top,
                        factoryNo}, this.DownloadAcceptanceDataOperationCompleted, userState);
        }
        
        private void OnDownloadAcceptanceDataOperationCompleted(object arg) {
            if ((this.DownloadAcceptanceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadAcceptanceDataCompleted(this, new DownloadAcceptanceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/DownloadVehicle", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadVehicle(string stationCode, string inspectionNum, string lineCode, string inspectionMethod) {
            object[] results = this.Invoke("DownloadVehicle", new object[] {
                        stationCode,
                        inspectionNum,
                        lineCode,
                        inspectionMethod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownloadVehicle(string stationCode, string inspectionNum, string lineCode, string inspectionMethod, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownloadVehicle", new object[] {
                        stationCode,
                        inspectionNum,
                        lineCode,
                        inspectionMethod}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDownloadVehicle(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadVehicleAsync(string stationCode, string inspectionNum, string lineCode, string inspectionMethod) {
            this.DownloadVehicleAsync(stationCode, inspectionNum, lineCode, inspectionMethod, null);
        }
        
        /// <remarks/>
        public void DownloadVehicleAsync(string stationCode, string inspectionNum, string lineCode, string inspectionMethod, object userState) {
            if ((this.DownloadVehicleOperationCompleted == null)) {
                this.DownloadVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadVehicleOperationCompleted);
            }
            this.InvokeAsync("DownloadVehicle", new object[] {
                        stationCode,
                        inspectionNum,
                        lineCode,
                        inspectionMethod}, this.DownloadVehicleOperationCompleted, userState);
        }
        
        private void OnDownloadVehicleOperationCompleted(object arg) {
            if ((this.DownloadVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadVehicleCompleted(this, new DownloadVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadInspectionData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadInspectionData(string body) {
            object[] results = this.Invoke("UploadInspectionData", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadInspectionData(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadInspectionData", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadInspectionData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInspectionDataAsync(string body) {
            this.UploadInspectionDataAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadInspectionDataAsync(string body, object userState) {
            if ((this.UploadInspectionDataOperationCompleted == null)) {
                this.UploadInspectionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInspectionDataOperationCompleted);
            }
            this.InvokeAsync("UploadInspectionData", new object[] {
                        body}, this.UploadInspectionDataOperationCompleted, userState);
        }
        
        private void OnUploadInspectionDataOperationCompleted(object arg) {
            if ((this.UploadInspectionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInspectionDataCompleted(this, new UploadInspectionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadLDData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadLDData(string body) {
            object[] results = this.Invoke("UploadLDData", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadLDData(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadLDData", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadLDData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadLDDataAsync(string body) {
            this.UploadLDDataAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadLDDataAsync(string body, object userState) {
            if ((this.UploadLDDataOperationCompleted == null)) {
                this.UploadLDDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadLDDataOperationCompleted);
            }
            this.InvokeAsync("UploadLDData", new object[] {
                        body}, this.UploadLDDataOperationCompleted, userState);
        }
        
        private void OnUploadLDDataOperationCompleted(object arg) {
            if ((this.UploadLDDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadLDDataCompleted(this, new UploadLDDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadLDProcessData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadLDProcessData(string body) {
            object[] results = this.Invoke("UploadLDProcessData", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadLDProcessData(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadLDProcessData", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadLDProcessData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadLDProcessDataAsync(string body) {
            this.UploadLDProcessDataAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadLDProcessDataAsync(string body, object userState) {
            if ((this.UploadLDProcessDataOperationCompleted == null)) {
                this.UploadLDProcessDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadLDProcessDataOperationCompleted);
            }
            this.InvokeAsync("UploadLDProcessData", new object[] {
                        body}, this.UploadLDProcessDataOperationCompleted, userState);
        }
        
        private void OnUploadLDProcessDataOperationCompleted(object arg) {
            if ((this.UploadLDProcessDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadLDProcessDataCompleted(this, new UploadLDProcessDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadASMData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadASMData(string body) {
            object[] results = this.Invoke("UploadASMData", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadASMData(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadASMData", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadASMData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadASMDataAsync(string body) {
            this.UploadASMDataAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadASMDataAsync(string body, object userState) {
            if ((this.UploadASMDataOperationCompleted == null)) {
                this.UploadASMDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadASMDataOperationCompleted);
            }
            this.InvokeAsync("UploadASMData", new object[] {
                        body}, this.UploadASMDataOperationCompleted, userState);
        }
        
        private void OnUploadASMDataOperationCompleted(object arg) {
            if ((this.UploadASMDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadASMDataCompleted(this, new UploadASMDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadASMProcessData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadASMProcessData(string body) {
            object[] results = this.Invoke("UploadASMProcessData", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadASMProcessData(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadASMProcessData", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadASMProcessData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadASMProcessDataAsync(string body) {
            this.UploadASMProcessDataAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadASMProcessDataAsync(string body, object userState) {
            if ((this.UploadASMProcessDataOperationCompleted == null)) {
                this.UploadASMProcessDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadASMProcessDataOperationCompleted);
            }
            this.InvokeAsync("UploadASMProcessData", new object[] {
                        body}, this.UploadASMProcessDataOperationCompleted, userState);
        }
        
        private void OnUploadASMProcessDataOperationCompleted(object arg) {
            if ((this.UploadASMProcessDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadASMProcessDataCompleted(this, new UploadASMProcessDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadTSIData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadTSIData(string body) {
            object[] results = this.Invoke("UploadTSIData", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadTSIData(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadTSIData", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadTSIData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadTSIDataAsync(string body) {
            this.UploadTSIDataAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadTSIDataAsync(string body, object userState) {
            if ((this.UploadTSIDataOperationCompleted == null)) {
                this.UploadTSIDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadTSIDataOperationCompleted);
            }
            this.InvokeAsync("UploadTSIData", new object[] {
                        body}, this.UploadTSIDataOperationCompleted, userState);
        }
        
        private void OnUploadTSIDataOperationCompleted(object arg) {
            if ((this.UploadTSIDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadTSIDataCompleted(this, new UploadTSIDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadLightProofSmokeData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadLightProofSmokeData(string body) {
            object[] results = this.Invoke("UploadLightProofSmokeData", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadLightProofSmokeData(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadLightProofSmokeData", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadLightProofSmokeData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadLightProofSmokeDataAsync(string body) {
            this.UploadLightProofSmokeDataAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadLightProofSmokeDataAsync(string body, object userState) {
            if ((this.UploadLightProofSmokeDataOperationCompleted == null)) {
                this.UploadLightProofSmokeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadLightProofSmokeDataOperationCompleted);
            }
            this.InvokeAsync("UploadLightProofSmokeData", new object[] {
                        body}, this.UploadLightProofSmokeDataOperationCompleted, userState);
        }
        
        private void OnUploadLightProofSmokeDataOperationCompleted(object arg) {
            if ((this.UploadLightProofSmokeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadLightProofSmokeDataCompleted(this, new UploadLightProofSmokeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadFilterSmokeData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadFilterSmokeData(string body) {
            object[] results = this.Invoke("UploadFilterSmokeData", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadFilterSmokeData(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadFilterSmokeData", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadFilterSmokeData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFilterSmokeDataAsync(string body) {
            this.UploadFilterSmokeDataAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadFilterSmokeDataAsync(string body, object userState) {
            if ((this.UploadFilterSmokeDataOperationCompleted == null)) {
                this.UploadFilterSmokeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFilterSmokeDataOperationCompleted);
            }
            this.InvokeAsync("UploadFilterSmokeData", new object[] {
                        body}, this.UploadFilterSmokeDataOperationCompleted, userState);
        }
        
        private void OnUploadFilterSmokeDataOperationCompleted(object arg) {
            if ((this.UploadFilterSmokeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFilterSmokeDataCompleted(this, new UploadFilterSmokeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UpInspectionSignal", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpInspectionSignal(string stationCode, string inspectionNum, string lineCode, string uniqueString, string time, string startOrEnd) {
            object[] results = this.Invoke("UpInspectionSignal", new object[] {
                        stationCode,
                        inspectionNum,
                        lineCode,
                        uniqueString,
                        time,
                        startOrEnd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpInspectionSignal(string stationCode, string inspectionNum, string lineCode, string uniqueString, string time, string startOrEnd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpInspectionSignal", new object[] {
                        stationCode,
                        inspectionNum,
                        lineCode,
                        uniqueString,
                        time,
                        startOrEnd}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpInspectionSignal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpInspectionSignalAsync(string stationCode, string inspectionNum, string lineCode, string uniqueString, string time, string startOrEnd) {
            this.UpInspectionSignalAsync(stationCode, inspectionNum, lineCode, uniqueString, time, startOrEnd, null);
        }
        
        /// <remarks/>
        public void UpInspectionSignalAsync(string stationCode, string inspectionNum, string lineCode, string uniqueString, string time, string startOrEnd, object userState) {
            if ((this.UpInspectionSignalOperationCompleted == null)) {
                this.UpInspectionSignalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpInspectionSignalOperationCompleted);
            }
            this.InvokeAsync("UpInspectionSignal", new object[] {
                        stationCode,
                        inspectionNum,
                        lineCode,
                        uniqueString,
                        time,
                        startOrEnd}, this.UpInspectionSignalOperationCompleted, userState);
        }
        
        private void OnUpInspectionSignalOperationCompleted(object arg) {
            if ((this.UpInspectionSignalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpInspectionSignalCompleted(this, new UpInspectionSignalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/SetLogSoap", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetLogSoap(bool shouldLog) {
            object[] results = this.Invoke("SetLogSoap", new object[] {
                        shouldLog});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetLogSoap(bool shouldLog, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetLogSoap", new object[] {
                        shouldLog}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSetLogSoap(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetLogSoapAsync(bool shouldLog) {
            this.SetLogSoapAsync(shouldLog, null);
        }
        
        /// <remarks/>
        public void SetLogSoapAsync(bool shouldLog, object userState) {
            if ((this.SetLogSoapOperationCompleted == null)) {
                this.SetLogSoapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLogSoapOperationCompleted);
            }
            this.InvokeAsync("SetLogSoap", new object[] {
                        shouldLog}, this.SetLogSoapOperationCompleted, userState);
        }
        
        private void OnSetLogSoapOperationCompleted(object arg) {
            if ((this.SetLogSoapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLogSoapCompleted(this, new SetLogSoapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/GetParamLimitData", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetParamLimitData(string stationCode, string inspectionNum, string lineCode, string inspectionMethod) {
            object[] results = this.Invoke("GetParamLimitData", new object[] {
                        stationCode,
                        inspectionNum,
                        lineCode,
                        inspectionMethod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParamLimitData(string stationCode, string inspectionNum, string lineCode, string inspectionMethod, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParamLimitData", new object[] {
                        stationCode,
                        inspectionNum,
                        lineCode,
                        inspectionMethod}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetParamLimitData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetParamLimitDataAsync(string stationCode, string inspectionNum, string lineCode, string inspectionMethod) {
            this.GetParamLimitDataAsync(stationCode, inspectionNum, lineCode, inspectionMethod, null);
        }
        
        /// <remarks/>
        public void GetParamLimitDataAsync(string stationCode, string inspectionNum, string lineCode, string inspectionMethod, object userState) {
            if ((this.GetParamLimitDataOperationCompleted == null)) {
                this.GetParamLimitDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParamLimitDataOperationCompleted);
            }
            this.InvokeAsync("GetParamLimitData", new object[] {
                        stationCode,
                        inspectionNum,
                        lineCode,
                        inspectionMethod}, this.GetParamLimitDataOperationCompleted, userState);
        }
        
        private void OnGetParamLimitDataOperationCompleted(object arg) {
            if ((this.GetParamLimitDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParamLimitDataCompleted(this, new GetParamLimitDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadStationDeviceStatus", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadStationDeviceStatus(string body) {
            object[] results = this.Invoke("UploadStationDeviceStatus", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadStationDeviceStatus(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadStationDeviceStatus", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadStationDeviceStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadStationDeviceStatusAsync(string body) {
            this.UploadStationDeviceStatusAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadStationDeviceStatusAsync(string body, object userState) {
            if ((this.UploadStationDeviceStatusOperationCompleted == null)) {
                this.UploadStationDeviceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadStationDeviceStatusOperationCompleted);
            }
            this.InvokeAsync("UploadStationDeviceStatus", new object[] {
                        body}, this.UploadStationDeviceStatusOperationCompleted, userState);
        }
        
        private void OnUploadStationDeviceStatusOperationCompleted(object arg) {
            if ((this.UploadStationDeviceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadStationDeviceStatusCompleted(this, new UploadStationDeviceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadLineCheckPetrol", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadLineCheckPetrol(string body) {
            object[] results = this.Invoke("UploadLineCheckPetrol", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadLineCheckPetrol(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadLineCheckPetrol", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadLineCheckPetrol(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadLineCheckPetrolAsync(string body) {
            this.UploadLineCheckPetrolAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadLineCheckPetrolAsync(string body, object userState) {
            if ((this.UploadLineCheckPetrolOperationCompleted == null)) {
                this.UploadLineCheckPetrolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadLineCheckPetrolOperationCompleted);
            }
            this.InvokeAsync("UploadLineCheckPetrol", new object[] {
                        body}, this.UploadLineCheckPetrolOperationCompleted, userState);
        }
        
        private void OnUploadLineCheckPetrolOperationCompleted(object arg) {
            if ((this.UploadLineCheckPetrolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadLineCheckPetrolCompleted(this, new UploadLineCheckPetrolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UpLoadLineCheckDiesel", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpLoadLineCheckDiesel(string body) {
            object[] results = this.Invoke("UpLoadLineCheckDiesel", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpLoadLineCheckDiesel(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpLoadLineCheckDiesel", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpLoadLineCheckDiesel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadLineCheckDieselAsync(string body) {
            this.UpLoadLineCheckDieselAsync(body, null);
        }
        
        /// <remarks/>
        public void UpLoadLineCheckDieselAsync(string body, object userState) {
            if ((this.UpLoadLineCheckDieselOperationCompleted == null)) {
                this.UpLoadLineCheckDieselOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadLineCheckDieselOperationCompleted);
            }
            this.InvokeAsync("UpLoadLineCheckDiesel", new object[] {
                        body}, this.UpLoadLineCheckDieselOperationCompleted, userState);
        }
        
        private void OnUpLoadLineCheckDieselOperationCompleted(object arg) {
            if ((this.UpLoadLineCheckDieselCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadLineCheckDieselCompleted(this, new UpLoadLineCheckDieselCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/DownloadStationStaff", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadStationStaff(string cityCode, string stationCode) {
            object[] results = this.Invoke("DownloadStationStaff", new object[] {
                        cityCode,
                        stationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownloadStationStaff(string cityCode, string stationCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownloadStationStaff", new object[] {
                        cityCode,
                        stationCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDownloadStationStaff(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadStationStaffAsync(string cityCode, string stationCode) {
            this.DownloadStationStaffAsync(cityCode, stationCode, null);
        }
        
        /// <remarks/>
        public void DownloadStationStaffAsync(string cityCode, string stationCode, object userState) {
            if ((this.DownloadStationStaffOperationCompleted == null)) {
                this.DownloadStationStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadStationStaffOperationCompleted);
            }
            this.InvokeAsync("DownloadStationStaff", new object[] {
                        cityCode,
                        stationCode}, this.DownloadStationStaffOperationCompleted, userState);
        }
        
        private void OnDownloadStationStaffOperationCompleted(object arg) {
            if ((this.DownloadStationStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadStationStaffCompleted(this, new DownloadStationStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadEnvParamSensor", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadEnvParamSensor(string body) {
            object[] results = this.Invoke("UploadEnvParamSensor", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadEnvParamSensor(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadEnvParamSensor", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadEnvParamSensor(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadEnvParamSensorAsync(string body) {
            this.UploadEnvParamSensorAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadEnvParamSensorAsync(string body, object userState) {
            if ((this.UploadEnvParamSensorOperationCompleted == null)) {
                this.UploadEnvParamSensorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadEnvParamSensorOperationCompleted);
            }
            this.InvokeAsync("UploadEnvParamSensor", new object[] {
                        body}, this.UploadEnvParamSensorOperationCompleted, userState);
        }
        
        private void OnUploadEnvParamSensorOperationCompleted(object arg) {
            if ((this.UploadEnvParamSensorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadEnvParamSensorCompleted(this, new UploadEnvParamSensorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadDynamometerSelfCheck", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadDynamometerSelfCheck(string body) {
            object[] results = this.Invoke("UploadDynamometerSelfCheck", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadDynamometerSelfCheck(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadDynamometerSelfCheck", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadDynamometerSelfCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDynamometerSelfCheckAsync(string body) {
            this.UploadDynamometerSelfCheckAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadDynamometerSelfCheckAsync(string body, object userState) {
            if ((this.UploadDynamometerSelfCheckOperationCompleted == null)) {
                this.UploadDynamometerSelfCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDynamometerSelfCheckOperationCompleted);
            }
            this.InvokeAsync("UploadDynamometerSelfCheck", new object[] {
                        body}, this.UploadDynamometerSelfCheckOperationCompleted, userState);
        }
        
        private void OnUploadDynamometerSelfCheckOperationCompleted(object arg) {
            if ((this.UploadDynamometerSelfCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDynamometerSelfCheckCompleted(this, new UploadDynamometerSelfCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadParasiticPowerSelfCheck", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadParasiticPowerSelfCheck(string body) {
            object[] results = this.Invoke("UploadParasiticPowerSelfCheck", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadParasiticPowerSelfCheck(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadParasiticPowerSelfCheck", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadParasiticPowerSelfCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadParasiticPowerSelfCheckAsync(string body) {
            this.UploadParasiticPowerSelfCheckAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadParasiticPowerSelfCheckAsync(string body, object userState) {
            if ((this.UploadParasiticPowerSelfCheckOperationCompleted == null)) {
                this.UploadParasiticPowerSelfCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadParasiticPowerSelfCheckOperationCompleted);
            }
            this.InvokeAsync("UploadParasiticPowerSelfCheck", new object[] {
                        body}, this.UploadParasiticPowerSelfCheckOperationCompleted, userState);
        }
        
        private void OnUploadParasiticPowerSelfCheckOperationCompleted(object arg) {
            if ((this.UploadParasiticPowerSelfCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadParasiticPowerSelfCheckCompleted(this, new UploadParasiticPowerSelfCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadFlowmeterSelfCheck", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadFlowmeterSelfCheck(string body) {
            object[] results = this.Invoke("UploadFlowmeterSelfCheck", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadFlowmeterSelfCheck(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadFlowmeterSelfCheck", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadFlowmeterSelfCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFlowmeterSelfCheckAsync(string body) {
            this.UploadFlowmeterSelfCheckAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadFlowmeterSelfCheckAsync(string body, object userState) {
            if ((this.UploadFlowmeterSelfCheckOperationCompleted == null)) {
                this.UploadFlowmeterSelfCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFlowmeterSelfCheckOperationCompleted);
            }
            this.InvokeAsync("UploadFlowmeterSelfCheck", new object[] {
                        body}, this.UploadFlowmeterSelfCheckOperationCompleted, userState);
        }
        
        private void OnUploadFlowmeterSelfCheckOperationCompleted(object arg) {
            if ((this.UploadFlowmeterSelfCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFlowmeterSelfCheckCompleted(this, new UploadFlowmeterSelfCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadGasAnalyzerSelfCheck", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadGasAnalyzerSelfCheck(string body) {
            object[] results = this.Invoke("UploadGasAnalyzerSelfCheck", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadGasAnalyzerSelfCheck(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadGasAnalyzerSelfCheck", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadGasAnalyzerSelfCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadGasAnalyzerSelfCheckAsync(string body) {
            this.UploadGasAnalyzerSelfCheckAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadGasAnalyzerSelfCheckAsync(string body, object userState) {
            if ((this.UploadGasAnalyzerSelfCheckOperationCompleted == null)) {
                this.UploadGasAnalyzerSelfCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadGasAnalyzerSelfCheckOperationCompleted);
            }
            this.InvokeAsync("UploadGasAnalyzerSelfCheck", new object[] {
                        body}, this.UploadGasAnalyzerSelfCheckOperationCompleted, userState);
        }
        
        private void OnUploadGasAnalyzerSelfCheckOperationCompleted(object arg) {
            if ((this.UploadGasAnalyzerSelfCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadGasAnalyzerSelfCheckCompleted(this, new UploadGasAnalyzerSelfCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadLightProofSmokeSelfCheck", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadLightProofSmokeSelfCheck(string body) {
            object[] results = this.Invoke("UploadLightProofSmokeSelfCheck", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadLightProofSmokeSelfCheck(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadLightProofSmokeSelfCheck", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadLightProofSmokeSelfCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadLightProofSmokeSelfCheckAsync(string body) {
            this.UploadLightProofSmokeSelfCheckAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadLightProofSmokeSelfCheckAsync(string body, object userState) {
            if ((this.UploadLightProofSmokeSelfCheckOperationCompleted == null)) {
                this.UploadLightProofSmokeSelfCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadLightProofSmokeSelfCheckOperationCompleted);
            }
            this.InvokeAsync("UploadLightProofSmokeSelfCheck", new object[] {
                        body}, this.UploadLightProofSmokeSelfCheckOperationCompleted, userState);
        }
        
        private void OnUploadLightProofSmokeSelfCheckOperationCompleted(object arg) {
            if ((this.UploadLightProofSmokeSelfCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadLightProofSmokeSelfCheckCompleted(this, new UploadLightProofSmokeSelfCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.nnhb.gov.cn/UploadTSIGasAnalyzerSelfCheck", RequestNamespace="http://www.nnhb.gov.cn/", ResponseNamespace="http://www.nnhb.gov.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadTSIGasAnalyzerSelfCheck(string body) {
            object[] results = this.Invoke("UploadTSIGasAnalyzerSelfCheck", new object[] {
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadTSIGasAnalyzerSelfCheck(string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadTSIGasAnalyzerSelfCheck", new object[] {
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUploadTSIGasAnalyzerSelfCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadTSIGasAnalyzerSelfCheckAsync(string body) {
            this.UploadTSIGasAnalyzerSelfCheckAsync(body, null);
        }
        
        /// <remarks/>
        public void UploadTSIGasAnalyzerSelfCheckAsync(string body, object userState) {
            if ((this.UploadTSIGasAnalyzerSelfCheckOperationCompleted == null)) {
                this.UploadTSIGasAnalyzerSelfCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadTSIGasAnalyzerSelfCheckOperationCompleted);
            }
            this.InvokeAsync("UploadTSIGasAnalyzerSelfCheck", new object[] {
                        body}, this.UploadTSIGasAnalyzerSelfCheckOperationCompleted, userState);
        }
        
        private void OnUploadTSIGasAnalyzerSelfCheckOperationCompleted(object arg) {
            if ((this.UploadTSIGasAnalyzerSelfCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadTSIGasAnalyzerSelfCheckCompleted(this, new UploadTSIGasAnalyzerSelfCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.nnhb.gov.cn/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.nnhb.gov.cn/", IsNullable=false)]
    public partial class VIToken : System.Web.Services.Protocols.SoapHeader {
        
        private string guidStringField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string GuidString {
            get {
                return this.guidStringField;
            }
            set {
                this.guidStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetDateTimeNowCompletedEventHandler(object sender, GetDateTimeNowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateTimeNowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateTimeNowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DownloadAcceptanceCompletedEventHandler(object sender, DownloadAcceptanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadAcceptanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadAcceptanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DownloadAcceptanceDataCompletedEventHandler(object sender, DownloadAcceptanceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadAcceptanceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadAcceptanceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DownloadVehicleCompletedEventHandler(object sender, DownloadVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadInspectionDataCompletedEventHandler(object sender, UploadInspectionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInspectionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInspectionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadLDDataCompletedEventHandler(object sender, UploadLDDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadLDDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadLDDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadLDProcessDataCompletedEventHandler(object sender, UploadLDProcessDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadLDProcessDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadLDProcessDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadASMDataCompletedEventHandler(object sender, UploadASMDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadASMDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadASMDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadASMProcessDataCompletedEventHandler(object sender, UploadASMProcessDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadASMProcessDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadASMProcessDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadTSIDataCompletedEventHandler(object sender, UploadTSIDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadTSIDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadTSIDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadLightProofSmokeDataCompletedEventHandler(object sender, UploadLightProofSmokeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadLightProofSmokeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadLightProofSmokeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadFilterSmokeDataCompletedEventHandler(object sender, UploadFilterSmokeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFilterSmokeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFilterSmokeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UpInspectionSignalCompletedEventHandler(object sender, UpInspectionSignalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpInspectionSignalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpInspectionSignalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void SetLogSoapCompletedEventHandler(object sender, SetLogSoapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLogSoapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetLogSoapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetParamLimitDataCompletedEventHandler(object sender, GetParamLimitDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParamLimitDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParamLimitDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadStationDeviceStatusCompletedEventHandler(object sender, UploadStationDeviceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadStationDeviceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadStationDeviceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadLineCheckPetrolCompletedEventHandler(object sender, UploadLineCheckPetrolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadLineCheckPetrolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadLineCheckPetrolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UpLoadLineCheckDieselCompletedEventHandler(object sender, UpLoadLineCheckDieselCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadLineCheckDieselCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadLineCheckDieselCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DownloadStationStaffCompletedEventHandler(object sender, DownloadStationStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadStationStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadStationStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadEnvParamSensorCompletedEventHandler(object sender, UploadEnvParamSensorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadEnvParamSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadEnvParamSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadDynamometerSelfCheckCompletedEventHandler(object sender, UploadDynamometerSelfCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDynamometerSelfCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDynamometerSelfCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadParasiticPowerSelfCheckCompletedEventHandler(object sender, UploadParasiticPowerSelfCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadParasiticPowerSelfCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadParasiticPowerSelfCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadFlowmeterSelfCheckCompletedEventHandler(object sender, UploadFlowmeterSelfCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFlowmeterSelfCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFlowmeterSelfCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadGasAnalyzerSelfCheckCompletedEventHandler(object sender, UploadGasAnalyzerSelfCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadGasAnalyzerSelfCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadGasAnalyzerSelfCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadLightProofSmokeSelfCheckCompletedEventHandler(object sender, UploadLightProofSmokeSelfCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadLightProofSmokeSelfCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadLightProofSmokeSelfCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UploadTSIGasAnalyzerSelfCheckCompletedEventHandler(object sender, UploadTSIGasAnalyzerSelfCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadTSIGasAnalyzerSelfCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadTSIGasAnalyzerSelfCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
