//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="HBServiceSoap", Namespace="http://tempuri.org/")]
public partial class HBService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback QueryObjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback WriteObjectOperationCompleted;
    
    /// <remarks/>
    public HBService() {
        this.Url = "http://211.149.222.130:24009/HBService.asmx";
    }
    public HBService(string url)
    {
        this.Url = url;
    }
    /// <remarks/>
    public event QueryObjectCompletedEventHandler QueryObjectCompleted;
    
    /// <remarks/>
    public event WriteObjectCompletedEventHandler WriteObjectCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryObject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string QueryObject(string xtlb, string jkid, string xmlDoc, string yhdh, string mm) {
        object[] results = this.Invoke("QueryObject", new object[] {
                    xtlb,
                    jkid,
                    xmlDoc,
                    yhdh,
                    mm});
        ini.INIIO.saveSocketLogInf("【QueryObject】" + "[xtlb=" + xtlb + "]" + "[jkid=" + jkid + "]" + "[xmlDoc=...]" + "[yhdh=" + yhdh + "]" + "[mm=" + mm + "]");
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginQueryObject(string xtlb, string jkid, string xmlDoc, string yhdh, string mm, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("QueryObject", new object[] {
                    xtlb,
                    jkid,
                    xmlDoc,
                    yhdh,
                    mm}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndQueryObject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void QueryObjectAsync(string xtlb, string jkid, string xmlDoc, string yhdh, string mm) {
        this.QueryObjectAsync(xtlb, jkid, xmlDoc, yhdh, mm, null);
    }
    
    /// <remarks/>
    public void QueryObjectAsync(string xtlb, string jkid, string xmlDoc, string yhdh, string mm, object userState) {
        if ((this.QueryObjectOperationCompleted == null)) {
            this.QueryObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryObjectOperationCompleted);
        }
        this.InvokeAsync("QueryObject", new object[] {
                    xtlb,
                    jkid,
                    xmlDoc,
                    yhdh,
                    mm}, this.QueryObjectOperationCompleted, userState);
    }
    
    private void OnQueryObjectOperationCompleted(object arg) {
        if ((this.QueryObjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.QueryObjectCompleted(this, new QueryObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteObject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string WriteObject(string xtlb, string jkid, string xmlDoc, string yhdh, string mm) {
        object[] results = this.Invoke("WriteObject", new object[] {
                    xtlb,
                    jkid,
                    xmlDoc,
                    yhdh,
                    mm});
        ini.INIIO.saveSocketLogInf("【WriteObject】" + "[xtlb=" + xtlb + "]" + "[jkid=" + jkid + "]" + "[xmlDoc=...]" + "[yhdh=" + yhdh + "]" + "[mm=" + mm + "]");
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginWriteObject(string xtlb, string jkid, string xmlDoc, string yhdh, string mm, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("WriteObject", new object[] {
                    xtlb,
                    jkid,
                    xmlDoc,
                    yhdh,
                    mm}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndWriteObject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void WriteObjectAsync(string xtlb, string jkid, string xmlDoc, string yhdh, string mm) {
        this.WriteObjectAsync(xtlb, jkid, xmlDoc, yhdh, mm, null);
    }
    
    /// <remarks/>
    public void WriteObjectAsync(string xtlb, string jkid, string xmlDoc, string yhdh, string mm, object userState) {
        if ((this.WriteObjectOperationCompleted == null)) {
            this.WriteObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteObjectOperationCompleted);
        }
        this.InvokeAsync("WriteObject", new object[] {
                    xtlb,
                    jkid,
                    xmlDoc,
                    yhdh,
                    mm}, this.WriteObjectOperationCompleted, userState);
    }
    
    private void OnWriteObjectOperationCompleted(object arg) {
        if ((this.WriteObjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.WriteObjectCompleted(this, new WriteObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void QueryObjectCompletedEventHandler(object sender, QueryObjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class QueryObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal QueryObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void WriteObjectCompletedEventHandler(object sender, WriteObjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class WriteObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal WriteObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
